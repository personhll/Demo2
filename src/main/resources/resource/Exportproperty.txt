
<!doctype html>
<html>
	<head>
		<meta charset="utf-8"><meta http-equiv="Expires" content="0"><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Cache-control" content="no-cache"><meta http-equiv="Cache" content="no-cache">
		<title>投诉详情</title>
		<script src="../../../js/vue/vue.js"></script>
		<script src="../../../js/jquery-1.7.2.min.js"></script>
		<!-- 国际化 -->
		<script src="../../../js/vue/i18n/vue-i18n.js"></script>
		<script src="../../../js/vue/i18n/language/zh.js"></script>
		<script src="../../../js/vue/i18n/language/en.js"></script>
		<!-- ElementUi -->
		<script src="../../../js/vue/element-ui/lib/index.js"></script>
		<!-- 自定义组件 -->
		<script src="../../../js/myelement.js"></script>
		<script src="../../../js/vue/page.js"></script>

		<link href="../../../js/vue/element-ui/lib/theme-chalk/index.css" rel="stylesheet">
		<link href="../../../css/myelement.css" rel="stylesheet">
		<link href="../../../css/iconfont.css" rel="stylesheet">
		<link href="../../../css/page.css" rel="stylesheet">

		<link href="../../../css/myStyleByClass.css" rel="stylesheet">
		<link href="//at.alicdn.com/t/font_2760480_udlo32lprt.css" rel="stylesheet">
	</head>

	<body>
		<div id="vbody">
			<div id="page_root"
				v-loading="loading_approval"
				element-loading-text=""
				element-loading-spinner="el-icon-loading"
				element-loading-background="rgba(151, 151, 151, 0.5)"
			>
				<div ref="popup_body">
					<div class="el-dialog__header">
						<div class="dialog-title">
							<span v-if="type_title"><i class="iconfont icon-shuxian"></i>{{type_title}} {{formDataObjBytype[complaint_detail[0].code].doc_code}}</span>
							<span v-else><i class="iconfont icon-shuxian"></i>{{title}}</span>
							<div v-if="isbrowse" style="float: right;">
								<el-button-group style="margin-left: 3px;">
									<el-button icon="el-icon-close" type="default" @click="closeDialog">{{$t('a7')}}</el-button>
								</el-button-group>
							</div>
							<div v-else style="float: right;">
								<el-button-group v-if="approval && !finshed" style="margin: 0px 20px;">
									<el-button icon="el-icon-success" type="success" @click="onpassApproval">通 过</el-button>
								</el-button-group>
								<el-button-group v-if="approval && !finshed" style="margin: 0px 20px;">
									<el-button icon="el-icon-top-right" @click="turnTo">转 办</el-button>
								</el-button-group>
								<el-button-group v-if="approval && !finshed" style="margin: 0px 20px;">
									<el-button icon="el-icon-warning" type="danger" @click="onrefuseApproval">拒 绝</el-button>
								</el-button-group>

								<el-button-group style="margin-left: 3px;">
									<el-button icon="el-icon-top" v-if="!approval" type="" @click="submitCMP" :loading="loading_submit">{{$t('a5')}}</el-button>
									<el-button icon="el-icon-check" v-if="!approval" type="primary" @click="saveCMP" :loading="loading_save">{{$t('a8')}}</el-button>
									<el-button icon="el-icon-close" icon="el-icon-close" type="default" @click="closeDialog">{{$t('a7')}}</el-button>
								</el-button-group>

							</div>
						</div>
					</div>

					<div :key="'a' + tabKey">
						<el-tabs v-if="popupParames.sceneCode == 'approval' && approval_status == 2" v-model="activeName" @tab-click="handleClick">
							<el-tab-pane label="投诉制单" name="first"></el-tab-pane>
							<el-tab-pane label="客投处理" name="second"></el-tab-pane>
							<el-tab-pane label="品质记录" name="third"></el-tab-pane>
						</el-tabs>
						<el-tabs v-else-if="popupParames.sceneCode == 'approval' && approval_status == 1" v-model="activeName" @tab-click="handleClick">
							<el-tab-pane label="投诉制单" name="first"></el-tab-pane>
							<el-tab-pane label="客投处理" name="second"></el-tab-pane>
						</el-tabs>
						<el-tabs v-else-if="popupParames.sceneCode == 'approval'" v-model="activeName" @tab-click="handleClick">
							<el-tab-pane label="投诉制单" name="first"></el-tab-pane>
						</el-tabs>
					</div>

					<div>
						<div v-if="activeName=='first'" class="el-dialog__body" v-loading="loading_getall">
							<el-collapse v-model="activeCollapseNames">
								<el-collapse-item v-for="(complaint_item, key) in complaint_detail" :name="complaint_item.code" :key="key">
									<template slot="title">
										<div class="item_title" align="left">
											{{complaint_item.name}}
											<i class="el-icon-edit"></i>
										</div>
									</template>
									<div v-if="complaint_item.type == 'form'" class="aa1">
										<h-form
											ref="form1"
											:form-attr="formAttrBytype[complaint_item.code]"
											:table-fields="complaint_item.fields"
											:form-data="formDataObjBytype[complaint_item.code]"

											v-on:remote-method="formRemoteMethod"
											v-on:visible-change="cellVisibleChange"
											v-on:select-change="onSelectChange"
											v-on:show-popup="(obj)=>showPopup(obj, complaint_item.code)"
											v-on:button-click="buttonClick"
											v-on:form-change="(obj)=>formChange(obj, complaint_item.code)"
											v-on:empty-popup="emptyPopup"
										>
										</h-form>
									</div>
									<!-- 投诉信息 -->
									<div v-else-if="complaint_item.type == 'form_tsxx_gk'" class="aa2">
										<h-form
											ref="form1"
											:form-attr="formAttrBytype[complaint_item.code]"
											:table-fields="complaint_item.fields"
											:form-data="formDataObjBytype[complaint_item.code]"

											v-on:visible-change="cellVisibleChange"
											v-on:remote-method="formRemoteMethod"
											v-on:show-popup="(obj)=>showPopup(obj, complaint_item.code)"
											v-on:button-click="buttonClick"
										>
										</h-form>
										<h-table
											ref="table1"
											:table-attr="tableAttr"
											:table-fields="tableFields_tsxx_gk"
											:table-data="tableDataBytype[complaint_item.code]"
											:table-height="tableHeight"
											:is-pagination="false"
											>
										</h-table>
									</div>
									<!-- 反馈信息 -->
									<div v-if="complaint_item.type == 'form_fkxx_gk'" class="aa1">
										<h-form
											ref="form1"
											:form-attr="formAttrBytype[complaint_item.code]"
											:table-fields="complaint_item.fields"
											:form-data="formDataObjBytype[complaint_item.code]"

											v-on:remote-method="formRemoteMethod"
											v-on:visible-change="cellVisibleChange"
											v-on:show-popup="(obj)=>showPopup(obj, complaint_item.code)"
											v-on:button-click="buttonClick"
											v-on:select-change="onSelectChange"
											v-on:form-change="(obj)=>formChange(obj, complaint_item.code)"
										>
										</h-form>
										<!-- 订单附件显示 -->
										<div v-if="(popupParames.sceneCode == 'browse' || popupParames.sceneCode == 'approval')" style="margin: 10px; display: inline-block;">{{$t('Attachment')}}</div>
										<el-button v-if="(popupParames.sceneCode == 'browse' || popupParames.sceneCode == 'approval') " type="text" style="margin-left: 30px; font-size: 14px;" v-for="(item,index) in attachList" :key="index" @click="downLoadAttach(item.url,item.name)">{{ item.name }}</el-button>

										<!-- 附件上传 -->
										<el-upload
											class="upload-demo"
											:action="upFileUrl"
											multiple
											:limit="3"
											:on-success="handleAvatarSuccess"
											:file-list="fileList"
											:before-upload="onBeforeUpload"
											:before-remove="beforeRemove"
											style="width: 40%; display: inline-block;">
											<el-button v-if="popupParames.sceneCode == 'add' || popupParames.sceneCode == 'edit'" icon="el-icon-upload" type="text" style="font-size: 14px;">{{$t('UpdateAttachment')}}</el-button>
										</el-upload>
									</div>

									<div v-else-if="complaint_item.type == 'requiredfields'" class="">
										<h-form
											ref="form1"
											:form-attr="formAttrBytype[complaint_item.code]"
											:table-fields="formFields_requiredfields"
											:form-data="formDataObjBytype[complaint_item.code]"
											v-on:show-popup="showPopup"
										>
										</h-form>
										<div v-if="!(isbrowse || approval)" style="text-align: right;">
											<el-button-group >
												<el-button icon="el-icon-plus" @click="onPopupByUploadFile(complaint_item.code)">添加附件</el-button>
											</el-button-group>
										</div>
										<h-table
											ref="table1"
											:table-attr="tableAttr"
											:table-fields="tableFields_requiredfields"
											:table-data="tableDataBytype[complaint_item.code]"
											:table-height="tableHeight"
											:is-pagination="false"
											>
										</h-table>
									</div>
									<div v-else-if="complaint_item.type == 'annex'" class="">
										<h-form
											ref="form1"
											:form-attr="formAttrBytype[complaint_item.code]"
											:table-fields="formFields_annex"
											:form-data="formDataObjBytype[complaint_item.code]"

											v-on:select-change="onSelectChange"
											v-on:show-popup="showPopup"
										>
										</h-form>

										<div v-if="popupParames.sceneCode == 'add' || popupParames.sceneCode == 'edit'">
											<el-button-group style="margin-left: .7em; margin-top: -2em;">
												<el-button v-if="complaint_type != 'gm' && language != 'en'" icon="el-icon-remove" type="text" @click="cleanMailUser">清除相关人员</el-button>
											</el-button-group>
										</div>

										<!-- 订单附件显示 -->
										<div v-if="(popupParames.sceneCode == 'browse' || popupParames.sceneCode == 'edit' || popupParames.sceneCode == 'approval')" style="margin: 10px; display: inline-block;">{{$t('Attachment')}}</div>
										<el-button v-if="(popupParames.sceneCode == 'browse' || popupParames.sceneCode == 'edit' || popupParames.sceneCode == 'approval') " type="text" style="margin-left: 30px; font-size: 14px;" v-for="(item,index) in attachList" :key="index" @click="downLoadAttach(item.url,item.name)">{{ item.name }}</el-button>

										<!-- 附件上传 -->
										<el-upload
											class="upload-demo"
											:action="upFileUrl"
											multiple
											:limit="3"
											:on-success="handleAvatarSuccess"
											:file-list="fileList"
											:before-upload="onBeforeUpload"
											:before-remove="beforeRemove"
											style="width: 40%; display: inline-block;">
											<el-button v-if="(popupParames.sceneCode == 'add' || popupParames.sceneCode == 'edit') && complaint_type == 'st'" icon="el-icon-upload" type="text" style="font-size: 14px;">{{$t('UpdateAttachment2')}}</el-button>
											<el-button v-if="(popupParames.sceneCode == 'add' || popupParames.sceneCode == 'edit') && complaint_type !== 'st'" icon="el-icon-upload" type="text" style="font-size: 14px;">{{$t('UpdateAttachment')}}</el-button>
										</el-upload>
									</div>
								</el-collapse-item>
							</el-collapse>
						</div>
					</div>

					<div :key="'b' +tabKey" v-show="(approval_status==1 || approval_status==2) && activeName=='second'" style="margin-left: 2em; margin-right: 2em;">
						<h-form
							ref="form1"
							:form-attr="formAttr_approval_kt"
							:table-fields="tableFields_kt"
							:form-data="formData_kt"
							v-on:select-change="onSelectChange"
							v-on:show-popup="showPopup"
							v-on:formcallspan-click="onHeaderClick"
							>
						</h-form>

						<!-- 客投附件显示 -->
						<div  style="margin: 10px; display: inline-block;">{{$t('Attachment')}}</div>
						<div>
							<el-button type="text" style="margin-left: 30px; font-size: 14px;" v-for="(item,index) in attachList_kt" :key="index" @click="downLoadAttach(item.url,item.name)">{{ item.name }}</el-button>
						</div>

						<!-- 客投附件上传 -->
						<el-upload
							class="upload-demo"
							:action="upFileUrl"
							multiple
							:limit="3"
							:on-success="handleAvatarSuccess_kt"
							:file-list="fileList"
							:before-upload="onBeforeUpload"
							:before-remove="beforeRemove"
							style="width: 40%; display: inline-block;">
							<el-button v-if="(approval_status==1 || else_status==4) && editable==1" icon="el-icon-upload" type="text" style="font-size: 14px;">{{$t('UpdateAttachment')}}</el-button>
						</el-upload>
					</div>

					<div :key="'c' +tabKey" v-show="approval_status==2 && activeName=='third'" style="margin-left: 2em; margin-right: 2em;">
						<h-form
							ref="form1"
							:form-attr="formAttr_approval_pz"
							:table-fields="tableFields_pz"
							:form-data="formData_pz"
							v-on:select-change="onSelectChange"
							v-on:form-change="formChange"
							>
						</h-form>

						<!-- 品质附件显示 -->
						<div  style="margin: 10px; display: inline-block;">{{$t('Attachment')}}</div>
						<div>
							<el-button type="text" style="margin-left: 30px; font-size: 14px;" v-for="(item,index) in attachList_pz" :key="index" @click="downLoadAttach(item.url,item.name)">{{ item.name }}</el-button>
						</div>

						<!-- 品质附件上传 -->
						<el-upload
							class="upload-demo"
							:action="upFileUrl"
							multiple
							:limit="3"
							:on-success="handleAvatarSuccess_pz"
							:file-list="fileList"
							:before-upload="onBeforeUpload"
							:before-remove="beforeRemove"
							style="width: 40%; display: inline-block;">
							<el-button v-if="approval_status==2 && editable==1" icon="el-icon-upload" type="text" style="font-size: 14px;">{{$t('UpdateAttachment')}}</el-button>
						</el-upload>
					</div>
				</div>

				<!-- 审批原因 -->
				<el-dialog :title="approvalPlaceholder" class="act_reason" :visible.sync="reasonvisible" v-if="reasonvisible" :show-close="false" height="50%">
					<div class="el-dialog-title">
						<div slot="footer" class="el-dialog-footer" style="float: right; margin-bottom: 20px;">
							<el-button type="default" @click="reasonvisible = false">取 消</el-button>
							<el-button type="primary" @click="saveReason">确 定</el-button>
						</div>
					</div>
					<el-input
						type="textarea"
						:autosize="{ minRows: 4, maxRows: 10}"
						placeholder="请输入原因"
						v-model="textarea2">
					</el-input>
				</el-dialog>
			</div>

			<div id="page_loading" style="position: absolute; top:0px; width: 100vw; height: 100vh;">
				<div class="spinner">
				  <div class="cube1"></div>
				  <div class="cube2"></div>
				</div>
			</div>
		</div>

		<script type="text/javascript">
			//new vue时可选择合适的Vue配置
			new BasicsVue({
				el: "#vbody",
				data: {
					title: "",
					type_title: "",
					pageCode: "",
					//h-table的高度计算类型
					pageAttr: {
						heightType: "page"
					},
					//数据对象
					dataname: "customerInfo",
					//数据默认排序
					orderby: "create_time desc",
					//默认filter
					filterTxt: "",
					//默认filterObj
					filterObjBydefault: {
						//status: "open"
					},
					//默认查询请求参数
					paramObjBydefault: {
						//empId: localStorage.getItem("emp_id")
					},

					//预加载数据设置
					dataRequest: [
						{//开票公司
							isClientMode: false,
							code: "id",
							label: "name",
							dataname: "salesgroup",
							name: "salesgroup",
							filter: " is_disable='1'"
						}
					],
					//预加载所得数据
					dataRequestObj: {},

					activeName: "first",

					tableFields_hw: [
						{field: "remark", name: "评论", enname: "Comments", isshow: "T", type: "textarea"}
					],

					formData_hw: {},

					//投诉数据
					activeCollapseNames: [],
					disabled_complaint_type: false,
					complaint_type: "",
					complaint_type_options: [
						{value: 'gm', label: '冠脉投诉'},
						{value: 'st', label: '神通投诉'},
						{value: 'xm', label: '心脉投诉'},
						{value: 'gj', label: '国际投诉'},
						{value: 'ts', label: '特殊投诉'},
						{value: 'dsl', label: '电生理投诉'},
						{value: 'yt', label: '优通投诉'},
						{value: 'gk', label: '骨科投诉'}
					],
					complaint_type_obj: {
						gm: "冠脉投诉",
						st: "神通投诉",
						xm: "心脉投诉",
						gj: "国际投诉",
						ts: "特殊投诉",
						dsl: "电生理投诉",
						yt: "优通投诉",
						gk: "骨科投诉",
					},

					complaint_detail: [],
					formFieldsObjBytype: {},
					formDataObjBytype: {},
					tableDataBytype: {},

					formDataObj_cmp: {},
					newRowDefault: {
						id: uuid_short(),
						code: createCode("DJ"),
						doc_code: createCode("TS"),
						doc_type: "",
						state: "Input",
						doc_date: createDate(),
						create_time: createDatetime(),
						org_id: window.top.userinfo.org.id,
						org_code: window.top.userinfo.org.code,
						org_name: window.top.userinfo.org.name,
						operator_code: window.top.userinfo.employee.ad_name,
						operator_name: window.top.userinfo.employee.name,
					},
					org_id: window.top.userinfo.org.id,
					org_code: window.top.userinfo.org.code,

					approvalPlaceholder: "",

					showExchange: false,

					dslhw: false,

					//投诉项
					complaint_type_detail: {
						//冠脉 gm
						gm: [
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
							{code: "bbbwqk", name: "病变部位情况", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "ssfjpp", name: "手术附件品牌", type: "form", fields: []},
							{code: "qtx", name: "术者评价", type: "annex", fields: []},
						],

						//神通 st
						st: [
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
							{code: "bbbwqk", name: "病变部位情况", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "qtx", name: "其它项", type: "annex", fields: []},
						],

						//心脉 xm
						xm: [
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
							{code: "bbbwqk", name: "病变部位情况", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "qtx", name: "其它项", type: "annex", fields: []},
						],

						//电生理 dsl
						dsl: [
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "qtx", name: "其它项", type: "annex", fields: []},
						],

						//优通 yt
						yt: [
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者情况", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "qtx", name: "其它项", type: "annex", fields: []},
						],

						//国际 gj
						gj: [
							{code: "tsxx", name: "Fill Feedback Form", type: "form", fields: []},
						],

						//特殊 ts
						ts: [
							{code: "btzd", name: "必填字段", type: "requiredfields", fields: []},
							{code: "tsxx", name: "投诉信息", type: "form", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
							{code: "bbbwqk", name: "病变部位情况", type: "form", fields: []},
							{code: "ssqk", name: "手术情况", type: "form", fields: []},
							{code: "ssfjpp", name: "手术附件", type: "form", fields: []},
						],

						//骨科 gk
						gk: [
							{code: "tsxx", name: "投诉信息", type: "form_tsxx_gk", fields: []},
							{code: "fkxx", name: "反馈信息", type: "form_fkxx_gk", fields: []},
							{code: "hzzl", name: "患者资料", type: "form", fields: []},
						],
					},
					//反馈信息 cmp_feedback 问题类型 cmp_feedback_questionclassify 补救措施cmp_feedback_remedies
					complaint_type_fkxx: {
						//冠脉 gm
						gm: [],

						//神通 st
						st: [],

						//心脉 xm
						xm: [],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [],

						//电生理 dsl
						dsl: [],

						//优通 yt
						yt: [],

						//骨科 gk
						gk: [
							{isshow: "T", field: "happen_date", name: "事件发生日期", type: "date", required: true},
							{isshow: "T", field: "aware_date", name: "销售知悉日期", type: "date", required: true},
							{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
							//
							//（术前，术中，术后，无手术，未知
							{isshow: "T", field: "happen_timeslot_code", name: "发生时间段", type: "select", options: [
								{label: "术前",value: "术前"},
								{label: "术中",value: "术中"},
								{label: "术后",value: "术后"},
								{label: "无手术",value: "无手术"},
								{label: "未知",value: "未知"}
							], required: true},
							{isshow: "T", field: "has_search", name: "是否涉及临床实验或上市后研究",labelwidth: "250px", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "T", field: "operation_again_date", name: "再次手术日期", type: "date"},

							{isshow: "T", field: "remedies", name: "补救措施", type: "checkboxobjlist", options: [
								{checkbox_field: "remedies1", name: "换用我司相同产品"},
								{checkbox_field: "remedies2", name: "换用我司其他产品", describe_field: {field: "remedies2_desc", name: "详细", isshow: true, labelwidth: "60px"}},
								{checkbox_field: "remedies3", name: "换用其他公司产品", describe_field: {field: "remedies3_desc", name: "品牌", isshow: true, labelwidth: "60px"}},
								{checkbox_field: "remedies4", name: "手术延后", describe_field: {field: "remedies4_desc", name: "延后时长", isshow: true, labelwidth: "60px"}},
								{checkbox_field: "remedies5", name: "其他措施", describe_field: {field: "remedies5_desc", name: "详细", isshow: true, labelwidth: "60px"}},
								{checkbox_field: "remedies6", name: "不适用"},
							], colspan: 3},
							{isshow: "T", field: "feedback_desc", name: "反馈详情", type: "textarea", required: true, colspan: 2},
							{isshow: "T", field: "suppose_code", name: "", type: "select", labelwidth: "10px", placeholder: "推测原因", options: [
								{label: "推测与产品质量有关",value: "quality"},
								{label: "推测与病灶等因素有关",value: "nidus"},
								{label: "其它",value: "other"},
							]},

							{isshow: "T", field: "questionclassify", name: "反馈问题分类", type: "checkboxobj", options: [
								{code: "功能", name: "功能"},
								{code: "装配", name: "装配"},
								{code: "包装", name: "包装"},
								{code: "标签", name: "标签"},
								{code: "无菌性", name: "无菌性"},
								{code: "尺寸偏差", name: "尺寸偏差"},
								{code: "混批", name: "混批"},
								{code: "外观", name: "外观"},
								{code: "其他", name: "其他"},
							], required: true, colspan: 3},

							{isshow: "T", field: "directions_used", name: "合并用药/械情况说明", labelwidth: "200px", required: true},

						],

					},

					remedies_map: [
						{id: "remedies1_id", code: "remedies1", name: "换用我司相同产品", desc: "remedies1_desc"},
						{id: "remedies2_id", code: "remedies2", name: "换用我司其他产品", desc: "remedies2_desc"},
						{id: "remedies3_id", code: "remedies3", name: "换用其他公司产品", desc: "remedies3_desc"},
						{id: "remedies4_id", code: "remedies4", name: "手术延后", desc: "remedies4_desc"},
						{id: "remedies5_id", code: "remedies5", name: "其他措施", desc: "remedies5_desc"},
						{id: "remedies6_id", code: "remedies6", name: "不适用", desc: "remedies6_desc"},
					],

					result_map: [
						{id: "result1_id", code: "result1", name: "死亡时间", desc: "result1_desc"},
						{id: "result2_id", code: "result2", name: "威胁生命", desc: "result2_desc"},
						{id: "result3_id", code: "result3", name: "机体功能、结构永久损伤", desc: "result3_desc"},
						{id: "result4_id", code: "result4", name: "需要内、外科治疗避免上述1,2,3中的情况", desc: "result4_desc"},
						{id: "result5_id", code: "result5", name: "需要延长住院时间", desc: "result5_desc"},
						{id: "result6_id", code: "result6", name: "无关患者健康的产品事件", desc: "result6_desc"},
					],

					//投诉信息cmp_apply 国际cmp_international
					tableFields_tsxx_gk: [
						{isshow: "T", field: "prod_code", name: "产品编码", minwidth: "120"},
						{isshow: "T", field: "prod_name", name: "描述", minwidth: "180", align: "left"},
						{isshow: "T", field: "licence_no", name: "注册证编号/备案凭证编号", width: "100", type: "input"},
						{isshow: "T", field: "prod_sku", name: "型号规格", width: "100"},
						{isshow: "T", field: "batch_no", name: "批号", width: "100"},
						{isshow: "T", field: "batch_sn", name: "序列号", width: "150"},
						{isshow: "T", field: "sales_date", name: "销售日期", width: "150", type: "date", formatter: "formatter_date"},
						{isshow: "T", field: "factory_name", name: "生产企业名称", minwidth: "180", align: "left", type: "input"},
						{isshow: "T", field: "prod_date", name: "生产日期", width: "150", type: "date", formatter: "formatter_date"},
						{isshow: "T", field: "valid_date", name: "有效期/失效日期", width: "150", type: "date", formatter: "formatter_date"},
						{isshow: "T", field: "has_return", name: "是否返回", width: "80", type: "select", formatterjson: "{\"1\": \"是\", \"0\": \"否\"}", options: [{label: "是",value: 1}, {label: "否",value: 0}]},
						{isshow: "T", field: "return_reason", name: "未返回原因", minwidth: "200",type: "textarea"},
						{isshow: "T", field: "qty_return", name: "返回数量", width: "80", type: "number", maxval_field: "qty", minval: 0},
						{isshow: "T", field: "has_degassing", name: "是否消毒", width: "80", type: "select", formatterjson: "{\"1\": \"是\", \"0\": \"否\"}", options: [{label: "是",value: 1}, {label: "否",value: 0}]},
					],
					complaint_type_tsxx: {
						//冠脉 gm
						gm: [
							{isshow: "T", field: "tw_id", name: "投诉单号", enname: "Complaint No", type: "span",colspan: 1},
							{isshow: "T", field: "tw_return_comments", name: "退回原因", enname: "Return Reason", type: "span", colspan: 2, disabled: true},
							{isshow: "T", field: "tw_complaint_validity", name: "投诉是否有效", enname: "Validity Of Complaint", type: "span", formatterjson: "{\"Yes\": \"有效\", \"No\": \"无效\"}", colspan: 1, disabled: true},
							{isshow: "T", field: "tw_quality_rel", name: "质量相关性", enname: "Quality correlation", type: "span", formatterjson: "{\"Yes\": \"相关\", \"No\": \"不相关\"}", colspan: 2, disabled: true},

							{isshow: "T", field: "customer_name", name: "代理商", enname: "Agent", type: "popup", options: [], props:{label: "name", value: "name"}, isrefresh:true, disabled: false},
							{isshow: "T", field: "sales_user_name", name: "销售姓名", enname: "Reporter's Name", type: "popup", required: true},
							{isshow: "T", field: "sales_user_phone", name: "销售电话", enname: "Reporter's Phone", required: true},//, pattern:"^1[34578]\\d{9}$"
							{isshow: "T", field: "sales_user_email", name: "邮箱地址", enname: "Reporter's Email address", required: true},//, pattern:"^1[34578]\\d{9}$"
							{isshow: "T", field: "salesgroup_company", name: "公司", enname: "Sales Org Name", type: "popup", required: true, disabled: true},
							{isshow: "T", field: "supplyer_name", name: "平台代理商", enname: "Platform Agent", type: "popup", options: [], props:{label: "name", value: "name"}, isrefresh:true, required: true},
							{isshow: "T", field: "receive_date", name: "知悉日期", enname: "Date of Event Awareness", type: "date", required: true},
							{isshow: "T", field: "prod_name", name: "产品名称", enname: "Product Name", type: "popup", required: true},
							{isshow: "T", field: "product_sku", name: "产品规格", enname: "Model", type: "popup", required: true},
							{isshow: "T", field: "batch_no", name: "批号", enname: "Batch No", type: "popup", required: true},
							{isshow: "T", field: "country", name: "国家", enname: "Distributor's Territory", type: "select", options: [
								{label: "中国",value: "China"},
								{label: "欧盟",value: "Euorapa"},
								{label: "美国",value: "United States"},
								{label: "台湾",value: "TaiWan"},
								{label: "日本",value: "Japan"},
								{label: "阿根廷",value: "Argentina"},
								{label: "埃及",value: "Egypt"},
								{label: "澳大利亚",value: "Australia"},
								{label: "巴基斯坦",value: "Pakistan"},
								{label: "巴西",value: "Brazil"},
								{label: "白俄罗斯",value: "Belarus"},
								{label: "波黑",value: "Bosnia and Herzegovina"},
								{label: "多米尼加",value: "Dominica"},
								{label: "俄罗斯",value: "Russian Federation"},
								{label: "厄瓜多尔",value: "Ecuador"},
								{label: "菲律宾",value: "Philippines"},
								{label: "哥伦比亚",value: "Colombia"},
								{label: "哥斯达黎加",value: "Costa Rica"},
								{label: "哈萨克斯坦",value: "Kazakhstan"},
								{label: "韩国",value: "Korea"},
								{label: "黑山",value: "Montenegro"},
								{label: "洪都拉斯",value: "Honduras"},
								{label: "马来西亚",value: "Malaysia"},
								{label: "秘鲁",value: "Peru"},
								{label: "墨西哥",value: "Mexico"},
								{label: "萨尔瓦多",value: "El Salvador"},
								{label: "沙特阿拉伯",value: "Saudi Arabia"},
								{label: "苏丹",value: "Sudan"},
								{label: "泰国",value: "Thailand"},
								{label: "土耳其",value: "Turkey"},
								{label: "土库曼斯坦",value: "Turkmenistan"},
								{label: "委内瑞拉",value: "Venezuela"},
								{label: "香港",value: "Hong Kong"},
								{label: "新加坡",value: "Singapore"},
								{label: "伊朗",value: "Iran"},
								{label: "以色列",value: "Israel"},
								{label: "印度",value: "India"},
								{label: "印尼",value: "Indonesia"},
								{label: "越南",value: "Vietnam"},
							], required: true},
							{isshow: "T", field: "udi", name: "UDI", required: true},

							{isshow: "T", field: "has_operation_data", name: "手术影像资料", enname: "Angiographic data returned?", type: "select", options: [{label: "有",value: 1}, {label: "无",value: 2}], required: true},
							{isshow: "T", field: "has_hurt", name: "是否对患者造成伤害", enname: "Abnormalities Resulted?", type: "select", options: [{label: "是",value: "Yes"}, {label: "否-无异常",value: "No abnormal"}], required: true},
							{isshow: "F", field: "hurt_type_code", name: "伤害表现", enname: "Health Impact", type: "select", options: [{label: "手术延时",value: "Prolonged procedure"}, {label: "需要接受外科手术",value: "Surgical intervention"}, {label: "需要接受另一次介入手术治疗",value: "Another PCI trial"}, {label: "血管夹层",value: "Vascular dissection"}, {label: "血管穿孔",value: "Vascular derforation"}, {label: "血栓形成（支架内）",value: "In-stent thrombosis"}, {label: "支架内再狭窄",value: "In-stent restenosis"}, {label: "术中死亡",value: "Death during procedure"}, {label: "术后死亡",value: "Death after procedure"}, {label: "其它",value: "Other"}], required: true},
							{isshow: "F", field: "hurt_type_more", name: "请具体描述", enname: "Specific Description", type: "input", required: true},
							{isshow: "T", field: "fault_type_code", name: "产品是否出现故障", enname: "Abnormalities Observed?", type: "select", options: [
								{label: "是-术前故障",value: "Yes-prior to operation"},
								{label: "是-术中故障",value: "Yes-during the procedure"},
								{label: "是-术后故障",value: "Yes-post operation"},
								{label: "否",value: "No"},
								{label: "其它",value: "Others"},
							], required: true},
							{isshow: "F", field: "fault_type_more", name: "请具体描述", enname: "Specific Description", type: "input", required: true},
							{isshow: "F", field: "fault_type_detail_code", name: "故障表现", enname: "Failure Mode", type: "select", options: [], required: true},

							{isshow: "F", field: "fault_type_detail_more", name: "请具体描述", enname: "Specific Description", type: "input", required: true},
							{isshow: "F", field: "fault_type_detail_sub_code", name: "请具体选择", enname: "Failure Mode Detail", type: "select", options: [], required: true},

							{isshow: "F", field: "fault_type_detail_sub_more", name: "请确认压力值", enname: "Specify Pressure Performed", type: "input", required: true},

							{isshow: "T", field: "remedies_code", name: "补救措施", enname: "Remedial Action", type: "select", options: [{label: "紧急CABG",value: "Emergency CABG"}, {label: "原地贴壁",value: "Stent deployment"}, {label: "抓捕器取出",value: "Stent retrieval techniques"}, {label: "再次植入支架、球囊",value: "Use another Stent/Balloon"}, {label: "其它",value: "Other Action"}], required: true},
							{isshow: "F", field: "remedies_more", name: "请填写品牌和规格", enname: "Specific Description", type: "input", required: true},
							{isshow: "T", field: "operation_result_code", name: "手术结果", enname: "Procedure Outcome", type: "select", options: [{label: "使用此器械完成",value: "Completed with this device"}, {label: "使用另一相同器械完成",value: "Completed with another of same device"}, {label: "使用其它器械完成",value: "Completed with a different device"}, {label: "由于此事件而未能完成",value: "Not completed due to this event"}, {label: "由于其它原因而未能完成",value: "Not completed due to another reason"}, {label: "不详",value: "Unknown"}], required: true},
							{isshow: "F", field: "operation_result_more", name: "请具体描述", enname: "Specific Description", type: "input", required: true},

							{isshow: "T", field: "patient_prognosis_code", name: "患者预后", enname: "Patient prognostic", type: "select", options: [
								{label: "术后无异常",value: "None"},
								{label: "患者损伤",value: "Patient harm"},
								{label: "手术延迟",value: "Delay of operation"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "F", field: "patient_prognosis_more", name: "请描述", enname: "Specific Description", parent_field: "patient_prognosis_code", show_filter: {parent_val: "others"}, type: "input", required: true},
							{isshow: "T", field: "has_prod_return", name: "是否返回产品", enname: "Product to be returned?", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "F", field: "prod_logistics", name: "返回产品运单号", enname: "Courier Number", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "input", required: true},
							{isshow: "F", field: "un_return_type_code", name: "不能返回原因", enname: "Reason for No return", parent_field: "has_prod_return", show_filter: {parent_val: 2}, type: "select", options: [{label: "接触性传染病",value: "Contagious disease"}, {label: "产品遗失",value: "Device missing/discarded"}, {label: "产品留在病人体内（包含死亡）",value: "Device retained"}, {label: "其它",value: "Others"}], required: true},
							{isshow: "F", field: "un_return_type_more", name: "其它原因", enname: "Other Reasons", parent_field: "un_return_type_code", show_filter: {parent_val: "Others"}, type: "input", required: true},

							{isshow: "T", field: "customer_address", name: "换货返回地址", enname: "Return Address For Replacement", type: "select", options: [], props:{label: "address", value: "address"}, isrefresh:true, required: true, disabled: false,colspan: 2},
						],

						//神通 st
						st: [
							{isshow: "T", field: "doc_code", name: "投诉单号", enname: "Complaint No", type: "span", colspan: 2},
							{isshow: "T", field: "doc_date", name: "制单日期", enname: "Submit Date", type: "date", disabled: true},
							{isshow: "T", field: "supplyer_name", name: "一级代理商", enname: "Distributor Name", type: "popup",required: true, disabled: false},
							{isshow: "T", field: "salesgroup_company", name: "公司", enname: "", type: "popup", required: true, disabled: true},
							{isshow: "T", field: "customer_name", name: "二级代理商", enname: "", type: "popup", ispopupempty: true},
							{isshow: "T", field: "sales_user_name", name: "销售姓名", enname: "Reporter(Full Name)", type: "popup", required: true},
							{isshow: "T", field: "sales_user_phone", name: "销售电话", enname: "Reporter's Phone", required: true},

							{isshow: "T", field: "prod_name", name: "投诉产品", enname: "Product name", type: "popup", required: true},
							{isshow: "T", field: "prod_type_name", name: "产品类别", enname: "Product Line", required: true, disabled: true},

							{isshow: "T", field: "product_sku", name: "产品规格", enname: "Product mode", required: true, disabled: true},
							{isshow: "T", field: "batch_no", name: "批号", enname: "LOT No.", required: true, disabled: true},
							{isshow: "T", field: "udi", name: "UDI", enname: "UDI", required: true},
							{isshow: "T", field: "delivery_date", name: "发货日期", enname: "", disabled: true, type: "date"},
							{isshow: "T", field: "valid_date", name: "产品效期", enname: "Manufacturing date", disabled: true, type: "date"},
							{isshow: "T", field: "country", name: "国家", enname: "Distributor's Territory", type: "select", options: [
								{label: "中国",value: "China"},
								{label: "欧盟",value: "Euorapa"},
								{label: "美国",value: "United States"},
								{label: "台湾",value: "TaiWan"},
								{label: "日本",value: "Japan"},
								{label: "阿根廷",value: "Argentina"},
								{label: "埃及",value: "Egypt"},
								{label: "澳大利亚",value: "Australia"},
								{label: "巴基斯坦",value: "Pakistan"},
								{label: "巴西",value: "Brazil"},
								{label: "白俄罗斯",value: "Belarus"},
								{label: "波黑",value: "Bosnia and Herzegovina"},
								{label: "多米尼加",value: "Dominica"},
								{label: "俄罗斯",value: "Russian Federation"},
								{label: "厄瓜多尔",value: "Ecuador"},
								{label: "菲律宾",value: "Philippines"},
								{label: "哥伦比亚",value: "Colombia"},
								{label: "哥斯达黎加",value: "Costa Rica"},
								{label: "哈萨克斯坦",value: "Kazakhstan"},
								{label: "韩国",value: "Korea"},
								{label: "黑山",value: "Montenegro"},
								{label: "洪都拉斯",value: "Honduras"},
								{label: "马来西亚",value: "Malaysia"},
								{label: "秘鲁",value: "Peru"},
								{label: "墨西哥",value: "Mexico"},
								{label: "萨尔瓦多",value: "El Salvador"},
								{label: "沙特阿拉伯",value: "Saudi Arabia"},
								{label: "苏丹",value: "Sudan"},
								{label: "泰国",value: "Thailand"},
								{label: "土耳其",value: "Turkey"},
								{label: "土库曼斯坦",value: "Turkmenistan"},
								{label: "委内瑞拉",value: "Venezuela"},
								{label: "香港",value: "Hong Kong"},
								{label: "新加坡",value: "Singapore"},
								{label: "伊朗",value: "Iran"},
								{label: "以色列",value: "Israel"},
								{label: "印度",value: "India"},
								{label: "印尼",value: "Indonesia"},
								{label: "越南",value: "Vietnam"},
							], required: true},
							{isshow: "T", field: "has_prod_return", name: "返回产品", enname: "Product to be returned?", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "F", field: "prod_logistics", name: "返回产品运单号", enname: "Waybill Number", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "input", required: true},
							{isshow: "F", field: "un_return_type_code", name: "不能返回原因", enname: "Reason for No return", parent_field: "has_prod_return", show_filter: {parent_val: 2}, type: "select", options: [{label: "接触性传染病",value: "Contagious disease"}, {label: "产品遗失",value: "Device missing/discarded"}, {label: "产品留在病人体内（包含死亡）",value: "Device retained"}, {label: "其它",value: "Others"}], required: true},
							{isshow: "F", field: "un_return_type_more", name: "其它原因", enname: "Other Reasons", parent_field: "un_return_type_code", show_filter: {parent_val: "Others"}, type: "input", required: true},
							{isshow: "T", field: "patient_prognosis_code", name: "患者预后", type: "select", options: [
								{label: "无异常",value: "None"},
								{label: "手术延迟",value: "Delay of operation"},
								{label: "损伤",value: "Patient harm"},
								{label: "死亡",value: "dead"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "T", field: "has_operation_data", name: "手术影像资料", type: "select", options: [{label: "有",value: 1}, {label: "无",value: 2}], required: true},
							{isshow: "T", field: "reason_code", name: "投诉原因", required: true},
						],

						//心脉 xm
						xm: [
							{isshow: "T", field: "doc_code", name: "投诉单号", type: "span", colspan: 2},
							{isshow: "T", field: "doc_date", name: "制单日期", type: "date", disabled: true},
							{isshow: "T", field: "supplyer_name", name: "一级代理商", type: "popup",required: true, disabled: false},
							{isshow: "T", field: "salesgroup_company", name: "公司", type: "popup", required: true, disabled: true},
							{isshow: "T", field: "customer_name", name: "二级代理商", type: "popup", ispopupempty: true},
							{isshow: "T", field: "sales_user_name", name: "销售姓名", type: "popup", required: true},
							{isshow: "T", field: "sales_user_phone", name: "销售电话", required: true},
							{isshow: "T", field: "prod_name", name: "投诉产品", type: "popup", required: true},
							{isshow: "T", field: "prod_type_name", name: "产品类别", required: true, disabled: true},
							{isshow: "T", field: "product_sku", name: "产品规格", required: true, disabled: true},
							{isshow: "T", field: "batch_no", name: "批号", required: true, disabled: true},
							{isshow: "T", field: "udi", name: "UDI", required: true},
							{isshow: "T", field: "delivery_date", name: "发货日期", disabled: true, type: "date"},
							{isshow: "T", field: "valid_date", name: "产品效期", disabled: true, type: "date"},
							{isshow: "T", field: "country", name: "国家", enname: "Distributor's Territory", type: "select", options: [
								{label: "中国",value: "CN"},
								{label: "欧盟",value: "Euorapa"},
								{label: "美国",value: "United States"},
								{label: "台湾",value: "TaiWan"},
								{label: "日本",value: "Japan"},
								{label: "阿根廷",value: "Argentina"},
								{label: "埃及",value: "Egypt"},
								{label: "澳大利亚",value: "Australia"},
								{label: "巴基斯坦",value: "Pakistan"},
								{label: "巴西",value: "Brazil"},
								{label: "白俄罗斯",value: "Belarus"},
								{label: "波黑",value: "Bosnia and Herzegovina"},
								{label: "多米尼加",value: "Dominica"},
								{label: "俄罗斯",value: "Russian Federation"},
								{label: "厄瓜多尔",value: "Ecuador"},
								{label: "菲律宾",value: "Philippines"},
								{label: "哥伦比亚",value: "Colombia"},
								{label: "哥斯达黎加",value: "Costa Rica"},
								{label: "哈萨克斯坦",value: "Kazakhstan"},
								{label: "韩国",value: "Korea"},
								{label: "黑山",value: "Montenegro"},
								{label: "洪都拉斯",value: "Honduras"},
								{label: "马来西亚",value: "Malaysia"},
								{label: "秘鲁",value: "Peru"},
								{label: "墨西哥",value: "Mexico"},
								{label: "萨尔瓦多",value: "El Salvador"},
								{label: "沙特阿拉伯",value: "Saudi Arabia"},
								{label: "苏丹",value: "Sudan"},
								{label: "泰国",value: "Thailand"},
								{label: "土耳其",value: "Turkey"},
								{label: "土库曼斯坦",value: "Turkmenistan"},
								{label: "委内瑞拉",value: "Venezuela"},
								{label: "香港",value: "Hong Kong"},
								{label: "新加坡",value: "Singapore"},
								{label: "伊朗",value: "Iran"},
								{label: "以色列",value: "Israel"},
								{label: "印度",value: "India"},
								{label: "印尼",value: "Indonesia"},
								{label: "越南",value: "Vietnam"},
							], required: true},
							{isshow: "T", field: "has_prod_return", name: "返回产品", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "F", field: "prod_logistics", name: "返回产品运单号", enname: "Waybill Number", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "input"},
							{isshow: "F", field: "un_return_type_code", name: "不能返回原因", enname: "Reason for No return", parent_field: "has_prod_return", show_filter: {parent_val: 2}, type: "select", options: [{label: "接触性传染病",value: "Contagious disease"}, {label: "产品遗失",value: "Device missing/discarded"}, {label: "产品留在病人体内（包含死亡）",value: "Device retained"}, {label: "其它",value: "Others"}], required: true},
							{isshow: "F", field: "un_return_type_more", name: "其它原因", enname: "Other Reasons", parent_field: "un_return_type_code", show_filter: {parent_val: "Others"}, type: "input", required: true},
							{isshow: "T", field: "patient_prognosis_code", name: "患者预后", type: "select", options: [
								{label: "无异常",value: "None"},
								{label: "手术延迟",value: "Delay of operation"},
								{label: "损伤",value: "Patient harm"},
								{label: "死亡",value: "dead"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "T", field: "has_operation_data", name: "手术影像资料", type: "select", options: [{label: "有",value: 1}, {label: "无",value: 2}], required: true},
							{isshow: "T", field: "reason_code", name: "投诉原因", type: "radio", options: [
								{code: "code1", name: "一、打开包装发现问题"},
								{code: "code1_1", name: "二、选错型号"},
								{code: "code1_2", name: "三、经济困难"},
								{code: "code1_3", name: "四、术前操作不当"},
								{code: "code1_4", name: "五、术中操作不当"},

								{code: "code2", name: "六、产品通不过病变"},
								{code: "code3", name: "七、支架不能到达病变位置"},
								{code: "code4", name: "八、支架无法释放或不充分"},
								{code: "code5", name: "九、支架移位"},
								{code: "code6", name: "十、支架短缩"},
								{code: "code7", name: "十一、支架释放形态不佳"},
								{code: "code8", name: "十二、支架断裂"},
								{code: "code9", name: "十三、内漏"},
								{code: "code10", name: "十四、系统回撤障碍"},
								{code: "code11", name: "十五、球囊泄漏"},
								{code: "code12", name: "十六、球囊爆破"},
								{code: "Others", name: "十七、其他"},
							], required: true,colspan: 3},
							{isshow: "F", field: "reason_more", name: "请详细说明", parent_field: "reason_code", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "customer_address", name: "换货返回地址", type: "select", options: [], props:{label: "address", value: "address"}, isrefresh:true, required: true, disabled: false,colspan: 2},
						],

						//电生理 dsl
						dsl: [
							{isshow: "T", field: "doc_code", name: "投诉单号", type: "span", colspan: 2},
							{isshow: "T", field: "doc_date", name: "制单日期", type: "date", disabled: true},
							{isshow: "T", field: "supplyer_name", name: "一级代理商（平台）", type: "popup",required: true, disabled: false},
							{isshow: "T", field: "salesgroup_company", name: "公司", type: "popup", required: true, disabled: true},
							{isshow: "T", field: "customer_name", name: "二级代理商（经销商）", type: "popup", ispopupempty: true},
							{isshow: "T", field: "sales_user_name", name: "销售姓名", type: "popup", required: true},
							{isshow: "T", field: "sales_user_phone", name: "销售电话", required: true},
							{isshow: "T", field: "prod_name", name: "投诉产品", type: "popup", required: true},
							{isshow: "T", field: "prod_type_name", name: "产品类别", required: true, disabled: true},
							{isshow: "T", field: "product_sku", name: "产品规格", required: true, disabled: true},
							{isshow: "T", field: "batch_no", name: "批号", required: true, disabled: true},
							{isshow: "T", field: "udi", name: "UDI"},
							{isshow: "T", field: "valid_date", name: "产品效期", disabled: true, type: "date"},
							{isshow: "T", field: "country", name: "国家", enname: "Distributor's Territory", type: "select", options: [
								{label: "国内",value: "China"},
								{label: "海外",value: "Others"},
							], required: true},
							{isshow: "T", field: "has_prod_return", name: "返回产品", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "F", field: "return_date", name: "产品返回日期", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "date", required: true},
							{isshow: "F", field: "prod_logistics", name: "返回产品运单号", enname: "Waybill Number", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "input", required: true},
							{isshow: "F", field: "un_return_type_code", name: "不能返回原因", enname: "Reason for No return", parent_field: "has_prod_return", show_filter: {parent_val: 2}, type: "select", options: [{label: "接触性传染病",value: "Contagious disease"}, {label: "产品遗失",value: "Device missing/discarded"}, {label: "产品留在病人体内（包含死亡）",value: "Device retained"}, {label: "其它",value: "Others"}], required: true},
							{isshow: "F", field: "un_return_type_more", name: "其它原因", enname: "Other Reasons", parent_field: "un_return_type_code", show_filter: {parent_val: "Others"}, type: "input", required: true},
							{isshow: "T", field: "patient_prognosis_code", name: "患者预后", type: "select", options: [
								{label: "无异常",value: "None"},
								{label: "手术延迟",value: "Delay of operation"},
								{label: "损伤",value: "Patient harm"},
								{label: "死亡",value: "dead"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "T", field: "has_operation_data", name: "手术影像资料", type: "select", options: [{label: "有",value: 1}, {label: "无",value: 2}], required: true},
							{isshow: "T", field: "reason_code", name: "投诉原因", type: "checkboxobj", options: [
								{code: "code1", name: "一、无法正常放电"},
								{code: "code2", name: "二、无法到位"},
								{code: "code3", name: "三、无法正常使用"},
								{code: "code7", name: "四、心电信号问题"},
								{code: "code4", name: "五、放电性能"},
								{code: "code5", name: "六、操控性能"},
								{code: "code6", name: "七、sensor"},
								{code: "code8", name: "八、心电信号"},
								{code: "code9", name: "九、盐水灌注"},
								{code: "code10", name: "十、泄漏性能"},
								{code: "code11", name: "十一、匹配性能"},
								{code: "Others", name: "十二、其他"},
							], required: true,colspan: 3},
							{isshow: "F", field: "reason_more", name: "请详细说明", parent_field: "reason_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "customer_address", name: "换货返回地址", type: "select", options: [], props:{label: "address", value: "address"}, isrefresh:true, required: true, disabled: false,colspan: 2},
						],

						//优通 yt
						yt: [
							{isshow: "T", field: "doc_code", name: "投诉单号", type: "span", colspan: 2},
							{isshow: "T", field: "doc_date", name: "制单日期", type: "date", disabled: true},
							{isshow: "T", field: "customer_name", name: "二级代理商（经销商）", type: "popup", ispopupempty: true},
							{isshow: "T", field: "sales_user_name", name: "销售姓名", type: "popup"},
							{isshow: "T", field: "sales_user_phone", name: "销售电话"},
							{isshow: "T", field: "prod_name", name: "投诉产品", type: "popup", required: true},
							{isshow: "T", field: "prod_type_name", name: "产品类别", disabled: true},
							{isshow: "T", field: "product_sku", name: "产品规格", disabled: true},
							{isshow: "T", field: "batch_no", name: "产品批号", disabled: true},
							{isshow: "T", field: "udi", name: "UDI"},
							{isshow: "T", field: "delivery_date", name: "发货日期", disabled: true, type: "date"},
							{isshow: "T", field: "valid_date", name: "产品效期", disabled: true, type: "date"},
							{isshow: "T", field: "country", name: "销售国家", enname: "Distributor's Territory", type: "select", options: [
								{label: "中国",value: "China"},
								{label: "欧盟",value: "Euorapa"},
								{label: "美国",value: "United States"},
								{label: "台湾",value: "TaiWan"},
								{label: "日本",value: "Japan"},
								{label: "阿根廷",value: "Argentina"},
								{label: "埃及",value: "Egypt"},
								{label: "澳大利亚",value: "Australia"},
								{label: "巴基斯坦",value: "Pakistan"},
								{label: "巴西",value: "Brazil"},
								{label: "白俄罗斯",value: "Belarus"},
								{label: "波黑",value: "Bosnia and Herzegovina"},
								{label: "多米尼加",value: "Dominica"},
								{label: "俄罗斯",value: "Russian Federation"},
								{label: "厄瓜多尔",value: "Ecuador"},
								{label: "菲律宾",value: "Philippines"},
								{label: "哥伦比亚",value: "Colombia"},
								{label: "哥斯达黎加",value: "Costa Rica"},
								{label: "哈萨克斯坦",value: "Kazakhstan"},
								{label: "韩国",value: "Korea"},
								{label: "黑山",value: "Montenegro"},
								{label: "洪都拉斯",value: "Honduras"},
								{label: "马来西亚",value: "Malaysia"},
								{label: "秘鲁",value: "Peru"},
								{label: "墨西哥",value: "Mexico"},
								{label: "萨尔瓦多",value: "El Salvador"},
								{label: "沙特阿拉伯",value: "Saudi Arabia"},
								{label: "苏丹",value: "Sudan"},
								{label: "泰国",value: "Thailand"},
								{label: "土耳其",value: "Turkey"},
								{label: "土库曼斯坦",value: "Turkmenistan"},
								{label: "委内瑞拉",value: "Venezuela"},
								{label: "香港",value: "Hong Kong"},
								{label: "新加坡",value: "Singapore"},
								{label: "伊朗",value: "Iran"},
								{label: "以色列",value: "Israel"},
								{label: "印度",value: "India"},
								{label: "印尼",value: "Indonesia"},
								{label: "越南",value: "Vietnam"},
							]},
							{isshow: "T", field: "has_prod_return", name: "返回产品", type: "select", options: [{label: "是",value: 1}, {label: "否",value: 2}], required: true},
							{isshow: "F", field: "return_date", name: "产品返回日期", type: "date", required: true},
							{isshow: "F", field: "prod_logistics", name: "返回产品运单号", enname: "Waybill Number", parent_field: "has_prod_return", show_filter: {parent_val: 1}, type: "input", required: true},
							{isshow: "F", field: "un_return_type_code", name: "不能返回原因", enname: "Reason for No return", parent_field: "has_prod_return", show_filter: {parent_val: 2}, type: "select", options: [{label: "接触性传染病",value: "Contagious disease"}, {label: "产品遗失",value: "Device missing/discarded"}, {label: "产品留在病人体内（包含死亡）",value: "Device retained"}, {label: "其它",value: "Others"}], required: true},
							{isshow: "F", field: "un_return_type_more", name: "其它原因", enname: "Other Reasons", parent_field: "un_return_type_code", show_filter: {parent_val: "Others"}, type: "input", required: true},
							{isshow: "T", field: "patient_prognosis_code", name: "患者预后", type: "select", options: [
								{label: "无异常",value: "None"},
								{label: "手术延迟",value: "Delay of operation"},
								{label: "损伤",value: "Patient harm"},
								{label: "死亡",value: "dead"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "T", field: "has_operation_data", name: "手术影像资料", type: "select", options: [{label: "有",value: 1}, {label: "无",value: 2}], required: true},
							{isshow: "T", field: "reason_code", name: "投诉原因", required: true},
						],

						//国际 gj
						gj: [
							{isshow: "T", field: "dealer_name", name: "Distributor", required: true},
							{isshow: "T", field: "operation_date", name: "Operation Date", type: "date", required: true},
							{isshow: "T", field: "contact_mail", name: "Contact E-mail", required: true},
							{isshow: "T", field: "contact_phone", name: "Contact Tel.", required: true},
							{isshow: "T", field: "is_prod_used", name: "Product be Used", required: true, type: "radio", options: [
								{code: "yes", name: "yes"},
								{code: "no", name: "no"}
							]},
							{isshow: "T", field: "feedback_code", name: "Feedback Content", required: true, type: "select", options: [
								{label: "Device damaged prior to use-Packaging issue",value: "0"},
								{label: "Device damaged prior to use-Material deformation without use",value: "1"},
								{label: "Device damaged prior to use-Others",value: "2"},
								{label: "Cannot pass to target lesion-Shaft fracture/break",value: "3"},
								{label: "Cannot pass to target lesion-Others",value: "4"},
								{label: "Balloon Inflation issue-Balloon leak(s)",value: "5"},
								{label: "Balloon Inflation issue-Others",value: "6"},
								{label: "Difficult to removes",value: "7"},
								{label: "Others",value: "8"},
							]},
							{isshow: "T", field: "hospital_name", name: "Hospital", required: true},
							{isshow: "T", field: "doctor", name: "Physician", required: true},
							{isshow: "T", field: "doctor_phone", name: "Physician Tel.", required: true},
							{isshow: "T", field: "prod_id", name: "Product", type: "selectbyfilterable", options: [], props:{label: "name", value: "id"}, isrefresh:true, required: true},
							{isshow: "T", field: "product_sku", name: "Product Specs.", type: "select", selectparent: "prod_id", isrefresh:true, options: [], props:{label: "name", value: "id"}, required: true},

							{isshow: "T", field: "barcode", name: "Barcode", type: "popup", required: true},
							{isshow: "T", field: "file_name", name: "attachment", type: "span", isclick: true, buttonname: "Select file"},
							{isshow: "T", field: "operation_desc", name: "Operation Description", labelwidth: "180px", type: "textarea", required: true,colspan: 3},

							{isshow: "T", field: "remark", name: "Remark", labelwidth: "180px", type: "textarea", required: true,colspan: 3},
						],

						//特殊 ts
						ts: [
							{isshow: "T", field: "code", name: "单据号", type: "span"},
							{isshow: "T", field: "doc_preparer", name: "制单人", type: "span"},
							{isshow: "T", field: "doc_date", name: "制单日期", type: "date", disabled: true},
							{isshow: "T", field: "customer_name", name: "代理商", type: "selectbyfilterable", options: [], props:{label: "name", value: "name"}, isrefresh:true, required: true, disabled: false},
							{isshow: "T", field: "sales_name", name: "销售姓名", type: "popup", required: true},
							{isshow: "T", field: "sales_phone", name: "销售电话", required: true},
							{isshow: "T", field: "prod_id", name: "产品名称", type: "selectbyfilterable", options: [], props:{label: "name", value: "id"}, isrefresh:true, required: true},
							{isshow: "T", field: "product_sku", name: "产品规格", type: "select", selectparent: "prod_id", isrefresh:true, options: [], props:{label: "name", value: "id"}, required: true},
							{isshow: "T", field: "batch_no", name: "批号", required: true, disabled: true},
							{isshow: "T", field: "valid_date", name: "产品有效期", type: "date", required: true, type: "date"},
							{isshow: "T", field: "is_return_goods", name: "返回产品", type: "select", options: [{label: " ",value: "0"}, {label: "是",value: "1"}, {label: "否",value: "2"}], required: true},
							{isshow: "T", field: "patinet_after_code", name: "患者预后", type: "select", options: [
								{label: " ",value: "0"},
								{label: "无异常",value: "none"},
								{label: "手术延迟",value: "delay"},
								{label: "损伤",value: "damage"},
								{label: "死亡",value: "dead"},
								{label: "其他",value: "others"},
							], required: true},
							{isshow: "T", field: "exists_image", name: "手术影像资料", type: "select", options: [{label: " ",value: "0"}, {label: "有",value: "1"}, {label: "无",value: "2"}], required: true},
							{isshow: "T", field: "reason_code", name: "投诉原因", type: "radio", options: [
								{code: "code1", name: "一、打开包装发现问题"},
								{code: "code2", name: "二、产品通不过病变"},
								{code: "code3", name: "三、支架不能到达病变位置"},
								{code: "code4", name: "四、球囊无法打开"},
								{code: "code5", name: "五、回撤困难"},
								{code: "code6", name: "六、支架体内脱载"},
								{code: "code7", name: "七、支架断裂"},
								{code: "code8", name: "八、死亡"},
								{code: "code9", name: "九、标识/说明书问题"},
								{code: "Others", name: "十、其他"},
							], required: true,colspan: 3},
							{isshow: "T", field: "return_address_id", name: "换货返回地址", type: "select", options: [], required: true,colspan: 3},

						],

						//骨科 gk
						gk: [
							{isshow: "T", field: "supplyer_name", name: "代理商", type: "popup", isrefresh:true, required: true, disabled: false},
							{isshow: "T", field: "customer_address", name: "代理商地址", type: "select", options: [], props:{label: "address", value: "address"}, isrefresh:true, required: true, disabled: false,colspan: 2},

							{isshow: "T", field: "sales_user_name", name: "投诉人姓名", required: true},
							{isshow: "T", field: "sales_user_phone", name: "投诉人联系电话", required: true},
							{isshow: "T", field: "salesgroup_company", name: "公司", type: "popup", required: true, colspan: 2},
							{isshow: "T", field: "prod_group_name", name: "产品组", type: "popup", required: true},
							{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
							{isshow: "T", field: "doctor_name", name: "医生姓名", type: "input"},
							{isshow: "T", field: "doctor_phone", name: "医生电话", type: "input"},

							{isshow: "T", field: "query_stock", name: "", type: "span", buttonname: "库内查找",colspan: 3},
						],
					},
					//患者资料cmp_patient
					complaint_type_hzzl: {
						//冠脉 gm
						gm: [
							{isshow: "T", field: "patient_surname", name: "姓", enname: "Last Name", required: true},
							{isshow: "T", field: "patient_name", name: "名", enname: "First Name"},
							{isshow: "T", field: "patient_age", name: "年龄（岁）", enname: "Age(years old)", type: "number", minval: 1, maxval: 200, required: true},
							{isshow: "T", field: "patient_gender_code", name: "性    别", enname: "Gender", type: "select", options: [
								{label: "男",value: "Male"},
								{label: "女",value: "Female"},
							], required: true},
							{isshow: "T", field: "patient_weight", name: "体重（Kg）", enname: "Weight(Kg)", required: true},

							{isshow: "T", field: "disease_diabetes_code", name: "糖尿病", enname: "Diabetes", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "Ⅰ型",value: "Type I"},
								{label: "Ⅱ型",value: "Type II"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "T", field: "disease_hyperlipidemia_code", name: "高血脂症", enname: "Hyperlipidemia", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "T", field: "disease_miocardial_infarction_code", name: "心肌梗死", enname: "MI(myocardial infarction)", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "T", field: "disease_hypertension_code", name: "高血压病", enname: "Hypertension", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "T", field: "disease_smoking_code", name: "吸烟史", enname: "Smoking History", type: "select", options: [
								{label: "无",value: "No"},
								{label: "吸烟",value: "Yes"},
								{label: "已戒烟",value: "Quit smoking"},
								{label: "不详",value: "Unknown"},
							], required: true},
							{isshow: "T", field: "clotting_disorders_code", name: "凝血障碍", enname: "Blood Coagulation Disorders", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "T", field: "drugs_code", name: "术前服药", enname: "Preoperative Medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "无",value: "None"},
								{label: "其他",value: "Others"},
							], required: true},
							{isshow: "F", field: "drugs_more", name: "请具体描述", enname: "Specific Description", parent_field: "drugs_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", enname: "Significant Medical History", type: "select", options: [
								{label: "既往PTCA",value: "PTCA"},
								{label: "既往CABG",value: "CABG"},
								{label: "无",value: "None"},
								{label: "其他",value: "Others"},
							],labelwidth: "350px", colspan: 2, required: true},
							{isshow: "F", field: "similar_desc", name: "请具体描述", enname: "Specific Description", parent_field: "exists_similar_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "allergy_code", name: "过敏反应", enname: "Allergic to", type: "select", options: [
								{label: "药物过敏",value: "Medication"},
								{label: "其它过敏源",value: "Other Allergen"},
								{label: "无",value: "NA"},
							], required: true},
							{isshow: "F", field: "allergy_more", name: "名称", enname: "Name"},
						],

						//神通 st
						st: [
							{isshow: "T", field: "patient_name", name: "姓名", enname: "Name", required: true},
							{isshow: "T", field: "patient_age", name: "年龄", enname: "Age", type: "number", minval: 1, maxval: 200, valunitwidth: "30px", required: true},
							{isshow: "T", field: "patient_gender_code", name: "性    别", enname: "Gender", type: "select", options: [
								{label: "男",value: "Male"},
								{label: "女",value: "Female"},
							], required: true},
							{isshow: "T", field: "patient_id_card", name: "患者身份证号"},
							{isshow: "T", field: "patient_hospital_no", name: "住 院 号"},
							{isshow: "T", field: "patient_contact", name: "患者联系方式"},
							{isshow: "T", field: "history_code", name: "病史", type: "checkboxobj", options: [
								{code: "code0", name: "不详"},
								{code: "code1", name: "糖尿病"},
								{code: "code2", name: "高血脂症"},
								{code: "code3", name: "心肌梗塞"},
								{code: "code4", name: "高血压病"},
								{code: "code5", name: "吸烟史"},
								{code: "Others", name: "其他病史"},
							],colspan: 4},
							{isshow: "F", field: "history_more", name: "其他病史", parent_field: "history_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "drugs_code", name: "术前服药", enname: "Preoperative Medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "不详",value: "None"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "drugs_more", name: "请具体描述", enname: "Specific Description", parent_field: "drugs_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", enname: "Significant Medical History", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
								{label: "不详",value: "None"},
							],labelwidth: "350px", colspan: 2},
						],

						//心脉 xm
						xm: [
							{isshow: "T", field: "patient_name", name: "姓名", enname: "Name", required: true},
							{isshow: "T", field: "patient_age", name: "年龄", enname: "Age", type: "number", minval: 1, maxval: 200, valunitwidth: "30px", required: true},
							{isshow: "T", field: "patient_gender_code", name: "性    别", enname: "Gender", type: "select", options: [
								{label: "男",value: "Male"},
								{label: "女",value: "Female"},
							], required: true},
							{isshow: "T", field: "patient_id_card", name: "患者身份证号"},
							{isshow: "T", field: "patient_hospital_no", name: "住 院 号"},
							{isshow: "T", field: "patient_contact", name: "患者联系方式"},
							{isshow: "T", field: "history_code", name: "病史", type: "checkboxobj", options: [
								{code: "code0", name: "不详"},
								{code: "code1", name: "糖尿病"},
								{code: "code2", name: "高血脂症"},
								{code: "code3", name: "心肌梗塞"},
								{code: "code4", name: "高血压病"},
								{code: "code5", name: "吸烟史"},
								{code: "Others", name: "其他病史"},
							],colspan: 4},
							{isshow: "F", field: "history_more", name: "其他病史", parent_field: "history_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "drugs_code", name: "术前服药", enname: "Preoperative Medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "不详",value: "None"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "drugs_more", name: "请具体描述", enname: "Specific Description", parent_field: "drugs_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", enname: "Significant Medical History", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
								{label: "不详",value: "None"},
							],labelwidth: "350px", colspan: 2},
						],

						//电生理 dsl
						dsl: [
							{isshow: "T", field: "patient_name", name: "姓名", enname: "Name", required: true},
							{isshow: "T", field: "patient_age", name: "年龄", enname: "Age", type: "number", minval: 1, maxval: 200, valunitwidth: "30px", required: true},
							{isshow: "T", field: "patient_gender_code", name: "性    别", enname: "Gender", type: "select", options: [
								{label: "男",value: "Male"},
								{label: "女",value: "Female"},
							], required: true},
							{isshow: "T", field: "patient_id_card", name: "患者身份证号"},
							{isshow: "T", field: "patient_hospital_no", name: "住 院 号"},
							{isshow: "T", field: "patient_contact", name: "患者联系方式"},
							{isshow: "T", field: "history_code", name: "病史", type: "checkboxobj", options: [
								{code: "code0", name: "不详"},
								{code: "code1", name: "糖尿病"},
								{code: "code2", name: "高血脂症"},
								{code: "code3", name: "心肌梗塞"},
								{code: "code4", name: "高血压病"},
								{code: "code5", name: "吸烟史"},
								{code: "Others", name: "其他病史"},
							],colspan: 4},
							{isshow: "F", field: "history_more", name: "其他病史", parent_field: "history_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "drugs_code", name: "术前服药", enname: "Preoperative Medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "不详",value: "None"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "drugs_more", name: "请具体描述", enname: "Specific Description", parent_field: "drugs_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", enname: "Significant Medical History", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
								{label: "不详",value: "None"},
							],labelwidth: "350px", colspan: 2},
						],

						//优通 yt
						yt: [
							{isshow: "T", field: "patient_name", name: "患者姓名", enname: "Name", required: true},
							{isshow: "T", field: "patient_age", name: "患者年龄", enname: "Age", type: "number", minval: 1, maxval: 200, valunitwidth: "30px", required: true},
							{isshow: "T", field: "patient_gender_code", name: "性    别", enname: "Gender", type: "select", options: [
								{label: "男",value: "Male"},
								{label: "女",value: "Female"},
							], required: true},
							{isshow: "T", field: "patient_id_card", name: "患者身份证号"},
							{isshow: "T", field: "patient_hospital_no", name: "住 院 号"},
							{isshow: "T", field: "patient_contact", name: "患者联系方式"},
							{isshow: "T", field: "history_code", name: "病史", type: "checkboxobj", options: [
								{code: "code0", name: "不详"},
								{code: "code1", name: "糖尿病"},
								{code: "code2", name: "高血脂血症"},
								{code: "code3", name: "心肌梗塞"},
								{code: "code4", name: "高血压病"},
								{code: "Others", name: "其他病史"},
							],colspan: 4},
							{isshow: "F", field: "history_more", name: "其他病史", parent_field: "history_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "drugs_code", name: "术前服药", enname: "Preoperative Medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "不详",value: "None"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "drugs_more", name: "请具体描述", enname: "Specific Description", parent_field: "drugs_code", show_filter: {parent_val: "Others"}},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", enname: "Significant Medical History", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
								{label: "不详",value: "None"},
							],labelwidth: "350px", colspan: 2},
							{isshow: "T", field: "lesions_part_info", name: "病变部位情况"},
						],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [
							{isshow: "T", field: "patient_name", name: "患者姓名"},
							{isshow: "T", field: "patient_hospital_no", name: "住 院 号"},
							{isshow: "T", field: "patient_age", name: "患者年龄", type: "number", minval: 1, maxval: 200},
							{isshow: "T", field: "patient_id_card", name: "患者身份证号",colspan: 2},
							{isshow: "T", field: "patient_gender_code", name: "性    别", type: "select", options: [
								{label: " ",value: "0"},
								{label: "男",value: "1"},
								{label: "女",value: "2"},
							]},

							{isshow: "T", field: "disease_diabetes_code", name: "糖尿病", type: "select", options: [
								{label: "不详",value: "notknown"},
								{label: "Ⅰ型",value: "Ⅰ"},
								{label: "Ⅱ型",value: "Ⅱ"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "disease_hyperlipidemia_code", name: "高血脂症", type: "select", options: [
								{label: "不详",value: "notknown"},
								{label: "有",value: "has"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "disease_miocardial_infarction_code", name: "心肌梗死", type: "select", options: [
								{label: "不详",value: "notknown"},
								{label: "有",value: "has"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "disease_hypertension_code", name: "高血压病", type: "select", options: [
								{label: "不详",value: "notknown"},
								{label: "有",value: "has"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "disease_smoking_code", name: "吸烟史", type: "select", options: [
								{label: "无",value: "none"},
								{label: "吸烟",value: "smoking"},
								{label: "已戒烟",value: "giveup"},
								{label: "不详",value: "notknown"},
							]},
							{isshow: "T", field: "disease_others", name: "其他病史"},
							{isshow: "T", field: "drugs_code", name: "术前服药", type: "select", options: [
								{label: " ",value: "0"},
								{label: "阿司匹林",value: "aspirin"},
								{label: "氯吡格雷",value: "clopidogrel"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "T", field: "exists_similar_code", name: "既往史(以前是否经历过类似手术，如PTCA、CABG)", type: "select", options: [
								{label: " ",value: "0"},
								{label: "既往PTCA",value: "ptca"},
								{label: "既往CABG",value: "cabg"},
								{label: "其他",value: "other"},
							],labelwidth: "350px"},
						],

						//骨科 gk
						gk: [
							{isshow: "T", field: "has_patient", name:"", label: "该产品是否用于病患，如有，请提供具体信息", type:"ischeckbox", labelwidth:"10px",colspan: 3},
							{isshow: "T", field: "patient_name", name: "患者姓名", disabled: true},
							{isshow: "T", field: "patient_age", name: "患者年龄", type: "number", minval: 1, maxval: 200, disabled: true},
							{isshow: "T", field: "patient_gender_code", name: "患者性别", type: "select", options: [
								{label: "男",value: "1"},
								{label: "女",value: "2"},
							], disabled: true},
							{isshow: "T", field: "patient_weight", name: "患者体重（Kg）", enname: "Weight(Kg)", disabled: true},
							{isshow: "T", field: "similar_desc", name: "既往病史", type: "textarea",colspan: 3, disabled: true},
							{isshow: "T", field: "operation_desc", name: "手术情况描述（过程、后果、器械联合使用情况等）", type: "textarea", labelwidth: "350px",colspan: 3, disabled: true},
							{isshow: "T", field: "result_code", name: "事件后果", type: "checkboxobjlist", options: [
								{checkbox_field: "result1", name: "死亡时间", describe_field: {field: "result1_desc", isshow: true, name: "", type: "date"}},
								{checkbox_field: "result2", name: "威胁生命"},
								{checkbox_field: "result3", name: "机体功能、结构永久损伤"},
								{checkbox_field: "result4", name: "需要内、外科治疗避免上述1,2,3中的情况"},
								{checkbox_field: "result5", name: "需要延长住院时间"},
								{checkbox_field: "result6", name: "无关患者健康的产品事件"},
							], colspan: 3, disabled: true},

						],
					},

					//病变部位情况cmp_symptom
					complaint_type_bbbwqk: {
						//冠脉 gm
						gm: [
							{isshow: "T", field: "qty_target_lesions", name: "靶病变数量", enname: "Number Of Target Lesions", required: true, type: "number"},
							{isshow: "T", field: "location_target_lesions_i_code", name: "靶病变一级部位", enname: "Primary Site of Target Lesion", required: true, type: "select", options: [
								{label: "RCA",value: "RCA"},
								{label: "LAD",value: "LAD"},
								{label: "LCX",value: "LCX"},
								{label: "LM",value: "LM"},
								{label: "其他",value: "Others"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "F", field: "location_target_lesions_i_other", name: "请具体说明", enname: "Specific Description", parent_field: "location_target_lesions_i_code", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "location_target_lesions_ii_code", name: "靶病变二级部位", enname: "Second Site of Target Lesion", required: true, type: "select", options: [
								{label: "近段",value: "Proximal"},
								{label: "近中段",value: "Proximal-mid"},
								{label: "中段",value: "Mid"},
								{label: "中远段",value: "Mid-distal"},
								{label: "远段",value: "Distal"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "located_at_vessel_code", name: "位于血管分叉开口部位", enname: "Located At The Opening Of The Bifurcation Of Blood Vessels", required: true, type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
								{label: "不详",value: "Unknown"},
							]},

							{isshow: "T", field: "diameter_vessel_original", name: "靶血管原直径（mm）", type: "number", enname: "Primary target vessel diameter (mm)", required: true},
							{isshow: "T", field: "lesions_length", name: "病变长度（mm）", type: "number", enname: "Lesion length (mm)", required: true},
							{isshow: "T", field: "rate_vessel_code", name: "靶血管狭窄率", enname: "Stenosis rate", required: true, type: "select", options: [
								{label: "90%-100%",value: "90%-100%"},
								{label: "80%-89%",value: "80%-89%"},
								{label: "70%-79%",value: "70%-79%"},
								{label: "50%-69%",value: "50%-69%"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "degree_vessel_calcification_code", name: "血管钙化程度", enname: "Degree of Calcification", required: true, type: "select", options: [
								{label: "无",value: "No"},
								{label: "轻度",value: "Mild"},
								{label: "中度",value: "Moderate"},
								{label: "重度",value: "Severe"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "degree_vessel_tortuosity_code", name: "血管迂曲程度", enname: "Degree of Tortuosity", required: true, type: "select", options: [
								{label: "平直",value: "Mild"},
								{label: "一般迂曲",value: "Moderate"},
								{label: "严重迂曲",value: "Severe"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "degree_thrombus_code", name: "血栓程度", enname: "Degree of thrombosis", required: true, type: "select", options: [
								{label: "无",value: "No"},
								{label: "轻度",value: "Mild"},
								{label: "中度",value: "Moderate"},
								{label: "重度",value: "Severe"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "lesions_shape_code", name: "病变形状", enname: "Lesion Shape", required: true, type: "select", options: [
								{label: "离心",value: "Eccentric"},
								{label: "同心",value: "Concentric"},
								{label: "其它",value: "Others"},
							]},
							{isshow: "F", field: "lesions_shape_more", name: "请具体说明", enname: "Specific Description", parent_field: "lesions_shape_code", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "lesions_cause_code", name: "病变成因", enname: "Cause of Lesion", required: true, type: "select", options: [
								{label: "原发性（进行时）",value: "Primary (progressive)"},
								{label: "支架内再狭窄",value: "In-stent Restenosis"},
								{label: "再狭窄（单纯球囊血管成形术后）",value: "Restenosis after PTCA"},
								{label: "移植搭桥",value: "CABG"},
							]},
						],

						//神通 st
						st: [
							//选择 Fastrack/Utrack
							{isshow: "F", field: "stents", name: "配合使用的支架"},

							//选择 Apollo，Bridge
							{isshow: "F", field: "preoperative_diagnosis", name: "术前诊断/病变类型"},
							{isshow: "F", field: "lesions_vessels_proximal", name: "病变血管近端直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "F", field: "lesions_vessels_distal", name: "病变血管远端直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "F", field: "lesions_length", name: "病变血管病变长度", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "F", field: "lesions_vessels_narrow_rate", name: "病变血管狭窄率", type: "number", required: true, valunit: "%", valunitwidth: "30px"},
							{isshow: "F", field: "degree_vessel_tortuosity_code", name: "病变血管迂曲程度", enname: "", type: "radio", options: [
								{code: "code1", name: "平直"},
								{code: "code2", name: "一般迂曲"},
								{code: "code3", name: "严重迂曲"},
							], required: true, colspan: 3},
							{isshow: "F", field: "degree_vessel_calcification_code", name: "病变血管钙化情况", enname: "", type: "radio", options: [
								{code: "code1", name: "无"},
								{code: "code2", name: "轻度"},
								{code: "code3", name: "中度"},
								{code: "code4", name: "重度"},
							], required: true, colspan: 3},
							{isshow: "F", field: "degree_thrombus_code", name: "病变血管血栓情况", enname: "", type: "radio", options: [
								{code: "code1", name: "无"},
								{code: "code2", name: "轻度"},
								{code: "code3", name: "中度"},
								{code: "code4", name: "重度"},
							], required: true, colspan: 3},

							//如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
							{isshow: "T", field: "cure_type_code", name: "治疗类型", required: true, type: "select", options: [
								{label: "初次治疗",value: "初次治疗"},
								{label: "复发性治疗",value: "复发性治疗"},
							]},
							{isshow: "F", field: "has_implant", name: "病变部位既往植入过器械", parent_field: "cure_type_code", show_filter: {parent_val: "复发性治疗"}, required: true, type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "implant_more", name: "填写具体产品", parent_field: "has_implant", show_filter: {parent_val: 1}},
							{isshow: "T", field: "lesions_type_code", name: "病变类型", required: true, type: "select", options: [
								{label: "囊状动脉瘤",value: "aneurysm"},
								{label: "血泡样动脉瘤",value: "1"},
								{label: "夹层动脉瘤",value: "2"},
								{label: "梭形动脉瘤",value: "3"},
								{label: "多发性动脉瘤",value: "4"},
								{label: "不规则型动脉瘤",value: "5"},
								{label: "串联性动脉瘤",value: "6"},
								{label: "冗长扩张",value: "7"},
								{label: "其它",value: "Others"},
							]},
							{isshow: "F", field: "lesions_type_more", name: "填写其它类型", parent_field: "lesions_type_code", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "has_rupture", name: "动脉瘤是否破裂", required: true, type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "T", field: "has_placeholder_symptoms", name: "是否有占位症状", required: true, type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "T", field: "lesions_part_code", name: "病变位置", required: true, type: "select", options: [
								{label: "C1",value: "C1"},
								{label: "C2",value: "C2"},
								{label: "C3",value: "C3"},
								{label: "C4",value: "C4"},
								{label: "C5",value: "C5"},
								{label: "C6",value: "C6"},
								{label: "C7",value: "C7"},
								{label: "MCA",value: "MCA"},
								{label: "ACA",value: "ACA"},
								{label: "Acoma",value: "Acoma"},
								{label: "V1",value: "V1"},
								{label: "V2",value: "V2"},
								{label: "V3",value: "V3"},
								{label: "V4",value: "V4"},
								{label: "BA",value: "BA"},
								{label: "PCA",value: "PCA"},
								{label: "Pcoma",value: "Pcoma"},
								{label: "其它",value: "Others"},
							]},
							{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "implant_part_code", name: "产品植入部位", required: true, type: "select", options: [
								{label: "左侧",value: "left"},
								{label: "右侧",value: "right"},
							]},
							{isshow: "T", field: "acts_artery_bend_code", name: "行径动脉迂曲度", required: true, type: "select", options: [
								{label: "平直",value: "left"},
								{label: "轻度",value: "1"},
								{label: "中度",value: "2"},
								{label: "重度",value: "3"},
								{label: "极度",value: "4"},
							]},
							{isshow: "T", field: "lesions_vessels_bend_code", name: "病变血管迂曲度", required: true, type: "select", options: [
								{label: "平直",value: "left"},
								{label: "轻度",value: "1"},
								{label: "中度",value: "2"},
								{label: "重度",value: "3"},
								{label: "极度",value: "4"},
							]},
							{isshow: "T", field: "vessels_status_code", name: "治疗段血管情况", required: true, type: "select", options: [
								{label: "光滑",value: "光滑"},
								{label: "伴有狭窄",value: "伴有狭窄"},
							]},
							{isshow: "F", field: "vessels_status_more", name: "填写最高狭窄率", parent_field: "vessels_status_code", show_filter: {parent_val: "伴有狭窄"}},
							{isshow: "T", field: "tumors_size", name: "瘤体大小", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "T", field: "tumors_width", name: "瘤颈宽度", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "T", field: "vessels_proximal", name: "近端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "T", field: "vessels_distal", name: "远端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
						],

						//心脉 xm
						xm: [
							//心脉主动脉
							{isshow: "T", field: "aneurysm_type_code", name: "动脉瘤类型", required: true, type: "select", options: [
								{label: "真性动脉瘤",value: "aneurysm"},
								{label: "假性动脉瘤",value: "pseudoaneurysm"},
								{label: "夹层动脉瘤",value: "dissection"},
							]},
							{isshow: "T", field: "is_implicate_blood", name: "动脉瘤是否累及重要血管", required: true, type: "select", options: [
								{label: "不详",value: "unknown"},
								{label: "否",value: "no"},
								{label: "是",value: "yes"},
							]},
							{isshow: "T", field: "angle_tumor_bend_code", name: "瘤颈弯曲角度", required: true, type: "select", options: [
								{label: "不详",value: "unknown"},
								{label: "无",value: "none"},
								{label: "轻度",value: "little"},
								{label: "中度",value: "middle"},
								{label: "重度",value: "heavy"},
							]},
							{isshow: "T", field: "degree_vessel_tortuosity_code", name: "导入血管迂曲程度", required: true, type: "select", options: [
								{label: "正常",value: "straightness"},
								{label: "比较迂曲",value: "littleBend"},
								{label: "严重迂曲",value: "heavyBend"},
								{label: "不适用",value: "inapplicable"},
								{label: "无法获知",value: "unknown"},
							]},
							{isshow: "T", field: "degree_vessel_calcification_code", name: "导入血管钙化程度", required: true, type: "select", options: [
								{label: "无",value: "none"},
								{label: "轻度钙化",value: "little"},
								{label: "中度钙化",value: "middle"},
								{label: "重度钙化",value: "heavy"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "degree_thrombus_code", name: "导入血管血栓程度", required: true, type: "select", options: [
								{label: "无",value: "none"},
								{label: "轻度",value: "little"},
								{label: "中度",value: "middle"},
								{label: "重度",value: "heavy"},
								{label: "不详",value: "unknown"},
							]},

							//心脉外周
							{isshow: "T", field: "lesions_part_code", name: "病变位置", enname: "", type: "checkboxobj", options: [
								{code: "code1", name: "髂动脉"},
								{code: "code2", name: "股动脉"},
								{code: "code3", name: "股浅动脉"},
								{code: "code4", name: "股深动脉"},
								{code: "code5", name: "腘动脉"},
								{code: "code6", name: "胫前动脉"},
								{code: "code7", name: "胫后动脉"},
								{code: "code8", name: "腓动脉"},
								{code: "code9", name: "足背动脉"},
								{code: "code10", name: "锁骨下动脉"},
								{code: "code11", name: "肾动脉"},
								{code: "Others", name: "其他"},
							], required: true, colspan: 3},
							{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
							{isshow: "T", field: "lesions_type_code", name: "病变类型", enname: "", type: "checkboxobj", options: [
								{code: "code1", name: "狭窄"},
								{code: "code2", name: "钙化"},
								{code: "code3", name: "支架内再狭窄"},
								{code: "code4", name: "动静脉瘘"},
								{code: "Others", name: "其他"},
							], required: true, colspan: 3},
							{isshow: "F", field: "lesions_type_more", name: "填写其它类型", parent_field: "lesions_type_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
						],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [
							{isshow: "T", field: "qty_target_lesions", name: "靶病变数量", required: true},
							{isshow: "T", field: "location_target_lesions_i_code", name: "靶病变一级部位", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "RCA",value: "RCA"},
								{label: "LAD",value: "LAD"},
								{label: "LCX",value: "LCX"},
								{label: "LM",value: "LM"},
								{label: "其他",value: "others"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "location_target_lesions_ii_code", name: "靶病变二级部位", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "近段",value: "near"},
								{label: "近中段",value: "nearAndMiddle"},
								{label: "中段",value: "middle"},
								{label: "中远段",value: "middleAndFar"},
								{label: "远段",value: "far"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "located_at_vessel_code", name: "位于血管分叉开口部位", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "是",value: "yes"},
								{label: "否",value: "no"},
								{label: "不详",value: "unknown"},
							]},

							{isshow: "T", field: "diameter_vessel_original", name: "靶血管原直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
							{isshow: "T", field: "rate_vessel_code", name: "靶血管狭窄率", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "90%-100%",value: "ninetyToHandrud"},
								{label: "80%-89%",value: "eightyToNinety"},
								{label: "70%-79%",value: "seventyToEighty"},
								{label: "50%-69%",value: "fiftyToSeventy"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "degree_vessel_calcification_code", name: "血管钙化程度", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "无",value: "none"},
								{label: "轻度",value: "little"},
								{label: "中度",value: "middle"},
								{label: "重度",value: "heavy"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "degree_vessel_tortuosity_code", name: "血管迂曲程度", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "平直",value: "straightness"},
								{label: "一般迂曲",value: "littleBend"},
								{label: "严重迂曲",value: "heavyBend"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "T", field: "degree_thrombus_code", name: "血栓程度", required: true, type: "select", options: [
								{label: " ",value: "0"},
								{label: "无",value: "none"},
								{label: "轻度",value: "little"},
								{label: "中度",value: "middle"},
								{label: "重度",value: "heavy"},
								{label: "不详",value: "unknown"},
							]},
						],

						//电生理 dsl
						dsl: [
							{isshow: "T", field: "code", name: "申请单号"},
							{isshow: "T", field: "doc_date", name: "申请日期", type: "date"},
							{isshow: "T", field: "reason_name", name: "借用目的", type: "select", options: [{label: "手术",value: "ss"}, {label: "培训、销售科室会等",value: "ksh"},{label: "研发工程",value: "yf"}, {label: "展示培训",value: "zs"}]},
							{isshow: "T", field: "return_date", name: "计划归还日期", type: "date"},
							{isshow: "T", field: "tool_type_name", name: "工具类型", type: "select", options: [{label: "工具备件",value: "bj"}, {label: "工具成套",value: "ct"}]},
							{isshow: "T", field: "delivery_name", name: "发货组织"},
							{isshow: "T", field: "apply_type_name", name: "申请类型", type: "select", options: [{label: "内部借用",value: "nei"}, {label: "外部借用",value: "wai"}]},
							{isshow: "T", field: "applyer_name", name: "申请人", disabled: true},
							{isshow: "T", field: "apply_org_name", name: "申请仓库"}
						],

						//骨科 gk
						gk: [
							{isshow: "T", field: "code", name: "申请单号"},
							{isshow: "T", field: "doc_date", name: "申请日期", type: "date"},
							{isshow: "T", field: "reason_name", name: "借用目的", type: "select", options: [{label: "手术",value: "ss"}, {label: "培训、销售科室会等",value: "ksh"},{label: "研发工程",value: "yf"}, {label: "展示培训",value: "zs"}]},
							{isshow: "T", field: "return_date", name: "计划归还日期", type: "date"},
							{isshow: "T", field: "tool_type_name", name: "工具类型", type: "select", options: [{label: "工具备件",value: "bj"}, {label: "工具成套",value: "ct"}]},
							{isshow: "T", field: "delivery_name", name: "发货组织"},
							{isshow: "T", field: "apply_type_name", name: "申请类型", type: "select", options: [{label: "内部借用",value: "nei"}, {label: "外部借用",value: "wai"}]},
							{isshow: "T", field: "applyer_name", name: "申请人", disabled: true},
							{isshow: "T", field: "apply_org_name", name: "申请仓库"}
						]
					},

					//手术情况cmp_operation
					complaint_type_ssqk: {
						//冠脉 gm
						gm: [
							{isshow: "T", field: "hospital_name", name: "医院名称", enname: "Hospital Name", type: "popup", required: true},
							{isshow: "T", field: "hospital_address", name: "医院地址", enname: "Event Territory", type: "span", required: true},
							{isshow: "T", field: "doctor", name: "手术医生", enname: "Physician's Name", required: true},
							{isshow: "T", field: "operation_date", name: "手术日期", enname: "Procedure Date", type: "date", required: true},
							{isshow: "T", field: "prodvalid_date", name: "产品有效期", enname: "Expiration date", type: "date", required: true, disabled: true},
							{isshow: "T", field: "piercing_part_code", name: "手术刺穿部位", enname: "Vascular access site", type: "select", options: [
								{label: "桡动脉",value: "Radial"},
								{label: "臂动脉",value: "Brachial"},
								{label: "股动脉",value: "Femoral"},
								{label: "不详",value: "Unknown"},
							]},
							{isshow: "T", field: "disease_preballoon_dilatation_code", name: "球囊预扩", enname: "Lesion pre-dilated?", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "F", field: "disease_preballoon_dilatation_spec", name: "预扩球囊规格", enname: "Type of Balloon", required: true},
							{isshow: "F", field: "pre_dilation_pressure", name: "预扩球囊压力", enname: "Pressure used", required: true, type: "number"},
							{isshow: "F", field: "disease_preballoon_dilatation_sku", name: "请提供品牌", enname: "Please Provide The Brand", required: true},
							{isshow: "F", field: "disease_preballoon_dilatation_more", name: "预扩后病变的狭窄程度说明", enname: "The Degree Of Stenosis After Preexpansion Is Illustrated", type: "select", options: [
								{label: "30 - 50%",value: "30 - 50%"},
								{label: "50 - 70%",value: "50 - 70%"},
								{label: ">70%",value: ">70%"},
							], required: true},
							{isshow: "T", field: "disease_retroballoon_dilatation_code", name: "球囊后扩张", enname: "Lesion post-dilated?", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "F", field: "disease_retroballoon_dilatation_spec", name: "后扩球囊规格", enname: "Size of Post-balloon", required: true},
							{isshow: "F", field: "post_dilation_pressure", name: "后扩球囊压力", enname: "Pressure used with Post-balloon", required: true},
							{isshow: "F", field: "disease_retroballoon_dilatation_sku", name: "请提供品牌", enname: "Please Provide The Brand", required: true},
							{isshow: "T", field: "is_implanted_otherstents_code", name: "是否同时植入其他支架", enname: "Other stents implanted?", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
							], required: true},
							{isshow: "F", field: "is_implanted_otherstents_spec", name: "品牌规格", enname: "Complete Type and Brand", required: true},
							{isshow: "F", field: "is_implanted_otherstents_order", name: "请说明植入的先后顺序", enname: "Please describe sequence", required: true},
							{isshow: "F", field: "is_implanted_otherstents_overlap", name: "是否重叠支架", enname: "Is there any overlapping", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否",value: "No"},
							], required: true},
							{isshow: "T", field: "drugs_after_code", name: "术后用药", enname: "Postoperative medication", type: "select", options: [
								{label: "阿司匹林",value: "Asprin"},
								{label: "氯吡格雷",value: "Clopidogrel"},
								{label: "不详",value: "Unknown"},
								{label: "其他",value: "Others"},
							], required: true},
							{isshow: "F", field: "drugs_after_more", name: "请说明", enname: "Please describe"},
							{isshow: "F", field: "coronary_code", name: "使用的冠脉影像", enname: "Type of the Images", type: "select", options: [
								{label: "IVUS",value: "IVUS"},
								{label: "OCT",value: "OCT"},
								{label: "X光冠脉造影",value: "X Ray"},
								{label: "其他",value: "Others"},
								{label: "无",value: "None"},
							], required: true},
							{isshow: "F", field: "coronary_more", name: "请说明", enname: "Specific Description", required: true},
							{isshow: "T", field: "complicationList_remark", name: "产品植入引起", enname: "Is there any complication caused by PCI?", type: "radio", options: [
								{code: "No", name: "无"},
								{code: "Yes", name: "有"},
							], required: true, colspan: 3},
							{isshow: "F", field: "complicationList", name: " ", enname: " ", type: "checkboxobj", options: [
								{code: "E0402 Hypersensitivity/Allergic reaction", name: "E0402过敏反应"},
								{code: "E0501 Aneurysm", name: "E0501动脉瘤"},
								{code: "E060108 Irregular Pulse", name: "E060108心律失常"},
								{code: "E060110 Ventricular Fibrillation", name: "E060110心室纤维颤动"},
								{code: "E0605 cardiac tamponade", name: "E0605心脏栓塞"},
								{code: "E0515 Vascular Dissection", name: "E0515血管夹层"},
								{code: "E0503 Embilism/Embolus", name: "E0503栓塞/栓子"},
								{code: "E050301 Air Emboliism", name: "E050301空气栓塞"},
								{code: "E050302 Foreign Body Embolism", name: "E050302异物栓塞"},
								{code: "E050304 Thromboembolism", name: "E050304血管远端栓塞/支架内栓塞"},
								{code: "E0506 Hemorrhage/Bleeding", name: "E0506出血/溶血"},
								{code: "E2314 Fistula", name: "E2314瘘管"},
								{code: "E1014 Gastrointeseinal Hemorrhage", name: "E1014消化道出血"},
								{code: "E0118 Intracranial", name: "E0118脑出血"},
								{code: "E2321 Low Blood Pressure/Hypotension", name: "E2321低血压"},
								{code: "E2320 High Blood Pressure/Hypertension", name: "E2320高血压"},
								{code: "E19 lnfection", name: "E19感染"},
								{code: "E1901 Bacterial Infection", name: "E1901细菌感染"},
								{code: "E2109 Implant pain", name: "E2109植入疼痛"},
								{code: "E2112 Introperative Pain", name: "E2112术中疼痛"},
								{code: "E230102 Hyperthermia", name: "E230102发高烧"},
								{code: "E230103 Hypothermia", name: "E230103发低烧"},
								{code: "F19 Surgical Intervention", name: "F19需要紧急外科干预（紧急CABG）"},
								{code: "F02 Death", name: "F02死亡"},
								{code: "Reaction with antiplatelet agents/anticoagulants/contrast agents", name: "药物与抗血小板药物/凝血药物/造影剂反应"},
								{code: "Other Caused By PCI", name: "其他产品植入术引起其他描述"}
							], required: true, colspan: 3},
							{isshow: "F", field: "complicationList_more", name: "请说明", enname: "Specific Description"},
							{isshow: "T", field: "complicationList_remark2", name: "药物引起", enname: "Is there any complication caused by drug coating of the stent?", type: "radio", options: [
								{code: "No", name: "无"},
								{code: "Yes", name: "有"},
							], required: true, colspan: 3},
							{isshow: "F", field: "complicationList2", name: " ", enname: " ", type: "checkboxobj", options: [
								{code: "E1104 Liver Damage/Dysfunction", name: "E1104肝功能测试异常"},
								{code: "E0301 Anemia", name: "E0301贫血"},
								{code: "E1601 Arthralgia", name: "E1601关节痛"},
								{code: "E1008 Diarrher", name: "E1008腹泻"},
								{code: "Hypercholesterolemia", name: "血胆脂醇过多"},
								{code: "E0402 Hypersensitivity/Allergic reaction", name: "E0402超敏和过敏"},
								{code: "Hyperiglyceride", name: "高三酸甘油脂血症"},
								{code: "E120202 Hyponatremia", name: "E120202血钾过少"},
								{code: "E061202 Myocardial infarction", name: "E061202心肌梗塞"},
								{code: "E0612 Ischemic Heart Disease", name: "E0612心肌缺血"},
								{code: "E2328 Obstruction/Occlusion", name: "E2328血管闭塞"},
								{code: "E061201 Prolonged Angina", name: "E061201长时间心绞痛"},
								{code: "E0513 Pseudoaneurysm", name: "E0513假性动脉瘤"},
								{code: "E130501 Renal Failure", name: "E130501肾衰竭"},
								{code: "In-stent Restenosis", name: "支架再狭窄"},
								{code: "Graft rupture", name: "原位和旁路移植血管Graft破裂"},
								{code: "E0133 Stroke", name: "E0133中风"},
								{code: "E050304 Thromboembolism", name: "E050304血栓"},
								{code: "E060110 Ventricular Fibrillation", name: "E060110心室纤维颤动"},
								{code: "E0109 Convulsion/Seizure", name: "E0109动脉痉挛"},
								{code: "E0511 Perforation of Vessels", name: "E0511动脉穿孔"},
								{code: "E19 Infection", name: "E19感染"},
								{code: "Interstitial lung disease", name: "肺泡间质性肺病"},
								{code: "E180104 Lymphoma", name: "淋巴瘤和其他恶性肿瘤"},
								{code: "Leukopenia", name: "白血球减少"},
								{code: "E030202 Thrombocytopenia", name: "E030202血小板减少"},
								{code: "Other Caused By Drug Coating", name: "药物引起其他描述"},
							], required: true, colspan: 3},
							{isshow: "F", field: "complicationList2_more", name: "请说明", enname: "Specific Description"},
						],

						//神通 st
						st: [
							//共用
							{isshow: "T", field: "hospital_name", name: "医院名称", enname: "Hospital Name", type: "popup", required: true},
							{isshow: "T", field: "hospital_address", name: "医院地址", enname: "Address", type: "span"},
							{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
							{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
							{isshow: "T", field: "doctor", name: "手术医生"},
							{isshow: "T", field: "doctor_phone", name: "医生电话"},
							{isshow: "T", field: "operation_date", name: "手术日期", enname: "Procedure Date", type: "date", required: true},
							{isshow: "T", field: "receive_date", name: "知悉日期", enname: "Event Known Date", type: "date", required: true},

							//一、出血产品 如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
							{isshow: "F", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
							{isshow: "F", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
								{label: "全麻",value: "全麻"},
								{label: "局麻",value: "局麻"},
							]},
							{isshow: "F", field: "operation_scheme", name: "手术方案"},
							{isshow: "F", field: "has_socket", name: "是否套接", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "puncture", name: "穿刺部位", type: "select", options: [
								{label: "左侧股动脉",value: "left"},
								{label: "右侧股动脉",value: "right"},
								{label: "双侧股动脉",value: "Yes"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", enname: "Event description", type: "textarea", colspan: 3, required: true},
							{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
								{name: "推测与产品无关",code: "1"},
								{name: "推测与产品有关",code: "2"},
								{name: "推测与患者病灶因素有关",code: "3"},
								{name: "推测与患者自身其他因素有关",code: "4"},
								{name: "其他",code: "Others"},
							],colspan: 3},
							{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},

							//1.选择Tubridge产品
							{isshow: "F", field: "has_caton", name: "入鞘是否有卡顿现象", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "resistance_code", name: "支架推送阻力", type: "select", options: [
								{label: "正常",value: "Yes"},
								{label: "大",value: "No"},
								{label: "过大",value: "big"},
							]},
							{isshow: "F", field: "has_open_hard", name: "架是否有打开困难或者打不开的现象", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "has_shorten", name: "架是否发生明显短缩现象", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "has_insufficient", name: "支架是否有头端锚定力不足现象", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "has_smooth", name: "术中支架重新回收至微导管进行再释放是否顺利", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "has_compliance", name: "微导管顺应性", type: "select", options: [
								{label: "好",value: 1},
								{label: "不够好",value: 2},
							]},
							{isshow: "F", field: "has_adherence", name: "支架充分贴壁", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "has_retention", name: "造影剂滞留", type: "select", options: [
								{label: "明显",value: 1},
								{label: "不明显",value: 2},
							]},
							{isshow: "F", field: "has_covered_stents", name: "是否覆盖分支", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "covered_stents_code", name: "具体选择", parent_field: "has_covered_stents", show_filter: {parent_val: 1}, type: "radio", options: [
								{code: "code1", name: "眼动脉"},
								{code: "code2", name: "后交通动脉"},
								{code: "code3", name: "脉络膜前动脉"},
								{code: "code4", name: "小脑后下动脉"},
								{code: "code5", name: "小脑前下动脉"},
								{code: "code6", name: "内听动脉"},
							], required: true, colspan: 3},
							{isshow: "F", field: "release_point_head_code", name: "头端释放点", type: "select", options: [
								{label: "直段",value: "直段"},
								{label: "弯段",value: "弯段"},
							]},
							{isshow: "F", field: "release_point_tail_code", name: "尾端释放点", type: "select", options: [
								{label: "直段",value: "直段"},
								{label: "弯段",value: "弯段"},
							]},
							{isshow: "F", field: "has_knead_after", name: "术后是否对支架进行按摩", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "knead_after_more", name: "具体选择", type: "select", options: [
								{label: "导丝辅助",value: "导丝辅助"},
								{label: "支架导管辅助",value: "支架导管辅助"},
							]},
							{isshow: "F", field: "has_after_dilation", name: "术后是否采用球囊后扩", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "F", field: "complication_code", name: "并发症", type: "select", options: [
								{label: "产品植入术引起",value: "产品植入术引起"},
								{label: "药物引起",value: "药物引起"},
								{label: "无",value: "No"},
							], required: true},

							//2.选择Willis产品
							{isshow: "F", field: "mid_pipe_location_code", name: "中间导管到达位置", type: "select", options: [
								{label: "动脉瘤近端",value: "动脉瘤近端"},
								{label: "动脉瘤远端",value: "动脉瘤远端"},
							]},
							{isshow: "F", field: "expansion_moment_code", name: "支架释放扩张时间", type: "select", options: [
								{label: "＜30s",value: "Yes"},
								{label: " ≥30s",value: "No"},
							]},
							{isshow: "F", field: "isolation_effect_code", name: "隔绝效果", type: "radio", options: [
								{code: "code1", name: "完全隔绝"},
								{code: "code2", name: "少量内漏"},
								{code: "code3", name: "内漏明显"},
							], required: true, colspan: 3},

							//3.选择Numen类产品
							{isshow: "F", field: "filling_process_code", name: "填塞过程", type: "radio", options: [
								{code: "code1", name: "正常"},
								{code: "code2", name: "阻力大"},
								{code: "code3", name: "填塞过程中动脉瘤破裂"},
							], required: true, colspan: 3},
							{isshow: "F", field: "mico_pipe_instil_code", name: "微导管滴注", type: "radio", options: [
								{code: "code1", name: "未接滴注"},
								{code: "code2", name: "滴注结束后未及时补充"},
								{code: "code3", name: "持续滴注且顺畅"},
								{code: "code4", name: "持续滴注但不顺"},
							], required: true, colspan: 3},
							{isshow: "F", field: "kickpipe_code", name: "踢管", type: "radio", options: [
								{code: "code1", name: "无"},
								{code: "code2", name: "明显"},
								{code: "code3", name: "将微导管头踢出瘤腔"},
							], required: true, colspan: 3},
							{isshow: "F", field: "relief_cnt", name: "解脱次数"},
							{isshow: "F", field: "relief_status_code", name: "解脱状态", type: "radio", options: [
								{code: "code1", name: "完全解脱"},
								{code: "code2", name: "不完全，后撤中解脱或带出部分圈尾"},
								{code: "code3", name: "未解脱"},
							], required: true, colspan: 3},
							{isshow: "F", field: "pour_t_code", name: "倒T情况", type: "radio", options: [
								{code: "code1", name: "正T"},
								{code: "code2", name: "倒T"},
								{code: "code3", name: "十字"},
								{code: "code4", name: "天窗"},
							], required: true, colspan: 3},
							{isshow: "F", field: "unwind_code", name: "解旋", type: "radio", options: [
								{code: "code1", name: "无"},
								{code: "code2", name: "解旋"},
							], required: true, colspan: 3},
							{isshow: "F", field: "push_process_code", name: "推送过程", type: "radio", options: [
								{code: "code1", name: "正常"},
								{code: "code2", name: "大"},
								{code: "code3", name: "过大或无法推送"},
							], required: true, colspan: 3},
							{isshow: "F", field: "operation_effect_code", name: "术后效果", type: "radio", options: [
								{code: "code1", name: "Raymond I级"},
								{code: "code2", name: "Raymond II级"},
								{code: "code3", name: "Raymond III级"},
							], required: true, colspan: 3},

							//二、导管产品 选择 Fastrack/Utrack
							{isshow: "T", field: "has_pipe_shape", name: "导管是否塑形", type: "select", options: [
								{label: "是",value: 1},
								{label: "否",value: 2},
							]},
							{isshow: "T", field: "pipe_in_place_code", name: "导管推送到位情况", type: "cascader", options: [
								{label: "轻松到达目标位置",value: "轻松到达目标位置"},
								{label: "到达目标位置但有一定阻力",value: "到达目标位置但有一定阻力"},
								{label: "到达目标位置但阻力较大",value: "到达目标位置但阻力较大"},
								{label: "未达到目标位置",value: "未达到目标位置", children: [
									{label: "血管迂曲",value: "血管迂曲"},
									{label: "医生风险判断后未上高",value: "医生风险判断后未上高"},
									{label: "长鞘/导引导管支撑不够",value: "长鞘/导引导管支撑不够"},
									{label: "发生血管痉挛",value: "发生血管痉挛"},
									{label: "管体打折",value: "管体打折"},
									{label: "出现血管壁损伤",value: "出现血管壁损伤"},
									{label: "其他",value: "Others"},
								]},
							]},
							{isshow: "F", field: "pipe_in_place_more", name: "具体填写"},
							{isshow: "T", field: "trans_instrument_code", name: "输送器械", type: "cascader", options: [
								{label: "轻松输送到位",value: "轻松输送到位"},
								{label: "输送到位但有阻力",value: "输送到位但有阻力"},
								{label: "输送到位但阻力较大",value: "输送到位但阻力较大"},
								{label: "未成功输送器械",value: "未成功输送器械", children: [
									{label: "器械原因",value: "器械原因"},
									{label: "导管打折",value: "导管打折"},
									{label: "导管拉长/头端分层",value: "导管拉长/头端分层"},
									{label: "其他",value: "Others"},
								]},
							]},
							{isshow: "F", field: "trans_instrument_more", name: "具体填写"},
							{isshow: "T", field: "recycling_instrument_code", name: "调整/回收器械", type: "select", options: [
								{label: "轻松回收至微导管中",value: "轻松回收至微导管中"},
								{label: "可以回收但有阻力",value: "可以回收但有阻力"},
								{label: "可以回收但阻力较大",value: "可以回收但阻力较大"},
								{label: "未成功回收至微导管中",value: "未成功回收至微导管中"},
								{label: "其它",value: "Others"},
							]},
							{isshow: "F", field: "recycling_instrument_more", name: "具体填写"},

							// 三、缺血产品 ：Apollo，Bridge
							{isshow: "T", field: "disease_preballoon_dilatation_code", name: "球囊预扩", enname: "", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "F", field: "disease_preballoon_dilatation_spec", name: "预扩球囊规格", enname: "", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "F", field: "pre_dilation_pressure", name: "预扩球囊压力", enname: "", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "F", field: "disease_preballoon_dilatation_sku", name: "请提供品牌", enname: "", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "T", field: "disease_retroballoon_dilatation_code", name: "球囊后扩张", enname: "", type: "select", options: [
								{label: "不详",value: "Unknown"},
								{label: "有",value: "Yes"},
								{label: "无",value: "No"},
							], required: true},
							{isshow: "F", field: "disease_retroballoon_dilatation_spec", name: "后扩球囊规格", enname: "", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "F", field: "post_dilation_pressure", name: "后扩球囊压力", enname: "", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "F", field: "disease_retroballoon_dilatation_sku", name: "请提供品牌", enname: "", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
							{isshow: "T", field: "has_stents_trans_smooth", name: "支架输入过程", enname: "", type: "select", options: [
								{label: "顺利",value: 1},
								{label: "不顺利",value: 2},
							], required: true},
							{isshow: "T", field: "has_stents_lesions", name: "支架通过病变", enname: "", type: "select", options: [
								{label: "通过",value: 1},
								{label: "通不过",value: 2},
							], required: true},
							{isshow: "T", field: "has_stents_inplace", name: "支架到位", enname: "", type: "select", options: [
								{label: "到位",value: 1},
								{label: "未到位",value: 2},
							], required: true},
							{isshow: "T", field: "has_stents_expansion", name: "支架扩张情况", enname: "", type: "select", options: [
								{label: "正常",value: 1},
								{label: "不能扩开支架",value: 2},
							], required: true},
							{isshow: "T", field: "expansion_pressure", name: "扩张最大压力", enname: "", required: true},

							//全部产品
							{isshow: "T", field: "used_equipment", name: "请提供配套使用器械品牌及规格（如使用了配套器械）", type: "radio",colspan: 3},
							{isshow: "T", field: "long_sheath", name: "长鞘"},
							{isshow: "T", field: "pipe_spec", name: "导引导管", enname: ""},
							{isshow: "T", field: "mid_pipe", name: "中间导管", enname: ""},
							{isshow: "T", field: "mico_pipe", name: "微导管", enname: ""},
							{isshow: "T", field: "thread_spec", name: "导丝", enname: ""},
							{isshow: "T", field: "instrument_more", name: "其它", enname: ""},
						],

						//心脉 xm
						xm: [
							{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
							{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
							{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},

							{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
							{isshow: "T", field: "doctor", name: "手术医生", required: true},
							{isshow: "T", field: "doctor_phone", name: "医生电话", required: true},
							{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
							{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

							//心脉主动脉
							{isshow: "T", field: "system_import_process_code", name: "系统导入过程", type: "select", options: [
								{label: "导入顺利",value: "smoothly"},
								{label: "导入困难",value: "difficulty"},
								{label: "无法导入",value: "unable"},
							], required: true},
							{isshow: "T", field: "is_trestle_shift_code", name: "支架是否移位", type: "select", options: [
								{label: "不适用",value: "inapplicable"},
								{label: "无法获知",value: "unknow"},
								{label: "无移位",value: "unshift"},
								{label: "有移位",value: "shift"},
							]},
							{isshow: "T", field: "is_trestle_twist_code", name: "支架是否扭曲、弯折", type: "select", options: [
								{label: "不适用",value: "inapplicable"},
								{label: "无法获知",value: "unknow"},
								{label: "无扭曲",value: "untwist"},
								{label: "良好",value: "good"},
								{label: "轻度扭曲",value: "littletwist"},
								{label: "弯折",value: "bend"},
							]},
							{isshow: "T", field: "is_trestle_performance_code", name: "支架形态及贴壁性能", type: "select", options: [
								{label: "不适用",value: "inapplicable"},
								{label: "无法获知",value: "unknow"},
								{label: "很好",value: "nice"},
								{label: "良好",value: "good"},
								{label: "一般",value: "common"},
								{label: "不佳",value: "poor"},
							]},
							{isshow: "T", field: "is_endoleak_code", name: "释放后是否内漏", type: "select", options: [
								{label: "不适用",value: "inapplicable"},
								{label: "无法获知",value: "unknow"},
								{label: "否",value: "no"},
								{label: "是",value: "yes"},
							]},
							{isshow: "T", field: "is_balloon_code", name: "是否使用球囊", type: "select", options: [
								{label: "不适用",value: "不适用"},
								{label: "否",value: "no"},
								{label: "是",value: "yes"},
							]},
							{isshow: "F", field: "is_balloon_more", name: "品牌/规格", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}},
							{isshow: "F", field: "effect_balloon", name: "球囊使用效果", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}},
							{isshow: "F", field: "capacity_balloon", name: "球囊充盈量", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}, type: "number", valunit: "mm", valunitwidth: "30px"},
							//心脉外周
							{isshow: "T", field: "emptying_pipe_code", name: "导入前是否进行导管排空", type: "select", options: [
								{label: "是",value: "Yes"},
								{label: "否，导入后排空",value: "No"},
								{label: "否，未排空",value: "否，未排空"},
							], required: true},
							{isshow: "T", field: "degree_vessel_tortuosity_code", name: "导入血管迂曲程度", required: true, type: "select", options: [
								{label: "不迂曲",value: "straightness"},
								{label: "一般迂曲",value: "littleBend"},
								{label: "严重迂曲",value: "heavyBend"},
							]},
							{isshow: "T", field: "degree_vessel_calcification_code", name: "导入血管钙化程度", required: true, type: "select", options: [
								{label: "无明显钙化",value: "none"},
								{label: "轻度",value: "little"},
								{label: "中度",value: "middle"},
								{label: "非常严重",value: "heavy"},
								{label: "不详",value: "unknown"},
							]},
							{isshow: "F", field: "post_dilation_code", name: "球囊扩张情况", required: true, type: "select", options: [
								{label: "正常扩张",value: "none"},
								{label: "球囊泄露",value: "little"},
								{label: "球囊破裂（轴向破裂、径向破裂）",value: "middle"},
							]},
							{isshow: "F", field: "post_pressure", name: "球囊使用压力", valunit: "atm", valunitwidth: "30px"},
							{isshow: "F", field: "field2", name: "导管回撤性", required: true, type: "select", options: [
								{label: "回撤顺利",value: "none"},
								{label: "回撤困难",value: "little"},
								{label: "无法回撤",value: "middle"},
							]},
							{isshow: "F", field: "prod_expand_cnt", name: "产品扩张次数"},
							{isshow: "F", field: "thread_sku", name: "导丝品牌", enname: "Godet Brand", required: true},
							{isshow: "F", field: "thread_spec", name: "导丝规格"},
							{isshow: "F", field: "sheath_sku", name: "鞘品牌", enname: "Sheath Brand", required: true},
							{isshow: "F", field: "sheath_spec", name: "鞘规格", enname: "Sheath Product Specifications", required: true},
							{isshow: "F", field: "sheath_length", name: "鞘长度", enname: "", required: true, valunit: "cm", valunitwidth: "30px"},

							{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
							{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
								{label: "推测与产品无关",value: "1"},
								{label: "推测与产品有关",value: "2"},
								{label: "推测与患者病灶因素有关",value: "3"},
								{label: "推测与患者自身其他因素有关",value: "4"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
						],

						//电生理 dsl
						dsl: [
							{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
							{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
							{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
							{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
							{isshow: "T", field: "doctor", name: "手术医生"},
							{isshow: "T", field: "doctor_phone", name: "医生电话"},
							{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
							{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

							//电生理-导管产品   -设备产品只有前两个字段 并且手术进展选项发生变化
							{isshow: "T", field: "rhythm_type", name: "心率失常类型", type: "radio", options: [
								{code: "code1", name: "一、室上速"},
								{code: "code2", name: "二、房速"},
								{code: "code3", name: "三、房扑"},
								{code: "code4", name: "四、房颤"},
								{code: "code5", name: "五、室速"},
								{code: "code6", name: "六、室早"},
							], required: true, colspan: 3},
							{isshow: "T", field: "operation_progress_code", name: "手术进展", type: "radio", options: [
								{code: "code1", name: "一、故障无法排除"},
								{code: "code2", name: "二、故障排除，手术顺利进行"},
							], required: true,colspan: 3},
							{isshow: "T", field: "adverse_effects_code", name: "产生不良影响", type: "radio", options: [
								{code: "code1", name: "一、是"},
								{code: "code2", name: "二、否"},
							], required: true,colspan: 3},
							{isshow: "T", field: "return_visit_code", name: "术者回访", type: "radio", options: [
								{code: "code1", name: "一、是"},
								{code: "code2", name: "二、否"},
							], required: true,colspan: 3},
							{isshow: "T", field: "radio_band_code", name: "射频仪品牌", type: "radio", options: [
								{code: "code1", name: "一、锦江"},
								{code: "code2", name: "二、强生"},
								{code: "code3", name: "三、IBI"},
								{code: "code4", name: "四、华南医电"},
								{code: "code5", name: "五、微创"},
								{code: "code6", name: "六、其他"},
							], required: true,colspan: 3},
							{isshow: "T", field: "physiological_band_code", name: "多道电生理仪品牌", type: "radio", options: [
								{code: "code1", name: "一、锦江"},
								{code: "code2", name: "二、圣犹达"},
								{code: "code3", name: "三、华南医电"},
								{code: "code4", name: "四、微创"},
								{code: "code5", name: "五、其他"},
							], required: true,colspan: 3},

							{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3},
							{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
								{label: " ",value: "0"},
								{label: "推测与产品无关",value: "1"},
								{label: "推测与产品有关",value: "2"},
								{label: "推测与患者病灶因素有关",value: "3"},
								{label: "推测与患者自身其他因素有关",value: "4"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
						],

						//优通 yt
						yt: [
							{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
							{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
							{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
							{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
							{isshow: "T", field: "doctor", name: "手术医生", required: true},
							{isshow: "T", field: "doctor_phone", name: "医生电话"},
							{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
							{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},
							{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
							{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
								{label: " ",value: "0"},
								{label: "推测与产品无关",value: "1"},
								{label: "推测与产品有关",value: "2"},
								{label: "推测与患者病灶因素有关",value: "3"},
								{label: "推测与患者自身其他因素有关",value: "4"},
								{label: "其他",value: "Others"},
							]},
							{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
						],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [
							{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
							{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
							{isshow: "T", field: "doctor", name: "手术医生", required: true},
							{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
							{isshow: "T", field: "national", name: "事发国家", required: true},
							{isshow: "T", field: "disease_preballoon_dilatation_code", name: "球囊预扩", type: "select", options: [
								{label: " ",value: "0"},
								{label: "不详",value: "notknown"},
								{label: "有",value: "has"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "disease_retroballoon_dilatation_code", name: "球囊后扩张", type: "select", options: [
								{label: " ",value: "0"},
								{label: "不详",value: "notknown"},
								{label: "有",value: "has"},
								{label: "无",value: "none"},
							]},
							{isshow: "T", field: "is_implanted_otherstents_code", name: "是否同时植入其他支架", type: "select", options: [
								{label: "不详",value: "notknown"},
								{label: "是",value: "has"},
								{label: "否",value: "none"},
							], required: true},
							{isshow: "T", field: "remedial_measures_code", name: "补救措施", type: "select", options: [
								{label: "紧急CABG",value: "CABG"},
								{label: "原地贴壁",value: "adherent"},
								{label: "抓捕器取出",value: "out"},
								{label: "再次植入支架",value: "implanted"},
								{label: "其它",value: "other"},
							]},
							{isshow: "T", field: "drugs_after_code", name: "术后用药", type: "select", options: [
								{label: " ",value: "0"},
								{label: "阿司匹林",value: "aspirin"},
								{label: "氯吡格雷",value: "clopidogrel"},
								{label: "不详",value: "notknown"},
								{label: "其他",value: "others"},
							]},
							{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3},
							{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
								{label: "推测与产品无关",value: "1"},
								{label: "推测与产品有关",value: "2"},
								{label: "推测与患者病灶因素有关",value: "3"},
								{label: "推测与患者自身其他因素有关",value: "4"},
								{label: "其他",value: "5"},
							]},

							{isshow: "T", field: "complication_code", name: "并发症", type: "checkboxobj", options: [
								{code: "code1", name: "一、产品植入术引起"},
								{code: "code2", name: "二、药物引起"},
								{code: "code3", name: "三、无"}
							], required: true, colspan: 3}
						],

						//骨科 gk
						gk: [
							{isshow: "T", field: "code", name: "申请单号"},
							{isshow: "T", field: "doc_date", name: "申请日期", type: "date"},
							{isshow: "T", field: "reason_name", name: "借用目的", type: "select", options: [{label: "手术",value: "ss"}, {label: "培训、销售科室会等",value: "ksh"},{label: "研发工程",value: "yf"}, {label: "展示培训",value: "zs"}]},
							{isshow: "T", field: "return_date", name: "计划归还日期", type: "date"},
							{isshow: "T", field: "tool_type_name", name: "工具类型", type: "select", options: [{label: "工具备件",value: "bj"}, {label: "工具成套",value: "ct"}]},
							{isshow: "T", field: "delivery_name", name: "发货组织"},
							{isshow: "T", field: "apply_type_name", name: "申请类型", type: "select", options: [{label: "内部借用",value: "nei"}, {label: "外部借用",value: "wai"}]},
							{isshow: "T", field: "applyer_name", name: "申请人", disabled: true},
							{isshow: "T", field: "apply_org_name", name: "申请仓库"},
						],
					},

					//手术附件品牌 cmp_brand
					complaint_type_ssfjpp: {
						//冠脉 gm
						gm: [
							{isshow: "T", field: "pipe_spec", name: "导引导管规格", enname: "Guide Catheter Specification", required: true},
							{isshow: "T", field: "pipe_sku", name: "导引导管品牌", enname: "Guide Catheter Brand", required: true},
							{isshow: "T", field: "thread_spec", name: "导丝规格", enname: "Guidewire Specification", required: true},
							{isshow: "T", field: "thread_sku", name: "导丝品牌", enname: "Guidewire Brand", required: true},
							{isshow: "T", field: "sheath_spec", name: "鞘规格", enname: "Sheath Specification", required: true},
							{isshow: "T", field: "sheath_sku", name: "鞘品牌", enname: "Sheath Brand", required: true},
						],

						//神通 st
						st: [
							{isshow: "T", field: "guide_tube_code", name: "导引导管品牌", required: true},
							{isshow: "T", field: "guide_wire_code", name: "导丝品牌", required: true},
							{isshow: "T", field: "sheath_code", name: "鞘品牌", required: true}
						],

						//心脉 xm
						xm: [],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [
							{isshow: "T", field: "guide_tube_code", name: "导引导管", required: true},
							{isshow: "T", field: "guide_wire_code", name: "导丝", required: true},
							{isshow: "T", field: "sheath_code", name: "鞘", required: true}
						],

						//电生理 dsl
						dsl: [
							{isshow: "T", field: "sheath_code", name: "长鞘品牌", required: true},
							{isshow: "T", field: "model", name: "型号", required: true},
						],

						//骨科 gk
						gk: [],
					},

					//其它项 cmp_other 附件cmp_other_file 负责人cmp_other_director 邮件cmp_other_mail
					complaint_type_qtx: {
						//冠脉 gm
						gm: [],

						//神通 st
						st: [
							{isshow: "F", field: "remark_xm", name: "remark_xm"},
						],

						//心脉 xm
						xm: [
							{isshow: "F", field: "remark_xm", name: "remark_xm"},
						],

						//电生理 dsl
						dsl: [
							{isshow: "F", field: "remark_xm", name: "remark_xm"},
						],

						//优通 yt
						yt: [
							{isshow: "F", field: "remark_xm", name: "remark_xm"},
						],

						//国际 gj
						gj: [],

						//特殊 ts
						ts: [],

						//骨科 gk
						gk: [],
					},
					tableFields_annex: [
						{isshow: "T", field: "file_name", name: "文件名"},
						{isshow: "T", field: "file_size", name: "大小", width: "100"},
						{isshow: "T", field: "file_state", name: "状态", width: "100"},
						{isshow: "T", field: "id", name: "操作", width: "150", type: "buttons",
							buttons: [
								{name: "下载", code: "row_xz"},
								{name: "删除", code: "row_sc"}
							],
						},
					],
					formFields_annex: [
						{isshow: "T", field: "doctor_opinion_code", name: "医生意见", enname: "Physician's Assessment", type: "select", options: [
							{label: "推测与产品无关",value: "Not related to product"},
							{label: "推测与产品质量有关",value: "Related to product quality"},
							{label: "推测与患者病灶因素有关",value: "Related to patient lesion"},
							{label: "推测与患者自身其他因素有关",value: "Related to patient's own condition"},
							{label: "其它",value: "Others"},
						], required: true},
						{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", enname: "Please specify"},
						{isshow: "T", field: "operation_desc", name: "手术情况描述", type: "textarea", enname: "Event description", required: true, colspan: 3},
						{isshow: "T", field: "remark", name: "备注", enname: "Remark", type: "textarea", colspan: 3},
					],

					//必填字段 cmp_required  附件cmp_required_file
					tableFields_requiredfields: [
						{isshow: "T", field: "file_name", name: "文件名"},
						{isshow: "T", field: "file_size", name: "大小", width: "100"},
						{isshow: "T", field: "file_state", name: "状态", width: "100"},
						{isshow: "T", field: "id", name: "操作", width: "150", type: "buttons",
							buttons: [
								{name: "下载", code: "row_ck"},
								{name: "删除", code: "row_bj"}
							],
						},
					],
					formFields_requiredfields: [
						{isshow: "T", field: "feedback_type_code", name: "反馈类型", type: "select", options: [
							{label: " ",value: "0"},
							{label: "不详",value: "1"},
							{label: "有",value: "2"},
							{label: "无",value: "3"},
						]},
						{isshow: "T", field: "aware_date", name: "获知日期", type: "date", required: true},
						{isshow: "T", field: "describe", name: "详细描述", type: "textarea", required: true},
					],

					formData_kt: {},
					tableFields_kt: [
						{isshow: "T", field: "has_effective", name: "有效投诉", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], required: true},
						{isshow: "F", field: "revo_order_code", name: "退换货单号", type: "span", isclick: true},
						{isshow: "F", field: "effective_reason", name: "非有效投诉理由", type: "input", required: true},
						{isshow: "T", field: "has_bad_event", name: "不良/疑似不良事件初步判断", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], labelwidth: "200px", colspan: 2, required: true},
						{isshow: "F", field: "quality_user_name", name: "品质专员", type: "popup", labelwidth: "200px", colspan: 2, required: true},
						{isshow: "F", field: "has_revo", name: "是否收到产品", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], required: true},
						{isshow: "F", field: "has_barter", name: "是否换货", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], required: true},
					],

					formData_pz: {},
					tableFields_pz: [
						{isshow: "T", field: "tslb", name: "投诉类别", type: "input", colspan: 2},
						{isshow: "F", field: "code1_more", name: "打开包装发现问题具体说明", type: "input"},
						{isshow: "F", field: "code2_more", name: "术中操作不当具体说明", type: "input"},
						{isshow: "F", field: "code3_more", name: "产品通不过病变具体说明", type: "input"},
						{isshow: "F", field: "code4_more", name: "支架不能到达病变位置具体说明", type: "input"},
						{isshow: "F", field: "code5_more", name: "支架无法释放或不充分具体说明", type: "input"},
						{isshow: "F", field: "code6_more", name: "支架移位具体说明", type: "input"},
						{isshow: "F", field: "code7_more", name: "支架短缩具体说明", type: "input"},
						{isshow: "F", field: "code8_more", name: "支架释放形态不佳具体说明", type: "input"},
						{isshow: "F", field: "code9_more", name: "支架断裂具体说明", type: "input"},
						{isshow: "F", field: "code10_more", name: "内漏具体说明", type: "input"},
						{isshow: "F", field: "code11_more", name: "系统回撤障碍具体说明", type: "input"},
						{isshow: "F", field: "code12_more", name: "球囊泄漏具体说明", type: "input"},
						{isshow: "F", field: "code13_more", name: "球囊爆破具体说明", type: "input"},
						{isshow: "F", field: "code14_more", name: "术中操作不当具体说明", type: "input"},
						{isshow: "F", field: "code15_more", name: "产品通不过病变具体说明", type: "input"},
						{isshow: "F", field: "code16_more", name: "支架不能到达病变位置具体说明", type: "input"},
						{isshow: "F", field: "code17_more", name: "导管回撤困难具体说明", type: "input"},
						{isshow: "F", field: "code18_more", name: "球囊泄漏具体说明", type: "input"},
						{isshow: "F", field: "code19_more", name: "球囊爆破具体说明", type: "input"},
						{isshow: "F", field: "code20_more", name: "球囊扩张形态不佳具体说明", type: "input"},
						{isshow: "F", field: "code21_more", name: "球囊回抽障碍具体说明", type: "input"},
						{isshow: "F", field: "code22_more", name: "远端无复流具体说明", type: "input"},
						{isshow: "F", field: "code23_more", name: "导管泄露具体说明", type: "input"},

						{isshow: "F", field: "acceptMoreList_more", name: "其它类别", type: "input"},
						{isshow: "T", field: "analysis_result", name: "产品分析", type: "input"},
						{isshow: "T", field: "has_capa", name: "CAPA", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], required: true},
						{isshow: "F", field: "capa_code", name: "CAPA号", type: "input", required: true},
						{isshow: "T", field: "opinion_code", name: "品质初步意见", type: "select", options: [
							{label: "推测与产品无关",value: "1"},
							{label: "推测与产品有关",value: "2"},
							{label: "推测与患者病灶因素有关",value: "3"},
							{label: "推测与其它临床因素有关",value: "4"},
							{label: "其它",value: "Others"},
						], labelwidth: "200px", colspan: 2},
						{isshow: "T", field: "has_recall", name: "召回", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						]},
					],

					tableFields_validity: [
						{isshow: "T", field: "has_effective", name: "有效投诉", type: "select", options: [
							{label: "是",value: 1},
							{label: "否",value: 2},
						], required: true},
						{isshow: "F", field: "effective_reason", name: "具体理由", type: "input", required: true},
					],
					formData_validity: {},

					//不同产品字段
					fieldByProdType: {
						st: {
							bbbwqk: {
								//出血产品
								cxcp: [
									//如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
									{isshow: "T", field: "cure_type_code", name: "治疗类型", required: true, type: "select", options: [
										{label: "初次治疗",value: "初次治疗"},
										{label: "复发性治疗",value: "复发性治疗"},
									]},
									{isshow: "F", field: "has_implant", name: "病变部位既往植入过器械", parent_field: "cure_type_code", show_filter: {parent_val: "复发性治疗"}, required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "F", field: "implant_more", name: "填写具体产品", parent_field: "has_implant", show_filter: {parent_val: 1}},
									{isshow: "T", field: "lesions_type_code", name: "病变类型", required: true, type: "select", options: [
										{label: "囊状动脉瘤",value: "aneurysm"},
										{label: "血泡样动脉瘤",value: "1"},
										{label: "夹层动脉瘤",value: "2"},
										{label: "梭形动脉瘤",value: "3"},
										{label: "多发性动脉瘤",value: "4"},
										{label: "不规则型动脉瘤",value: "5"},
										{label: "串联性动脉瘤",value: "6"},
										{label: "冗长扩张",value: "7"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "lesions_type_more", name: "填写其它类型", parent_field: "lesions_type_code", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "has_rupture", name: "动脉瘤是否破裂", required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "has_placeholder_symptoms", name: "是否有占位症状", required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "lesions_part_code", name: "病变位置", required: true, type: "select", options: [
										{label: "C1",value: "C1"},
										{label: "C2",value: "C2"},
										{label: "C3",value: "C3"},
										{label: "C4",value: "C4"},
										{label: "C5",value: "C5"},
										{label: "C6",value: "C6"},
										{label: "C7",value: "C7"},
										{label: "MCA",value: "MCA"},
										{label: "ACA",value: "ACA"},
										{label: "Acoma",value: "Acoma"},
										{label: "V1",value: "V1"},
										{label: "V2",value: "V2"},
										{label: "V3",value: "V3"},
										{label: "V4",value: "V4"},
										{label: "BA",value: "BA"},
										{label: "PCA",value: "PCA"},
										{label: "Pcoma",value: "Pcoma"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "implant_part_code", name: "产品植入部位", required: true, type: "select", options: [
										{label: "左侧",value: "left"},
										{label: "右侧",value: "right"},
									]},
									{isshow: "T", field: "acts_artery_bend_code", name: "行径动脉迂曲度", required: true, type: "select", options: [
										{label: "平直",value: "left"},
										{label: "轻度",value: "1"},
										{label: "中度",value: "2"},
										{label: "重度",value: "3"},
										{label: "极度",value: "4"},
									]},
									{isshow: "T", field: "lesions_vessels_bend_code", name: "病变血管迂曲度", required: true, type: "select", options: [
										{label: "平直",value: "left"},
										{label: "轻度",value: "1"},
										{label: "中度",value: "2"},
										{label: "重度",value: "3"},
										{label: "极度",value: "4"},
									]},
									{isshow: "T", field: "vessels_status_code", name: "治疗段血管情况", required: true, type: "select", options: [
										{label: "光滑",value: "光滑"},
										{label: "伴有狭窄",value: "伴有狭窄"},
									]},
									{isshow: "F", field: "vessels_status_more", name: "填写最高狭窄率", parent_field: "vessels_status_code", show_filter: {parent_val: "伴有狭窄"}},
									{isshow: "T", field: "tumors_size", name: "瘤体大小", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "tumors_width", name: "瘤颈宽度", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "vessels_proximal", name: "近端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "vessels_distal", name: "远端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
								],
								//导管产品
								dgcp: [
									//Fastrack/Utrack
									{isshow: "T", field: "stents", name: "配合使用的支架"},
									{isshow: "T", field: "cure_type_code", name: "治疗类型", required: true, type: "select", options: [
										{label: "初次治疗",value: "初次治疗"},
										{label: "复发性治疗",value: "复发性治疗"},
									]},
									{isshow: "F", field: "has_implant", name: "病变部位既往植入过器械", parent_field: "cure_type_code", show_filter: {parent_val: "复发性治疗"}, required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "F", field: "implant_more", name: "填写具体产品", parent_field: "has_implant", show_filter: {parent_val: 1}},
									{isshow: "T", field: "lesions_type_code", name: "病变类型", required: true, type: "select", options: [
										{label: "囊状动脉瘤",value: "aneurysm"},
										{label: "血泡样动脉瘤",value: "1"},
										{label: "夹层动脉瘤",value: "2"},
										{label: "梭形动脉瘤",value: "3"},
										{label: "多发性动脉瘤",value: "4"},
										{label: "不规则型动脉瘤",value: "5"},
										{label: "串联性动脉瘤",value: "6"},
										{label: "冗长扩张",value: "7"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "lesions_type_more", name: "填写其它类型", parent_field: "lesions_type_code", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "has_rupture", name: "动脉瘤是否破裂", required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "has_placeholder_symptoms", name: "是否有占位症状", required: true, type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "lesions_part_code", name: "病变位置", required: true, type: "select", options: [
										{label: "C1",value: "C1"},
										{label: "C2",value: "C2"},
										{label: "C3",value: "C3"},
										{label: "C4",value: "C4"},
										{label: "C5",value: "C5"},
										{label: "C6",value: "C6"},
										{label: "C7",value: "C7"},
										{label: "MCA",value: "MCA"},
										{label: "ACA",value: "ACA"},
										{label: "Acoma",value: "Acoma"},
										{label: "V1",value: "V1"},
										{label: "V2",value: "V2"},
										{label: "V3",value: "V3"},
										{label: "V4",value: "V4"},
										{label: "BA",value: "BA"},
										{label: "PCA",value: "PCA"},
										{label: "Pcoma",value: "Pcoma"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "implant_part_code", name: "产品植入部位", required: true, type: "select", options: [
										{label: "左侧",value: "left"},
										{label: "右侧",value: "right"},
									]},
									{isshow: "T", field: "acts_artery_bend_code", name: "行径动脉迂曲度", required: true, type: "select", options: [
										{label: "平直",value: "left"},
										{label: "轻度",value: "1"},
										{label: "中度",value: "2"},
										{label: "重度",value: "3"},
										{label: "极度",value: "4"},
									]},
									{isshow: "T", field: "lesions_vessels_bend_code", name: "病变血管迂曲度", required: true, type: "select", options: [
										{label: "平直",value: "left"},
										{label: "轻度",value: "1"},
										{label: "中度",value: "2"},
										{label: "重度",value: "3"},
										{label: "极度",value: "4"},
									]},
									{isshow: "T", field: "vessels_status_code", name: "治疗段血管情况", required: true, type: "select", options: [
										{label: "光滑",value: "光滑"},
										{label: "伴有狭窄",value: "伴有狭窄"},
									]},
									{isshow: "F", field: "vessels_status_more", name: "填写最高狭窄率", parent_field: "vessels_status_code", show_filter: {parent_val: "伴有狭窄"}},
									{isshow: "T", field: "tumors_size", name: "瘤体大小", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "tumors_width", name: "瘤颈宽度", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "vessels_proximal", name: "近端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "vessels_distal", name: "远端血管直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
								],
								//缺血产品
								qxcp: [
									{isshow: "T", field: "preoperative_diagnosis", name: "术前诊断/病变类型"},
									{isshow: "T", field: "lesions_part_code", name: "病变位置", required: true, type: "select", options: [
										{label: "C1",value: "C1"},
										{label: "C2",value: "C2"},
										{label: "C3",value: "C3"},
										{label: "C4",value: "C4"},
										{label: "C5",value: "C5"},
										{label: "C6",value: "C6"},
										{label: "C7",value: "C7"},
										{label: "MCA",value: "MCA"},
										{label: "ACA",value: "ACA"},
										{label: "Acoma",value: "Acoma"},
										{label: "V1",value: "V1"},
										{label: "V2",value: "V2"},
										{label: "V3",value: "V3"},
										{label: "V4",value: "V4"},
										{label: "BA",value: "BA"},
										{label: "PCA",value: "PCA"},
										{label: "Pcoma",value: "Pcoma"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "implant_part_code", name: "产品植入部位", required: true, type: "select", options: [
										{label: "左侧",value: "left"},
										{label: "右侧",value: "right"},
									]},
									{isshow: "T", field: "lesions_vessels_proximal", name: "病变血管近端直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "lesions_vessels_distal", name: "病变血管远端直径", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "lesions_length", name: "病变血管病变长度", type: "number", required: true, valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "lesions_vessels_narrow_rate", name: "病变血管狭窄率", type: "number", required: true, valunit: "%", valunitwidth: "30px"},
									{isshow: "T", field: "degree_vessel_tortuosity_code", name: "病变血管迂曲程度", enname: "", type: "radio", options: [
										{code: "code1", name: "平直"},
										{code: "code2", name: "一般迂曲"},
										{code: "code3", name: "严重迂曲"},
									], required: true, colspan: 3},
									{isshow: "T", field: "degree_vessel_calcification_code", name: "病变血管钙化情况", enname: "", type: "radio", options: [
										{code: "code1", name: "无"},
										{code: "code2", name: "轻度"},
										{code: "code3", name: "中度"},
										{code: "code4", name: "重度"},
									], required: true, colspan: 3},
									{isshow: "T", field: "degree_thrombus_code", name: "病变血管血栓情况", enname: "", type: "radio", options: [
										{code: "code1", name: "无"},
										{code: "code2", name: "轻度"},
										{code: "code3", name: "中度"},
										{code: "code4", name: "重度"},
									], required: true, colspan: 3},
								]
							},
							ssqk: {
								//出血产品
								cxcp: {
									Tubridge: [
										//共用
										{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
										{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
										{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
										{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
										{isshow: "T", field: "doctor", name: "手术医生"},
										{isshow: "T", field: "doctor_phone", name: "医生电话"},
										{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
										{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

										//一、出血产品 如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
										{isshow: "T", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
										{isshow: "T", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
											{label: "全麻",value: "全麻"},
											{label: "局麻",value: "局麻"},
										]},
										{isshow: "T", field: "operation_scheme", name: "手术方案"},
										{isshow: "T", field: "has_socket", name: "是否套接", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "puncture", name: "穿刺部位", type: "select", options: [
											{label: "左侧股动脉",value: "left"},
											{label: "右侧股动脉",value: "right"},
											{label: "双侧股动脉",value: "Yes"},
											{label: "其他",value: "Others"},
										]},
										{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
										{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
											{name: "推测与产品无关",code: "1"},
											{name: "推测与产品有关",code: "2"},
											{name: "推测与患者病灶因素有关",code: "3"},
											{name: "推测与患者自身其他因素有关",code: "4"},
											{name: "其他",code: "Others"},
										], colspan: 3},
										{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},

										//1.选择Tubridge产品
										{isshow: "T", field: "has_caton", name: "入鞘是否有卡顿现象", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "resistance_code", name: "支架推送阻力", type: "select", options: [
											{label: "正常",value: "Yes"},
											{label: "大",value: "No"},
											{label: "过大",value: "big"},
										]},
										{isshow: "T", field: "has_open_hard", name: "架是否有打开困难或者打不开的现象", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_shorten", name: "架是否发生明显短缩现象", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_insufficient", name: "支架是否有头端锚定力不足现象", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_smooth", name: "术中支架重新回收至微导管进行再释放是否顺利", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_compliance", name: "微导管顺应性", type: "select", options: [
											{label: "好",value: 1},
											{label: "不够好",value: 2},
										]},
										{isshow: "T", field: "has_adherence", name: "支架充分贴壁", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_retention", name: "造影剂滞留", type: "select", options: [
											{label: "明显",value: 1},
											{label: "不明显",value: 2},
										]},
										{isshow: "T", field: "has_covered_stents", name: "是否覆盖分支", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "F", field: "covered_stents_code", name: "具体选择", parent_field: "has_covered_stents", show_filter: {parent_val: 1}, type: "radio", options: [
											{code: "code1", name: "眼动脉"},
											{code: "code2", name: "后交通动脉"},
											{code: "code3", name: "脉络膜前动脉"},
											{code: "code4", name: "小脑后下动脉"},
											{code: "code5", name: "小脑前下动脉"},
											{code: "code6", name: "内听动脉"},
										], required: true, colspan: 3},
										{isshow: "T", field: "release_point_head_code", name: "头端释放点", type: "select", options: [
											{label: "直段",value: "直段"},
											{label: "弯段",value: "弯段"},
										]},
										{isshow: "T", field: "release_point_tail_code", name: "尾端释放点", type: "select", options: [
											{label: "直段",value: "直段"},
											{label: "弯段",value: "弯段"},
										]},
										{isshow: "T", field: "has_knead_after", name: "术后是否对支架进行按摩", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "F", field: "knead_after_more", name: "具体选择", type: "select", options: [
											{label: "导丝辅助",value: "导丝辅助"},
											{label: "支架导管辅助",value: "支架导管辅助"},
										]},
										{isshow: "T", field: "has_after_dilation", name: "术后是否采用球囊后扩", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "complication_code", name: "并发症", type: "select", options: [
											{label: "产品植入术引起",value: "产品植入术引起"},
											{label: "药物引起",value: "药物引起"},
											{label: "无",value: "No"},
										], required: true},
									],
									Willis: [
										//共用
										{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
										{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
										{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
										{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
										{isshow: "T", field: "doctor", name: "手术医生"},
										{isshow: "T", field: "doctor_phone", name: "医生电话"},
										{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
										{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

										//一、出血产品 如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
										{isshow: "T", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
										{isshow: "T", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
											{label: "全麻",value: "全麻"},
											{label: "局麻",value: "局麻"},
										]},
										{isshow: "T", field: "operation_scheme", name: "手术方案"},
										{isshow: "T", field: "has_socket", name: "是否套接", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "puncture", name: "穿刺部位", type: "select", options: [
											{label: "左侧股动脉",value: "left"},
											{label: "右侧股动脉",value: "right"},
											{label: "双侧股动脉",value: "Yes"},
											{label: "其他",value: "Others"},
										]},
										{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
										{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
											{name: "推测与产品无关",code: "1"},
											{name: "推测与产品有关",code: "2"},
											{name: "推测与患者病灶因素有关",code: "3"},
											{name: "推测与患者自身其他因素有关",code: "4"},
											{name: "其他",code: "Others"},
										], colspan: 3},
										{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
										//2.选择Willis产品
										{isshow: "T", field: "mid_pipe_location_code", name: "中间导管到达位置", type: "select", options: [
											{label: "动脉瘤近端",value: "动脉瘤近端"},
											{label: "动脉瘤远端",value: "动脉瘤远端"},
										]},
										{isshow: "T", field: "expansion_moment_code", name: "支架释放扩张时间", type: "select", options: [
											{label: "＜30s",value: "Yes"},
											{label: " ≥30s",value: "No"},
										]},
										{isshow: "T", field: "has_after_dilation", name: "是否采用球囊后扩", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "has_covered_stents", name: "是否覆盖分支", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "F", field: "covered_stents_code", name: "具体选择", parent_field: "has_covered_stents", show_filter: {parent_val: 1}, type: "radio", options: [
											{code: "code1", name: "眼动脉"},
											{code: "code2", name: "后交通动脉"},
											{code: "code3", name: "脉络膜前动脉"},
											{code: "code4", name: "小脑后下动脉"},
											{code: "code5", name: "小脑前下动脉"},
											{code: "code6", name: "内听动脉"},
										], required: true, colspan: 3},
										{isshow: "T", field: "isolation_effect_code", name: "隔绝效果", type: "radio", options: [
											{code: "code1", name: "完全隔绝"},
											{code: "code2", name: "少量内漏"},
											{code: "code3", name: "内漏明显"},
										], required: true, colspan: 3},
									],
									Numen: [
										//共用
										{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
										{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
										{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
										{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
										{isshow: "T", field: "doctor", name: "手术医生"},
										{isshow: "T", field: "doctor_phone", name: "医生电话"},
										{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
										{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

										//一、出血产品 如产品为：Tubridge/Willis/Numen/Numen Silk/NumenFR
										{isshow: "T", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
										{isshow: "T", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
											{label: "全麻",value: "全麻"},
											{label: "局麻",value: "局麻"},
										]},
										{isshow: "T", field: "operation_scheme", name: "手术方案"},
										{isshow: "T", field: "has_socket", name: "是否套接", type: "select", options: [
											{label: "是",value: 1},
											{label: "否",value: 2},
										]},
										{isshow: "T", field: "puncture", name: "穿刺部位", type: "select", options: [
											{label: "左侧股动脉",value: "left"},
											{label: "右侧股动脉",value: "right"},
											{label: "双侧股动脉",value: "Yes"},
											{label: "其他",value: "Others"},
										]},
										{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
										{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
											{name: "推测与产品无关",code: "1"},
											{name: "推测与产品有关",code: "2"},
											{name: "推测与患者病灶因素有关",code: "3"},
											{name: "推测与患者自身其他因素有关",code: "4"},
											{name: "其他",code: "Others"},
										], colspan: 3},
										{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
										//3.选择Numen类产品
										{isshow: "T", field: "filling_process_code", name: "填塞过程", type: "radio", options: [
											{code: "code1", name: "正常"},
											{code: "code2", name: "阻力大"},
											{code: "code3", name: "填塞过程中动脉瘤破裂"},
										], required: true, colspan: 3},
										{isshow: "T", field: "mico_pipe_instil_code", name: "微导管滴注", type: "radio", options: [
											{code: "code1", name: "未接滴注"},
											{code: "code2", name: "滴注结束后未及时补充"},
											{code: "code3", name: "持续滴注且顺畅"},
											{code: "code4", name: "持续滴注但不顺"},
										], required: true, colspan: 3},
										{isshow: "T", field: "kickpipe_code", name: "踢管", type: "radio", options: [
											{code: "code1", name: "无"},
											{code: "code2", name: "明显"},
											{code: "code3", name: "将微导管头踢出瘤腔"},
										], required: true, colspan: 3},
										{isshow: "T", field: "relief_cnt", name: "解脱次数"},
										{isshow: "T", field: "relief_status_code", name: "解脱状态", type: "radio", options: [
											{code: "code1", name: "完全解脱"},
											{code: "code2", name: "不完全，后撤中解脱或带出部分圈尾"},
											{code: "code3", name: "未解脱"},
										], required: true, colspan: 3},
										{isshow: "T", field: "pour_t_code", name: "倒T情况", type: "radio", options: [
											{code: "code1", name: "正T"},
											{code: "code2", name: "倒T"},
											{code: "code3", name: "十字"},
											{code: "code4", name: "天窗"},
										], required: true, colspan: 3},
										{isshow: "T", field: "unwind_code", name: "解旋", type: "radio", options: [
											{code: "code1", name: "无"},
											{code: "code2", name: "解旋"},
										], required: true, colspan: 3},
										{isshow: "T", field: "push_process_code", name: "推送过程", type: "radio", options: [
											{code: "code1", name: "正常"},
											{code: "code2", name: "大"},
											{code: "code3", name: "过大或无法推送"},
										], required: true, colspan: 3},
										{isshow: "T", field: "operation_effect_code", name: "术后效果", type: "radio", options: [
											{code: "code1", name: "Raymond I级"},
											{code: "code2", name: "Raymond II级"},
											{code: "code3", name: "Raymond III级"},
										], required: true, colspan: 3},
									]
								},
								//导管产品
								dgcp: [
									//共用
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生"},
									{isshow: "T", field: "doctor_phone", name: "医生电话"},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},
									{isshow: "T", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
									{isshow: "T", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
										{label: "全麻",value: "全麻"},
										{label: "局麻",value: "局麻"},
									]},
									{isshow: "T", field: "operation_scheme", name: "手术方案"},
									{isshow: "T", field: "has_socket", name: "是否套接", type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "puncture", name: "穿刺部位", type: "select", options: [
										{label: "左侧股动脉",value: "left"},
										{label: "右侧股动脉",value: "right"},
										{label: "双侧股动脉",value: "Yes"},
										{label: "其他",value: "Others"},
									]},
									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
										{name: "推测与产品无关",code: "1"},
										{name: "推测与产品有关",code: "2"},
										{name: "推测与患者病灶因素有关",code: "3"},
										{name: "推测与患者自身其他因素有关",code: "4"},
										{name: "其他",code: "Others"},
									], colspan: 3},
									{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
									{isshow: "T", field: "has_pipe_shape", name: "导管是否塑形", type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "pipe_in_place_code", name: "导管推送到位情况", type: "cascader", options: [
										{label: "轻松到达目标位置",value: "轻松到达目标位置"},
										{label: "到达目标位置但有一定阻力",value: "到达目标位置但有一定阻力"},
										{label: "到达目标位置但阻力较大",value: "到达目标位置但阻力较大"},
										{label: "未达到目标位置",value: "未达到目标位置", children: [
											{label: "血管迂曲",value: "血管迂曲"},
											{label: "医生风险判断后未上高",value: "医生风险判断后未上高"},
											{label: "长鞘/导引导管支撑不够",value: "长鞘/导引导管支撑不够"},
											{label: "发生血管痉挛",value: "发生血管痉挛"},
											{label: "管体打折",value: "管体打折"},
											{label: "出现血管壁损伤",value: "出现血管壁损伤"},
											{label: "其他",value: "Others"},
										]},
									]},
									{isshow: "F", field: "pipe_in_place_more", name: "具体填写"},
									{isshow: "T", field: "trans_instrument_code", name: "输送器械", type: "cascader", options: [
										{label: "轻松输送到位",value: "轻松输送到位"},
										{label: "输送到位但有阻力",value: "输送到位但有阻力"},
										{label: "输送到位但阻力较大",value: "输送到位但阻力较大"},
										{label: "未成功输送器械",value: "未成功输送器械", children: [
											{label: "器械原因",value: "器械原因"},
											{label: "导管打折",value: "导管打折"},
											{label: "导管拉长/头端分层",value: "导管拉长/头端分层"},
											{label: "其他",value: "Others"},
										]},
									]},
									{isshow: "F", field: "trans_instrument_more", name: "具体填写"},
									{isshow: "T", field: "recycling_instrument_code", name: "调整/回收器械", type: "select", options: [
										{label: "轻松回收至微导管中",value: "轻松回收至微导管中"},
										{label: "可以回收但有阻力",value: "可以回收但有阻力"},
										{label: "可以回收但阻力较大",value: "可以回收但阻力较大"},
										{label: "未成功回收至微导管中",value: "未成功回收至微导管中"},
										{label: "其它",value: "Others"},
									]},
									{isshow: "F", field: "recycling_instrument_more", name: "具体填写", parent_field: "recycling_instrument_code", show_filter: {parent_val: "Others"}},
									{isshow: "T", field: "complication_code", name: "并发症", type: "select", options: [
										{label: "产品植入术引起",value: "产品植入术引起"},
										{label: "药物引起",value: "药物引起"},
										{label: "无",value: "No"},
									], required: true},
									//全部产品
									{isshow: "T", field: "used_equipment", name: "请提供配套使用器械品牌及规格（如使用了配套器械）", type: "radio",colspan: 3},
									{isshow: "T", field: "long_sheath", name: "长鞘"},
									{isshow: "T", field: "pipe_spec", name: "导引导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "mid_pipe", name: "中间导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "mico_pipe", name: "微导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "thread_spec", name: "导丝", enname: "Thread Specification"},
									{isshow: "T", field: "instrument_more", name: "其它", enname: "Others"},
								],
								//缺血产品
								qxcp: [
									//共用
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生"},
									{isshow: "T", field: "doctor_phone", name: "医生电话"},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

									{isshow: "T", field: "duration", name: "手术时长（股动脉穿刺到手术结束）", valunit: "min", valunitwidth: "30px"},
									{isshow: "T", field: "anesthesia_type_code", name: "麻醉类型", type: "select", options: [
										{label: "全麻",value: "全麻"},
										{label: "局麻",value: "局麻"},
									]},
									{isshow: "T", field: "operation_scheme", name: "手术方案"},
									{isshow: "T", field: "has_socket", name: "是否套接", type: "select", options: [
										{label: "是",value: 1},
										{label: "否",value: 2},
									]},
									{isshow: "T", field: "puncture", name: "穿刺部位", type: "select", options: [
										{label: "左侧股动脉",value: "left"},
										{label: "右侧股动脉",value: "right"},
										{label: "双侧股动脉",value: "Yes"},
										{label: "其他",value: "Others"},
									]},
									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "checkboxobj", options: [
										{name: "推测与产品无关",code: "1"},
										{name: "推测与产品有关",code: "2"},
										{name: "推测与患者病灶因素有关",code: "3"},
										{name: "推测与患者自身其他因素有关",code: "4"},
										{name: "其他",code: "Others"},
									], colspan: 3},
									{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
									// 三、缺血产品 ：Apollo，Bridge
									{isshow: "T", field: "disease_preballoon_dilatation_code", name: "球囊预扩", enname: "Balloon Expansion Beforehand", type: "select", options: [
										{label: "是",value: "Yes"},
										{label: "否",value: "No"},
									], required: true},
									{isshow: "F", field: "disease_preballoon_dilatation_spec", name: "预扩球囊规格", enname: "Pre-Expanded Balloon Size", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "F", field: "pre_dilation_pressure", name: "预扩球囊压力", enname: "Predilated Balloon Pressure", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "F", field: "disease_preballoon_dilatation_sku", name: "请提供品牌", enname: "Please Provide The Brand", parent_field: "disease_preballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "T", field: "disease_retroballoon_dilatation_code", name: "球囊后扩张", enname: "Posterior Dilation Of The Balloon", type: "select", options: [
										{label: "是",value: "Yes"},
										{label: "否",value: "No"},
									], required: true},
									{isshow: "F", field: "disease_retroballoon_dilatation_spec", name: "后扩球囊规格", enname: "Posterior Balloon Size", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "F", field: "post_dilation_pressure", name: "后扩球囊压力", enname: "Posterior Balloon Pressure", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "F", field: "disease_retroballoon_dilatation_sku", name: "请提供品牌", enname: "Please Provide The Brand", parent_field: "disease_retroballoon_dilatation_code", show_filter: {parent_val: "Yes"}, required: true},
									{isshow: "T", field: "has_stents_trans_smooth", name: "支架输入过程", enname: "Balloon Expansion Beforehand", type: "select", options: [
										{label: "顺利",value: 1},
										{label: "不顺利",value: 2},
									], required: true},
									{isshow: "T", field: "has_stents_lesions", name: "支架通过病变", enname: "Balloon Expansion Beforehand", type: "select", options: [
										{label: "通过",value: 1},
										{label: "通不过",value: 2},
									], required: true},
									{isshow: "T", field: "has_stents_inplace", name: "支架到位", enname: "Balloon Expansion Beforehand", type: "select", options: [
										{label: "到位",value: 1},
										{label: "未到位",value: 2},
									], required: true},
									{isshow: "T", field: "has_stents_expansion", name: "支架扩张情况", enname: "Balloon Expansion Beforehand", type: "select", options: [
										{label: "正常",value: 1},
										{label: "不能扩开支架",value: 2},
									], required: true},
									{isshow: "T", field: "expansion_pressure", name: "扩张最大压力", enname: "", required: true},
									{isshow: "T", field: "complication_code", name: "并发症", type: "select", options: [
										{label: "产品植入术引起",value: "产品植入术引起"},
										{label: "药物引起",value: "药物引起"},
										{label: "无",value: "No"},
									], required: true},
									//全部产品
									{isshow: "T", field: "used_equipment", name: "请提供配套使用器械品牌及规格（如使用了配套器械）", type: "radio",colspan: 3},
									{isshow: "T", field: "long_sheath", name: "长鞘"},
									{isshow: "T", field: "pipe_spec", name: "导引导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "mid_pipe", name: "中间导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "mico_pipe", name: "微导管", enname: "Guide Tube Specification"},
									{isshow: "T", field: "thread_spec", name: "导丝", enname: "Thread Specification"},
									{isshow: "T", field: "instrument_more", name: "其它", enname: "Others"},
								]
							}
						},
						xm: {
							bbbwqk: {
								//心脉主动脉
								zdm: [
									{isshow: "T", field: "aneurysm_type_code", name: "动脉瘤类型", required: true, type: "select", options: [
										{label: "真性动脉瘤",value: "aneurysm"},
										{label: "假性动脉瘤",value: "pseudoaneurysm"},
										{label: "夹层动脉瘤",value: "dissection"},
									]},
									{isshow: "T", field: "is_implicate_blood", name: "动脉瘤是否累及重要血管", required: true, type: "select", options: [
										{label: "不详",value: "unknown"},
										{label: "否",value: "no"},
										{label: "是",value: "yes"},
									]},
									{isshow: "T", field: "angle_tumor_bend_code", name: "瘤颈弯曲角度", required: true, type: "select", options: [
										{label: "不详",value: "unknown"},
										{label: "无",value: "none"},
										{label: "轻度",value: "little"},
										{label: "中度",value: "middle"},
										{label: "重度",value: "heavy"},
									]},
									{isshow: "T", field: "degree_vessel_tortuosity_code", name: "导入血管迂曲程度", required: true, type: "select", options: [
										{label: "正常",value: "straightness"},
										{label: "比较迂曲",value: "littleBend"},
										{label: "严重迂曲",value: "heavyBend"},
										{label: "不适用",value: "inapplicable"},
										{label: "无法获知",value: "unknown"},
									]},
									{isshow: "T", field: "degree_vessel_calcification_code", name: "导入血管钙化程度", required: true, type: "select", options: [
										{label: "无",value: "none"},
										{label: "轻度钙化",value: "little"},
										{label: "中度钙化",value: "middle"},
										{label: "重度钙化",value: "heavy"},
										{label: "不详",value: "unknown"},
									]},
									{isshow: "T", field: "degree_thrombus_code", name: "导入血管血栓程度", required: true, type: "select", options: [
										{label: "无",value: "none"},
										{label: "轻度",value: "little"},
										{label: "中度",value: "middle"},
										{label: "重度",value: "heavy"},
										{label: "不详",value: "unknown"},
									]},
								],
								//心脉外周
								wz: [
									{isshow: "T", field: "lesions_part_code", name: "病变位置", enname: "", type: "checkboxobj", options: [
										{code: "code1", name: "髂动脉"},
										{code: "code2", name: "股动脉"},
										{code: "code3", name: "股浅动脉"},
										{code: "code4", name: "股深动脉"},
										{code: "code5", name: "腘动脉"},
										{code: "code6", name: "胫前动脉"},
										{code: "code7", name: "胫后动脉"},
										{code: "code8", name: "腓动脉"},
										{code: "code9", name: "足背动脉"},
										{code: "code10", name: "锁骨下动脉"},
										{code: "code11", name: "肾动脉"},
										{code: "Others", name: "其他"},
									], required: true, colspan: 3},
									{isshow: "F", field: "lesions_part_more", name: "填写其它位置", parent_field: "lesions_part_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
									{isshow: "T", field: "lesions_type_code", name: "病变类型", enname: "", type: "checkboxobj", options: [
										{code: "code1", name: "狭窄"},
										{code: "code2", name: "钙化"},
										{code: "code3", name: "支架内再狭窄"},
										{code: "code4", name: "动静脉瘘"},
										{code: "Others", name: "其他"},
									], required: true, colspan: 3},
									{isshow: "F", field: "lesions_type_more", name: "填写其它类型", parent_field: "lesions_type_code", parent_type: "checkboxobj", show_filter: {parent_val: "Others"}, required: true},
								]
							},
							ssqk: {
								//心脉主动脉
								zdm: [
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生", required: true},
									{isshow: "T", field: "doctor_phone", name: "医生电话", required: true},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

									{isshow: "T", field: "system_import_process_code", name: "系统导入过程", type: "select", options: [
										{label: "导入顺利",value: "smoothly"},
										{label: "导入困难",value: "difficulty"},
										{label: "无法导入",value: "unable"},
									], required: true},
									{isshow: "T", field: "is_trestle_shift_code", name: "支架是否移位", type: "select", options: [
										{label: "不适用",value: "inapplicable"},
										{label: "无法获知",value: "unknow"},
										{label: "无移位",value: "unshift"},
										{label: "有移位",value: "shift"},
									]},
									{isshow: "T", field: "is_trestle_twist_code", name: "支架是否扭曲、弯折", type: "select", options: [
										{label: "不适用",value: "inapplicable"},
										{label: "无法获知",value: "unknow"},
										{label: "无扭曲",value: "untwist"},
										{label: "良好",value: "good"},
										{label: "轻度扭曲",value: "littletwist"},
										{label: "弯折",value: "bend"},
									]},
									{isshow: "T", field: "is_trestle_performance_code", name: "支架形态及贴壁性能", type: "select", options: [
										{label: "不适用",value: "inapplicable"},
										{label: "无法获知",value: "unknow"},
										{label: "很好",value: "nice"},
										{label: "良好",value: "good"},
										{label: "一般",value: "common"},
										{label: "不佳",value: "poor"},
									]},
									{isshow: "T", field: "is_endoleak_code", name: "释放后是否内漏", type: "select", options: [
										{label: "不适用",value: "inapplicable"},
										{label: "无法获知",value: "unknow"},
										{label: "否",value: "no"},
										{label: "是",value: "yes"},
									]},
									{isshow: "T", field: "is_balloon_code", name: "是否使用球囊", type: "select", options: [
										{label: "不适用",value: "inapplicable"},
										{label: "否",value: "no"},
										{label: "是",value: "yes"},
									]},
									{isshow: "F", field: "is_balloon_more", name: "品牌/规格", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}},
									{isshow: "F", field: "effect_balloon", name: "球囊使用效果", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}},
									{isshow: "F", field: "capacity_balloon", name: "球囊充盈量", parent_field: "is_balloon_code", show_filter: {parent_val: "yes"}, type: "number", valunit: "mm", valunitwidth: "30px"},
									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
										{label: "推测与产品无关",value: "1"},
										{label: "推测与产品有关",value: "2"},
										{label: "推测与患者病灶因素有关",value: "3"},
										{label: "推测与患者自身其他因素有关",value: "4"},
										{label: "其他",value: "Others"},
									]},
									{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
								],
								//心脉外周
								wz: [
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},
									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生", required: true},
									{isshow: "T", field: "doctor_phone", name: "医生电话", required: true},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

									{isshow: "T", field: "emptying_pipe_code", name: "导入前是否进行导管排空", type: "select", options: [
										{label: "是",value: "Yes"},
										{label: "否，导入后排空",value: "No"},
										{label: "否，未排空",value: "inapplicable"},
									], required: true},
									{isshow: "T", field: "system_import_process_code", name: "系统导入过程", type: "select", options: [
										{label: "导入顺利",value: "smoothly"},
										{label: "导入困难",value: "difficulty"},
										{label: "无法导入",value: "unable"},
									], required: true},
									{isshow: "T", field: "degree_vessel_tortuosity_code", name: "导入血管迂曲程度", required: true, type: "select", options: [
										{label: "不迂曲",value: "straightness"},
										{label: "一般迂曲",value: "littleBend"},
										{label: "严重迂曲",value: "heavyBend"},
									]},
									{isshow: "T", field: "degree_vessel_calcification_code", name: "导入血管钙化程度", required: true, type: "select", options: [
										{label: "无明显钙化",value: "none"},
										{label: "轻度",value: "little"},
										{label: "中度",value: "middle"},
										{label: "非常严重",value: "heavy"},
										{label: "不详",value: "unknown"},
									]},
									{isshow: "T", field: "post_dilation_code", name: "球囊扩张情况", required: true, type: "select", options: [
										{label: "正常扩张",value: "none"},
										{label: "球囊泄露",value: "little"},
										{label: "球囊破裂（轴向破裂、径向破裂）",value: "middle"},
									]},
									{isshow: "T", field: "post_pressure", name: "球囊使用压力", valunit: "atm", valunitwidth: "30px"},
									{isshow: "T", field: "field2", name: "导管回撤性", required: true, type: "select", options: [
										{label: "回撤顺利",value: "none"},
										{label: "回撤困难",value: "little"},
										{label: "无法回撤",value: "middle"},
									]},
									{isshow: "T", field: "prod_expand_cnt", name: "产品扩张次数"},
									{isshow: "T", field: "thread_sku", name: "导丝品牌", enname: "Godet Brand", required: true},
									{isshow: "T", field: "thread_spec", name: "导丝规格", type: "radio", options: [
										{code: "0.014inch", name: "0.014inch"},
										{code: "0.018inch", name: "0.018inch"},
										{code: "0.035inch", name: "0.035inch"},
									]},
									{isshow: "T", field: "sheath_sku", name: "鞘品牌", enname: "Sheath Brand", required: true},
									{isshow: "T", field: "sheath_spec", name: "鞘规格", enname: "Sheath Product Specifications", required: true, type: "radio", options:[
										{code: "4F", name: "4F"},
										{code: "5F", name: "5F"},
										{code: "6F", name: "6F"},
										{code: "7F", name: "7F"},
										{code: "8F", name: "8F"},
									]},
									{isshow: "T", field: "sheath_length", name: "鞘长度", enname: "", required: true, type: "radio", options: [
										{code: "10cm", name: "10cm"},
										{code: "40cm", name: "40cm"},
										{code: "55cm", name: "55cm"},
										{code: "Others", name: "其它"},
									]},
									{isshow: "F", field: "sheath_length_more", name: "其它长度", enname: "", parent_field: "sheath_length", show_filter: {parent_val: "Others"}, required: true, valunit: "cm", valunitwidth: "30px"},
									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3, required: true},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
										{label: "推测与产品无关",value: "1"},
										{label: "推测与产品有关",value: "2"},
										{label: "推测与患者病灶因素有关",value: "3"},
										{label: "推测与患者自身其他因素有关",value: "4"},
										{label: "其他",value: "Others"},
									]},
									{isshow: "F", field: "doctor_opinion_more", name: "请详细描述", parent_field: "doctor_opinion_code", show_filter: {parent_val: "Others"}},
								]
							}
						},
						dsl: {
							ssqk: {
								//电生理-导管产品
								dgcp: [
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},

									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生"},
									{isshow: "T", field: "doctor_phone", name: "医生电话"},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

									//电生理-导管产品   -设备产品只有前两个字段 并且手术进展选项发生变化
									{isshow: "T", field: "rhythm_type", name: "心率失常类型", type: "radio", options: [
										{code: "code1", name: "一、室上速"},
										{code: "code2", name: "二、房速"},
										{code: "code3", name: "三、房扑"},
										{code: "code4", name: "四、房颤"},
										{code: "code5", name: "五、室速"},
										{code: "code6", name: "六、室早"},
									], required: true, colspan: 3},
									{isshow: "T", field: "operation_progress_code", name: "手术进展", type: "radio", options: [
										{code: "code1", name: "一、故障无法排除"},
										{code: "code2", name: "二、故障排除，手术顺利进行"},
									], required: true,colspan: 3},
									{isshow: "T", field: "adverse_effects_code", name: "产生不良影响", type: "radio", options: [
										{code: "code1", name: "一、是"},
										{code: "code2", name: "二、否"},
									], required: true,colspan: 3},
									{isshow: "T", field: "return_visit_code", name: "术者回访", type: "radio", options: [
										{code: "code1", name: "一、是"},
										{code: "code2", name: "二、否"},
									], required: true,colspan: 3},
									{isshow: "T", field: "radio_band_code", name: "射频仪品牌", type: "radio", options: [
										{code: "code1", name: "一、锦江"},
										{code: "code2", name: "二、强生"},
										{code: "code3", name: "三、IBI"},
										{code: "code4", name: "四、华南医电"},
										{code: "code5", name: "五、微创"},
										{code: "Others", name: "六、其他"},
									], required: true,colspan: 3},
									{isshow: "F", field: "radio_band_more", name: "其它", parent_field: "radio_band_code", show_filter: {parent_val: "Others"}},
									{isshow: "T", field: "physiological_band_code", name: "多道电生理仪品牌", type: "radio", options: [
										{code: "code1", name: "一、锦江"},
										{code: "code2", name: "二、圣犹达"},
										{code: "code3", name: "三、华南医电"},
										{code: "code4", name: "四、微创"},
										{code: "Others", name: "五、其他"},
									], required: true,colspan: 3},
									{isshow: "F", field: "physiological_band_more", name: "其它", parent_field: "physiological_band_code", show_filter: {parent_val: "Others"}},
									{isshow: "T", field: "sheath_sku", name: "长鞘品牌"},
									{isshow: "T", field: "sheath_spec", name: "长鞘型号"},

									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
										{label: " ",value: "0"},
										{label: "推测与产品无关",value: "1"},
										{label: "推测与产品有关",value: "2"},
										{label: "推测与患者病灶因素有关",value: "3"},
										{label: "推测与患者自身其他因素有关",value: "4"},
										{label: "其他",value: "5"},
									]},
								],
								//电生理-设备产品
								sbcp: [
									{isshow: "T", field: "hospital_name", name: "医院名称", type: "popup", required: true},
									{isshow: "T", field: "hospital_address", name: "医院地址", type: "span"},
									{isshow: "T", field: "hospital_phone", name: "医院电话", type: "span"},

									{isshow: "T", field: "hospital_department_name", name: "科室", required: true},
									{isshow: "T", field: "doctor", name: "手术医生"},
									{isshow: "T", field: "doctor_phone", name: "医生电话"},
									{isshow: "T", field: "operation_date", name: "手术日期", type: "date", required: true},
									{isshow: "T", field: "receive_date", name: "知悉日期", type: "date", required: true},

									{isshow: "T", field: "rhythm_type", name: "心率失常类型", type: "radio", options: [
										{code: "code1", name: "一、室上速"},
										{code: "code2", name: "二、房速"},
										{code: "code3", name: "三、房扑"},
										{code: "code4", name: "四、房颤"},
										{code: "code5", name: "五、室速"},
										{code: "code6", name: "六、室早"},
									], required: true, colspan: 3},
									{isshow: "T", field: "operation_progress_code", name: "手术进展", type: "radio", options: [
										{code: "code1", name: "更换微创另一个导管，手术顺利完成"},
										{code: "code2", name: "更换竞品公司导管，手术顺利进行"},
										{code: "code3", name: "未完成手术"},
										{code: "Others", name: "其他"},
									], required: true,colspan: 3},

									{isshow: "T", field: "operation_desc", name: " 手术情况描述（包括过程、后果、补救措施、器械联合使用情况等）", type: "textarea", colspan: 3},
									{isshow: "T", field: "doctor_opinion_code", name: "医生意见", type: "select", options: [
										{label: " ",value: "0"},
										{label: "推测与产品无关",value: "1"},
										{label: "推测与产品有关",value: "2"},
										{label: "推测与患者病灶因素有关",value: "3"},
										{label: "推测与患者自身其他因素有关",value: "4"},
										{label: "其他",value: "5"},
									]},
								]
							}
						}
					},

					//表单设置
					//表单1
					formAttr: {
						title: "表单信息",
						istitle: false,
						columnnumber: 3,
						labelwidth: "140px",
						labelposition: "top", //"right",
						size: "medium",
						disabled: true,
						border: "0px solid #c6c6c600",
					},
					formAttr_approval_kt: {
						title: "表单信息",
						istitle: false,
						columnnumber: 2,
						labelwidth: "140px",
						labelposition: "top", //"right",
						size: "medium",
						border: "0px solid #c6c6c600",
					},
					formAttr_approval_pz: {
						title: "表单信息",
						istitle: false,
						columnnumber: 2,
						labelwidth: "140px",
						labelposition: "top", //"right",
						size: "medium",
						border: "0px solid #c6c6c600",
					},
					formAttrBytype: {
						btzd: {
							columnnumber: 2,
							labelwidth: "140px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						fkxx: {
							columnnumber: 3,
							labelwidth: "140px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						tsxx: {
							columnnumber: 3,
							labelwidth: "90px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						hzzl: {
							columnnumber: 5,
							labelwidth: "100px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						bbbwqk: {
							columnnumber: 3,
							labelwidth: "160px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						ssqk: {
							columnnumber: 3,
							labelwidth: "180px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						ssfjpp: {
							columnnumber: 3,
							labelwidth: "100px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},
						qtx: {
							columnnumber: 3,
							labelwidth: "180px",
							labelposition: "top", //"right",
							size: "medium",
							disabled: false,
							border: "10px solid #c6c6c600",
						},

					},
					formFields: [],
					data_formFields: [],
					formFieldsObj: {},
					formData: {},
					isOldContrast: false,
					formDataOld: {},

					//表单2
					formAttr2: {
						title: "表单2信息",
						istitle: true,
						columnnumber: 3,
						labelwidth: "100px",
						labelposition: "top", //"right",
						size: "medium",
						disabled: true,
						border: "0px solid #c6c6c600",
					},
					formFields2: [],
					data_formFields2: [],
					formFieldsObj2: {},
					formData2: {},
					isOldContrast2: false,
					formDataOld2: {},

					//表格1
					tableloading: false,
					isEditTableData: false,
					tableHeight: 200,
					tableAttr: {},
					isEditTable1: false,
					isrowinput1: false,
					tableFields: [],
					data_tableFields: [],
					tableFieldsObj: {},
					tableData: [],
					selectionObj: {},
					selectionList: [],
					selectionIds: "",

					//表格2
					tableloading2: false,
					isEditTableData2: false,
					tableHeight2: 200,
					tableAttr2: {
						title: "表格2信息",
						istitle: true,
					},
					isEditTable2: false,
					isrowinput2: false,
					tableFields2: [],
					data_tableFields2: [],
					tableFieldsObj2: {},
					electedrow2: {},
					tableData2: [],

					popupParames: {},
					oldObj:{},
					loading_save: false,
					saveEndTypeObj: {},
					getEndTypeObj: {},
					loading_getall: false,

					//查看
					isbrowse: false,
					//审批
					approval: false,
					finshed: false,
					loading_approval: false,
					reasonvisible: false,
					passOrRefuse: false,

					//提交
					issubmit: false,
					loading_submit: false,

					textarea2: "",
					type_act: "",

					orgobj: {},

					attachList: [],
					attachList_kt: [],
					attachList_pz: [],
					attachListId_kt: "",
					attachListId_pz: "",

					upFileUrl: "",
					fileList: [],
					attachList: [],
					formData_file_ids: {},

					approval_status: 0,
					else_status: 0,
					editable: 0,
					attachUpload_kt: false,
					attachUpload_pz: false,
					tabKey: 0,
					adName: localStorage.getItem("ad_name"),
					language: localStorage.getItem("userlanguage"),

					orgtype: localStorage.getItem("orgtype"),

					refreshDiv: true,

					can2300Fix: false,
					can2100Fix: false,

					addressOptions: []
				},
				created() {
					if (this.language == "en") {
						this.setEnglishPage()
					}

					this.orgobj = {
						id: window.top.userinfo.org.id,
						type: window.top.userinfo.org.type,//dealer/
						name: window.top.userinfo.org.name
					}

					this.popupParames = clone(Root.popupParames);

					if (this.popupParames.data) {
						this.oldObj = clone(this.popupParames.data);

						if (this.oldObj.sthw) {
							this.setEnglishPage("sthw")
						}

						this.formDataObj_cmp = clone(this.popupParames.data);
						if (this.formDataObj_cmp.doc_type) {
							if (this.formDataObj_cmp.doc_type == "ort") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "gk";
							}
							if (this.formDataObj_cmp.doc_type == "coronary") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "gm";
							}
							if (this.formDataObj_cmp.doc_type == "heart") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "xm";
							}
							if (this.formDataObj_cmp.doc_type == "electrophy") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "dsl";
							}
							if (this.formDataObj_cmp.doc_type == "latest") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "yt";
							}
							if (this.formDataObj_cmp.doc_type == "theurgy") {
								this.formDataObj_cmp.doc_type = this.complaint_type = "st";
							}
							this.disabled_complaint_type = true;
						}
					}
					if (this.popupParames.sceneCode) {
						var formAttr_ = clone(this.formAttr);

						if (this.popupParames.sceneCode == "browse") {//查看只读
							formAttr_.disabled = true;
							this.isbrowse = true;
							var formAttrBytype_ = clone(this.formAttrBytype);
							for (var f in formAttrBytype_) {
								formAttrBytype_[f].disabled = true;
							}
							this.formAttrBytype = clone(formAttrBytype_);
							this.getOrderAttach();
						}
						else if (this.popupParames.sceneCode == "add") {//新增
							this.title = this.popupParames.title
							formAttr_.disabled = false;
							this.isEditTable1 = true;
							this.isEditTable2 = true;

							if (this.oldObj.complaint_type) {
								this.complaint_type = this.oldObj.complaint_type
								this.disabled_complaint_type = true;
								this.type_title = this.complaint_type_obj[this.oldObj.complaint_type];
							}
						}
						else if (this.popupParames.sceneCode == "edit") {//编辑
							this.title = this.popupParames.title;
							formAttr_.disabled = false;
							this.isEditTable1 = true;
							this.isEditTable2 = true;
							this.getOrderAttach();
						}
						else if (this.popupParames.sceneCode == "approval") {//审批
							this.approval = true;
							if (this.popupParames.delta && this.popupParames.delta.approval_browse == "approval_browse") {
								this.finshed = true
							}
							this.getApprovalNodeInformation();
							let element = document.getElementsByClassName("el-dialog__body");
							element[0].style.top = "100px";
							this.title = this.popupParames.title;
							formAttr_.disabled = true;
							var formAttrBytype_ = clone(this.formAttrBytype);
							for (var f in formAttrBytype_) {
								formAttrBytype_[f].disabled = true;
							}
							this.formAttrBytype = clone(formAttrBytype_);
							this.getOrderAttach();
						}

						this.formAttr = clone(formAttr_);
					}

					if (!this.complaint_type) {
						this.complaint_type = "gm";
					}

					if (this.popupParames.title) {
						this.title = this.popupParames.title;
					}
					else {
						this.title = "弹窗标题";
					}

					this.onServerInitData();
				},
				mounted() {
					var me = this;
					//预加载数据
					if (this.dataRequest.length) {
						this.dataRequest.map(d=>{
							if (d.dataname == "salesgroup") {
								var filter_salesgroup = "name is null";
								if (this.complaint_type == "gm") {
									filter_salesgroup = "name like '%冠脉%'";
								}
								else if (this.complaint_type == "xm") {
									filter_salesgroup = "name like '%心脉%'";
								}

								d.filter += " and " + filter_salesgroup;
							}
						})

						var result = {};
						this.loadRequestData(this.dataRequest, result, function(data) {
							me.dataRequestObj = data;
							//预加载数据后给哪些字段设置options或formatterjson
							var complaint_detail_ = clone(me.complaint_detail);
							complaint_detail_.map(dt => {
								var code_ = dt.code;
								var type_ = dt.type;//: "form"
								var formFields_ = dt.fields;
								if (code_ == "tsxx" && type_ == "form" && formFields_.length) {
									var formFields_part_ = formFields_;
									formFields_part_.map(e => {
										if (e.field == "sales_group_id") {
											e.options = me.dataRequestObj.salesgroup;
										}

									})
								}

							});

							me.complaint_detail = clone(complaint_detail_);

							me.initData();
						});
					}
					else {
						this.initData();
					}

					var urlParam = getGetParams(this.popupParames.url);

					for(let key in urlParam) {

					}

					this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭
						hideLoading();
						//重新设置弹窗宽高
						this.$nextTick(function(){
							let w_ = this.$refs.popup_body.offsetWidth + "px";
							let h_ = this.$refs.popup_body.offsetHeight + "px";
							Root.setPopupWH(w_, h_);
						})
					});
				},
				methods:{
					//显示字段加载（new vue 后运行）
					onServerInitData(istypecheng) {
						var me = this;

						var complaint_detail_ = clone(this.complaint_type_detail[this.complaint_type]);

						this.complaint_type_fkxx[this.complaint_type].map(e => {
							if (e.field == "happen_date" || e.field == "aware_date" || e.field == "operation_date") {
								e.pickerOptions = {
									disabledDate(time) {
										return time.getTime() > Date.now()
									}
								}
							}
						})
						this.complaint_type_tsxx[this.complaint_type].map(e => {
							if (e.field == "receive_date") {
								e.pickerOptions = {
									disabledDate(time) {
										return time.getTime() > Date.now()
									}
								}
							}
							if (e.field == "sales_user_name" && this.orgtype == "master" && this.complaint_type != "gk") {
								e.disabled = true
							}
						})
						this.complaint_type_ssqk[this.complaint_type].map(e => {
							if (e.field == "receive_date" || e.field == "operation_date") {
								e.pickerOptions = {
									disabledDate(time) {
										return time.getTime() > Date.now()
									}
								}
							}
						})
						var complaint_type_ = {
							btzd: [],
							tsxx: clone(this.complaint_type_tsxx[this.complaint_type]),
							fkxx: clone(this.complaint_type_fkxx[this.complaint_type]),
							hzzl: clone(this.complaint_type_hzzl[this.complaint_type]),
							bbbwqk: clone(this.complaint_type_bbbwqk[this.complaint_type]),
							ssqk: clone(this.complaint_type_ssqk[this.complaint_type]),
							ssfjpp: clone(this.complaint_type_ssfjpp[this.complaint_type]),
							qtx: clone(this.complaint_type_qtx[this.complaint_type]),
						}

						var formFieldsObjBytype_ = {};
						var formDataObjBytype_ = {};
						var tableDataBytype_ = {};
						complaint_detail_.map(t=>{
							var code_ = t.code;
							var fields_ = [];
							if (t.type == "annex" || t.type == "requiredfields" || t.type == "form_tsxx_gk") {
								formDataObjBytype_[code_] = {};
								tableDataBytype_[code_] = [];
							}

							let remark_xm = false;

							fields_ = complaint_type_[code_];
							if(fields_.length > 0) {
								formFieldsObjBytype_[code_] = {};
								formDataObjBytype_[code_] = {};
								fields_.map(e=>{
									if (e.type == "checkboxobj" || e.type == "checkbox") {
										formDataObjBytype_[code_][e.field] = [];
									}
									if (e.type == "select" || e.type == "cascader") {
										if (this.language == "en") {
											e.placeholder = "Select"
										}
									}
									formFieldsObjBytype_[code_][e.field] = e;

									if ((this.language == "en" && this.complaint_type == "st") || this.oldObj.sthw) {
										if (!e.enname) {
											e.isshow = "F"
										}
									}
								});
							}

							t.fields = clone(fields_);
						})

						if (complaint_type_.qtx.length > 0 && complaint_type_.qtx[0].field == "remark_xm") {
							this.formFields_annex = [
								{isshow: "T", field: "remark", name: "备注", type: "textarea", colspan: 3},
								{isshow: "T", field: "sales_sup_name", name: "销售区域负责人", type: "select", options: [], required: true, colspan: 3},
								{isshow: "T", field: "notification_mails", name: "相关通知人员", type: "popup", colspan: 3},
							]
							if (this.complaint_type == "st") {
								this.formFields_annex = [
									{isshow: "T", field: "remark", name: "备注", type: "textarea", colspan: 3},
									{isshow: "T", field: "sales_sup_name", name: "销售区域负责人", type: "select", options: [], colspan: 3},
									{isshow: "T", field: "notification_mails", name: "相关通知人员", type: "popup", colspan: 3},
								]
								if (this.language == "en" || this.oldObj.sthw) {
									this.formFields_annex = [
										{isshow: "T", field: "remark", name: "备注", enname: "Remark", type: "textarea", colspan: 3},
									]
								}
							}
							if (this.complaint_type == "dsl") {
								this.formFields_annex = [
									{isshow: "T", field: "remark", name: "备注", type: "textarea", colspan: 3},
									{isshow: "T", field: "notification_mails", name: "相关通知人员", type: "popup", colspan: 3},
								]
							}
							if (this.complaint_type == "yt") {
								this.formFields_annex = [
									{isshow: "T", field: "remark", name: "备注", type: "textarea", colspan: 3},
									{isshow: "T", field: "sales_sup_name", name: "销售区域负责人", type: "select", options: [], required: true, colspan: 3},
									{isshow: "T", field: "notification_mails", name: "相关通知人员", type: "popup", colspan: 3, required: true},
								]
							}
						}

						this.complaint_detail = clone(complaint_detail_);
						this.formFieldsObjBytype = clone(formFieldsObjBytype_);
						this.formDataObjBytype = clone(formDataObjBytype_);
						this.tableDataBytype = clone(tableDataBytype_);

						let formFields_annex = this.formFields_annex
						formFields_annex.map(e => {
							if (e.type == "select" || e.type == "cascader") {
								if (this.language == "en") {
									e.placeholder = "Select"
								}
							}
						})
						this.formFields_annex = clone(formFields_annex);

						this.activeCollapseNames = [];
						if (this.complaint_detail.length > 0) {
							this.complaint_detail.map(e => {
								this.activeCollapseNames.push(e.code)
							})
						}

						if (istypecheng) {
							this.initData(true);
						}
					},

					closeDialog() {
						if (this.popupParames.totab){
							Root.tab.removeItem(Root.tab.selected);
							Root.tab.open(me.popupParames.parentOption, false);
						}
						else {
							Root.hidePopup();
						}
					},

					saveAfter() {
						var me = this;
						if(this.popupParames.callback) {
							let obj = {}
							this.popupParames.callback(obj, function() {
								if (me.popupParames.totab){
									Root.tab.removeItem(Root.tab.selected);
									Root.tab.open(me.popupParames.parentOption, false);
								}
								else {
									Root.hidePopup();
								}
							});
						}
						else {
							alert("该按键事件缺失")
						}
					},

					setEnglishPage(remark) {
						this.complaint_type_detail.gm = [
							{code: "tsxx", name: "Complaint", type: "form", fields: []},
							{code: "hzzl", name: "Patient Info", type: "form", fields: []},
							{code: "bbbwqk", name: "Lesion location Desc", type: "form", fields: []},
							{code: "ssqk", name: "Operation Desc", type: "form", fields: []},
							{code: "ssfjpp", name: "Operation Accessories Brand", type: "form", fields: []},
							{code: "qtx", name: "Physician's evaluation", type: "annex", fields: []},
						]

						this.complaint_type_detail.st = [
							{code: "tsxx", name: "Complaint", type: "form", fields: []},
							{code: "ssqk", name: "Procedure Information", type: "form", fields: []},
							{code: "qtx", name: "Physician's evaluation", type: "annex", fields: []},
						]

						if (remark && remark == "sthw") {
							this.complaint_type_detail.st = [
								{code: "tsxx", name: "投诉信息", type: "form", fields: []},
								{code: "ssqk", name: "手术情况", type: "form", fields: []},
								{code: "qtx", name: "其它项", type: "annex", fields: []},
							]
						}

						if (remark) {
							return
						}

						this.complaint_type_obj = {
							gm: "Coronary Complaints",
							st: "Theurgy Complaints",
							xm: "心脉投诉",
							gj: "国际投诉",
							ts: "特殊投诉",
							dsl: "电生理投诉",
							yt: "优通投诉",
							gk: "骨科投诉",
						}

						let field_tsxx = clone(this.complaint_type_tsxx)
						let field_hzzl = clone(this.complaint_type_hzzl)
						let field_bbbwqk = clone(this.complaint_type_bbbwqk)
						let field_ssqk = clone(this.complaint_type_ssqk)
						let field_annex = clone(this.formFields_annex)
						field_tsxx.gm.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}

							if (e.field == "has_prod_return") {
								e.options = [
									{label: "Yes", value: 1},
									{label: "No", value: 2}
								]
							}
							if (e.field == "has_operation_data") {
								e.options = [
									{label: "Yes", value: 1},
									{label: "No", value: 2}
								]
							}

						})
						field_hzzl.gm.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
						})
						field_bbbwqk.gm.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
						})
						field_ssqk.gm.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
							if (e.field == "complicationList" || e.field == "complicationList2" || e.field == "complicationList_remark" || e.field == "complicationList_remark2") {
								e.options.map(f => {
									f.name = f.code
								})
							}
						})
						field_annex.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
						})

						field_tsxx.st.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
							if (e.field == "has_prod_return") {
								e.options = [
									{label: "Yes", value: 1},
									{label: "No", value: 2}
								]
							}
						})
						field_hzzl.st.map(e => {
							if (e.options && e.options.length > 0) {
								e.options.map(f => {
									f.label = f.value
								})
							}
						})

						this.complaint_type_tsxx = field_tsxx
						this.complaint_type_hzzl = field_hzzl
						this.complaint_type_bbbwqk = field_bbbwqk
						this.complaint_type_ssqk = field_ssqk
						this.formFields_annex = field_annex
					},

					turnTo() {
						let me = this

						let row = this.oldObj;
						let adName = this.adName;

						let config = {
							totab: true,
							width: "800px",
							heigh: "350px",
							icon: "icon-product",
							text: "",
							id: row.id,
							url: "../order/sorder/turn_to_list.html",
							sceneCode: "",
							data: {},
							delta: {},
							callback: function(obj, callback) {
								var params1 = {
									isClientMode: false,
									current_user_id: adName,
									delegate_user_id: obj.row.ad_name,
									task_id: row.node_id
								}
								me.showLoading()
								Server.call("root/flowable/delegateTask", params1, function(result) {
									me.hideLoading()
									Root.message({
										showClose: true,
										duration: 10000,
										type: 'success',
										message: '转办成功'
									});
									me.saveAfter();
									me.onQuery();
								}, function(error) {
									me.hideLoading()
									if (error) {
										let message = clone(error)
										if (error.message || error.errormessage || error.msg) {
											message = error.message || error.errormessage || error.msg
										}
										Root.message({
											showClose: true,
											duration: 10000,
											type: 'error',
											message: message
										});
									}
									else {
										Root.message({
											showClose: true,
											duration: 10000,
											type: 'error',
											message: "操作失败"
										});
									}
								});
								if (callback) {
									callback();
								}
							}
						};
						this.doPopup(config);
					},

					onpassApproval(){
						let me = this

						if (me.approval_status == 1 || me.approval_status == 2) {
							for (let i = 0; i < me.tableFields_kt.length; i++) {
								let e = me.tableFields_kt[i]

								if (e.required && e.isshow == "T" && !this.formData_kt[e.field]) {
									Root.message({
										type: "warning",
										message: "请填写必填项"
									})

									return
								}
							}
						}

						if (me.approval_status == 2) {
							for (let i = 0; i < me.tableFields_pz.length; i++) {
								let e = me.tableFields_pz[i]

								if (e.required && e.isshow == "T" && !this.formData_pz[e.field]) {
									Root.message({
										type: "warning",
										message: "请填写必填项"
									})

									return
								}
							}
						}

						this.textarea2 = "";
						this.reasonvisible = true;
						this.passOrRefuse = true;
						this.approvalPlaceholder = "通过说明"
					},
					onrefuseApproval(){
						this.textarea2 = "";
						this.reasonvisible = true;
						this.passOrRefuse = false;
						this.approvalPlaceholder = "拒绝原因"
					},
					saveReason(){
						this.showLoading();
						if(this.passOrRefuse){
							if (this.can2100Fix || this.can2300Fix) {
								this.saveCMP()
							}
							else {
								this.passApproval(true,this.textarea2)
							}
						}else{
							if(this.textarea2.trim() != ""){
								this.passApproval(false,this.textarea2)
							}
							else{
								Root.message({
									type: 'warning',
									message: '请填写原因'
								});
								this.hideLoading()
							}
						}
					},

					//审批
					passApproval(pass_, reason_) {
						let me = this;

						if ((me.approval_status == 1 && me.editable == 1) || me.else_status == 4 || me.showExchange) {
							//保存客投处理 formData_kt
							me.saveComplaintDeal(pass_, reason_);
						}
						else if(me.approval_status == 2 && me.editable == 1) {
							//保存品质受理信息 formData_pz
							me.saveComplaintAccept(pass_, reason_);
						}
						else {
							me.doApproval(pass_, reason_);
						}
					},

					saveComplaintDeal(pass_, reason_) {
						let me = this

						if (pass_) {
							if (!this.formData_kt.has_effective) {
								Root.message({
									type: 'warning',
									message: '请确认有效投诉'
								});

								this.hideLoading()

								return
							}
							if (!this.formData_kt.has_bad_event && this.complaint_type !== "st") {
								Root.message({
									type: 'warning',
									message: '请确认不良事件'
								});

								this.hideLoading()

								return
							}

							if (!this.showExchange) {
								if (me.formData_kt.quality_user_name && !me.formData_kt.qualityUser) {
									Root.message({
										type: 'warning',
										message: '未获取到品质专员信息，请从新选择'
									});

									this.hideLoading()

									return
								}
							}
						}

						this.formData_kt.deal_file_id = this.attachListId_kt || null

						let param_kt = {
							isClientMode: false,
							id: this.formDataObj_cmp.id,
							deal: this.formData_kt
						}

						Server.call("root/api/saveComplaintDeal", param_kt, function(result) {
							console.log(result)
							if (!result || !result.success) {
								return
							}

							if (me.approval_status == 2 && me.editable == 1) {
								me.saveComplaintAccept(pass_, reason_);
							}
							else {
								me.doApproval(pass_, reason_);
							}
						})
					},

					saveComplaintAccept(pass_, reason_) {
						let me = this;

						let haveTslb = false
						this.tableFields_pz.map(e => {
							if (e.field == "tslb") {
								haveTslb = true
							}
						})

						if (this.complaint_type == "yt" || haveTslb) {
							this.formData_pz.cmp_category_info = this.formData_pz.tslb || null
						}
						else {
							if (!this.formData_pz.acceptMoreList) {
								let data = this.formData_pz
								let acceptMoreList = [];
								for (let i = 1; i < 11; i++) {
									let field = "code" + i
									data[field].map(e => {
										let list = {}
										list.code = e

										this.tableFields_pz.map(x=>{
											if (x.field == field) {
												x.options.map(y => {
													if (e == y.code) {
														list.name = y.name
													}
												})
											}
										})

										if (data[field + "_more"]) {
											list.value = data[field + "_more"]
										}

										list.type = field

										acceptMoreList.push(list)
									})
								}

								this.formData_pz.accept_more_list = acceptMoreList
							}

							else {
								let data = this.formData_pz.acceptMoreList || null
								let acceptMoreList = [];
								if (data && data.length > 0) {
									data.forEach((f) => {
										let list = {};
										list.code = f

										this.tableFields_pz.map(x=>{
											if (x.field == "acceptMoreList") {
												x.options.map(e => {
													if (f == e.code) {
														list.name = e.name
													}
												})
											}
										})

										if (f == "Others") {
											list.value = this.formData_pz.acceptMoreList_more
										}

										for (let i = 1; i < 24; i++) {
											if (f == "code" + i) {
												list.value = this.formData_pz["code" + i + "_more"]
											}
										}

										acceptMoreList.push(list)
									})
								}

								this.formData_pz.accept_more_list = acceptMoreList
							}
						}

						this.formData_pz.accept_file_id = this.attachListId_pz || null

						let param_pz = {
							isClientMode: false,
							id: this.formDataObj_cmp.id,
							accept: this.formData_pz,
						}

						Server.call("root/api/saveComplaintAccept", param_pz, function(result) {
							console.log(result)
							if (!result || !result.success) {
								return
							}

							me.doApproval(pass_, reason_);
						})
					},

					doApproval(pass_, reason_) {
						let me = this;

						if(reason_) {
							//去除两端的空格
							reason_ = reason_.replace(/(^\s*)|(\s*$)/g, "");

							//去除中间的回车换行
							reason_ = reason_.replace(/[\r\n]/g,"");
						}

						var obj_ = {};
						obj_ = me.formDataObjBytype.tsxx;

						let type;
						if (me.complaint_type == "gk") {
							type = "cmp_complaint"
						}
						if (me.complaint_type == "xm") {
							type = "cmp_complaint_2400"
						}
						if (me.complaint_type == "dsl") {
							type = "cmp_complaint_2300"
						}
						if (me.complaint_type == "yt") {
							type = "C3400"
						}
						if (me.complaint_type == "st") {
							type = "cmp_complaint_2600"
						}

						let param1 = {
							isClientMode: false,
							type: type,
							businessId: me.oldObj.id,
							dealFlowInfo: {
								taskId: me.oldObj.node_id,
								variables: {
									billingtoCode: obj_.billingto_code,
									prodGroupCode: obj_.prod_group_code,
									pass: pass_,
								},
								currentUserId: window.top.userinfo.employee.ad_name,
								pass: pass_,
								reason: reason_,
								comment: reason_
							}
						}

						if (me.oldObj && me.oldObj.sthw) {
							param1.dealFlowInfo.variables = {pass: pass_,}
						}

						if (me.approval_status == 1) {
							//是否有效投诉
							if (me.formData_kt.has_effective) {
								param1.dealFlowInfo.variables.has_effective = me.formData_kt.has_effective
							}
							//是否不良事件
							if (me.formData_kt.has_bad_event) {
								param1.dealFlowInfo.variables.is_adverse = me.formData_kt.has_bad_event
							}
							param1.dealFlowInfo.variables.editable = 0
						}
						if (me.approval_status == 2) {
							param1.dealFlowInfo.variables.editable = 0
						}

						if(me.complaint_type !== "gk" && !me.oldObj.sthw && me.formDataObjBytype.tsxx && me.formDataObjBytype.tsxx.country) {
							param1.dealFlowInfo.variables.country = me.formDataObjBytype.tsxx.country
							param1.dealFlowInfo.variables.county = me.formDataObjBytype.tsxx.country
						}

						if (me.formData_kt.qualityUser) {
							param1.dealFlowInfo.variables.qualityUser = me.formData_kt.qualityUser
						}

						if (me.showExchange) {
							param1.dealFlowInfo.variables.showExchange = true
						}

						if (me.complaint_type == "dsl") {
							param1.dealFlowInfo.variables.can2300Fix = me.can2300Fix
						}

						Server.call("root/flowable/approve", param1, function(result) {
							me.hideLoading();

							if(pass_) {
								Root.message({
								showClose: true,
								duration: 10000,
									type: 'success',
									message: '审批通过'
								});
								me.saveAfter();
							}
							else {
								Root.message({
								showClose: true,
								duration: 10000,
									type: 'danger',
									message: '已拒绝'
								});
								me.saveAfter();
							}
						}, function(error) {
							me.hideLoading();
							if (error) {
								let message = clone(error)

								if (error.errorcode && error.errorcode == "saperror") {
									if (error.message || error.errormessage || error.msg) {
										message = error.message || error.errormessage || error.msg
									}
									Root.message({
										showClose: true,
										duration: 10000,
										type: 'error',
										message: message
									});
									me.closePage();
									me.onQuery();
								}
								else {
									if (error.message || error.errormessage || error.msg) {
										message = error.message || error.errormessage || error.msg
									}
									Root.message({
										showClose: true,
										duration: 10000,
										type: 'error',
										message: message
									});
								}
							}
							else {
								Root.message({
								showClose: true,
								duration: 10000,
									type: 'error',
									message: "审批失败"
								});
							}
						});
					},

					submitCMP() {
						/* for (let i = 0; i < this.$refs.form1.length; i++) {
							let checkResults = this.$refs.form1[i].checkForm();
							if (!checkResults) {
								let message = "请填写必填项"
								if (this.language == "en") {
									message = "Please fill in the required fields"
								}
								Root.message({
									showClose: true,
									duration: 10000,
									type: 'warning',
									message: message
								});
								return
							}
						} */
						let remark = true
						var complaint_detail_ = clone(this.complaint_detail);

						complaint_detail_.map(cd=>{
							cd.fields.map(f=>{
								if (f.required && f.isshow == "T" && !this.formDataObjBytype[cd.code][f.field] && this.formDataObjBytype[cd.code][f.field] !== 0) {
									remark = false
								}
							})
						})

						this.formFields_annex.map(e => {
							if (e.required && e.isshow == "T" && this.formDataObjBytype.qtx && !this.formDataObjBytype.qtx[e.field]) {
								remark = false
							}
						})

						if (!remark && this.complaint_type != "gk") {
							let message = '请填写必填项'
							if (this.language == "en") {
								message = "Please fill in the mandatory fields"
							}
							Root.message({
								showClose: true,
								duration: 10000,
								type: 'warning',
								message: message
							});

							return
						}

						if (this.complaint_type == "gk") {//骨科
							if (this.tableDataBytype.tsxx.length == 0) {
								Root.message({
									type: "warning",
									message: "请选择产品"
								})

								return
							}

							let remark = true
							this.tableDataBytype.tsxx.map(e => {
								if (e.has_return == 0 && !e.return_reason) {
									remark = false
								}
							})
							if (!remark) {
								Root.message({
									type: "warning",
									message: "未返回产品请填写原因"
								})
								return
							}
						}
						this.issubmit = true;
						this.loading_submit = true;
						this.saveCMP();
					},

					saveCMP() {
						var me = this;

						this.complaint_type;//投诉类型/gk骨科/
						this.complaint_detail;
						this.formFieldsObjBytype;
						this.formDataObjBytype;//数据By数据项//formDataObjBytype.tsxx
						this.tableDataBytype;

						//return
						this.loading_save = true;
						var feed_back_ = {}//反馈信息fkxx
						var patient_ = {}//患者信息hzzl
						var complaint_info_ = {}//投诉信息tsxx
						var symptom_ = {}
						var operation_ = {}

						this.complaint_detail.map(d=>{
							var complaint_detail_ = clone(me.complaint_detail);

							if (d.code == "tsxx") {//投诉信息
								if (me.complaint_type == "gj") {//国际投诉
									//me.setSaveCMP_tsxx_gj();
								}
								else if (me.complaint_type == "gk") {
									complaint_info_ = me.setSaveCMP_tsxx(me.formDataObjBytype.tsxx, me.tableDataBytype.tsxx);
								}
								else {
									complaint_info_ = me.setSaveCMP_tsxx(me.formDataObjBytype.tsxx);
								}

								//遍历字段 不显示的字段有值  值变为null
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.isshow == "F" && complaint_info_[f.field] && f.field !== "salesgroup_company") {
											complaint_info_[f.field] = null
										}
									})
								})
							}
							else if (d.code == "hzzl") {//患者资料
								patient_ = me.setSaveCMP_hzzl(me.formDataObjBytype.hzzl);

								//遍历字段 不显示的字段有值  值变为null
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.isshow == "F" && patient_[f.field]) {
											patient_[f.field] = null
										}
									})
								})
							}
							else if (d.code == "bbbwqk") {//病变部位情况
								symptom_ = me.setSaveCMP_bbbwqk(me.formDataObjBytype.bbbwqk);

								//遍历字段 不显示的字段有值  值变为null
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.isshow == "F" && symptom_[f.field]) {
											symptom_[f.field] = null
										}
									})
								})
							}
							else if (d.code == "ssqk") {//手术情况  手术附件品牌  术者评价
								operation_ = me.setSaveCMP_ssqk(me.formDataObjBytype.ssqk, me.formDataObjBytype.ssfjpp, me.formDataObjBytype.qtx);

								//遍历字段 不显示的字段有值  值变为null
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.isshow == "F" && operation_[f.field]) {
											operation_[f.field] = null
										}
									})
								})
							}
							else if (d.code == "fkxx") {//反馈信息
								feed_back_ = me.setSaveCMP_fkxx(me.formDataObjBytype.fkxx);
							}
							me.complaint_detail = complaint_detail_
						});

						var doc_type_ = ""
						if (this.complaint_type == "gk") {//骨科
							doc_type_ = "ort";
						}
						if (this.complaint_type == "gm") {//冠脉
							doc_type_ = "coronary";
						}
						if (this.complaint_type == "xm") {//心脉
							doc_type_ = "heart";
						}
						if (this.complaint_type == "dsl") {//电生理
							doc_type_ = "electrophy";
						}
						if (this.complaint_type == "yt") {//电生理
							doc_type_ = "latest";
						}
						if (this.complaint_type == "st") {//神通
							doc_type_ = "theurgy";
						}

						let remark = null
						if (this.formDataObjBytype && this.formDataObjBytype.qtx && this.formDataObjBytype.qtx.remark) {
							remark = this.formDataObjBytype.qtx.remark
						}
						let notification_mails = null
						if (this.formDataObjBytype && this.formDataObjBytype.qtx && this.formDataObjBytype.qtx.notification_mails) {
							notification_mails = this.formDataObjBytype.qtx.notification_mails
						}
						let notification_mails_ad = null
						if (this.formDataObjBytype && this.formDataObjBytype.qtx && this.formDataObjBytype.qtx.notification_mails_ad) {
							notification_mails_ad = this.formDataObjBytype.qtx.notification_mails_ad
						}
						let sales_sup_ad_name = null
						if (this.formDataObjBytype && this.formDataObjBytype.qtx && this.formDataObjBytype.qtx.sales_sup_ad_name) {
							sales_sup_ad_name = this.formDataObjBytype.qtx.sales_sup_ad_name
						}
						let sales_sup_name = null
						if (this.formDataObjBytype && this.formDataObjBytype.qtx && this.formDataObjBytype.qtx.sales_sup_name) {
							sales_sup_name = this.formDataObjBytype.qtx.sales_sup_name
						}

						let code = null
						if (this.formDataObj_cmp.doc_code) {
							code = this.formDataObj_cmp.doc_code
						}
						else {
							code = this.formDataObj_cmp.code
						}

						let reported_date = this.formDataObj_cmp.reported_date || null;
						if (this.issubmit) {
							reported_date = createDate()
						}

						let param_ = {
							isClientMode: false,
							"id": this.formDataObj_cmp.id,
							"code": code,
							"doc_date": this.formDataObj_cmp.doc_date,
							"reported_date": reported_date,
							"doc_type": doc_type_,
							"operator_code": this.formDataObj_cmp.operator_code,
							"operator_name": this.formDataObj_cmp.operator_name,
							"remark": remark,
							"notification_mails": notification_mails,
							"notification_mails_ad": notification_mails_ad,
							"sales_sup_ad_name": sales_sup_ad_name,
							"sales_sup_name": sales_sup_name,
							"strict": false,
							"feed_back": feed_back_,
							"patient": patient_,
							"complaint_info": complaint_info_,
							"symptom": symptom_,
							"operation": operation_
						}
						Server.call("root/api/saveComplaint", param_, function(result) {
							console.log(result);
							me.loading_save = false;
							if(me.issubmit) {
								me.issubmit = false;
								param_.strict = true;
								me.submitCMP_complaint();
							}
							else {
								let message = "保存成功"
								if (me.language == "en") {
									message = "save successfully"
								}
								Root.message({
									type: 'success',
									message: message
								});

								if (me.can2100Fix || me.can2300Fix) {
									me.passApproval(true, me.textarea2)
								}
								else {
									me.saveAfter();
								}
							}
						}, function() {
							me.loading_save = false;
						});
					},

					submitCMP_complaint() {
						var me = this;

						var obj_ = {};
						obj_ = me.formDataObjBytype.tsxx;

						let type;
						if (me.complaint_type == "gk") {
							type = "cmp_complaint"
						}
						// 冠脉
						if (me.complaint_type == "gm") {
							type = ""
							let url = window.top.RootSetting.url_cmp + "webServiceClient/pr/save?id=" + me.formDataObj_cmp.id

							let xhr = new XMLHttpRequest();
							xhr.open('get', url);//将拼串的URL放置此
							xhr.send();

							xhr.onreadystatechange = function(){
							    if(xhr.readyState === 4 && xhr.status === 200){
									me.loading_submit = false;
							        //接受响应的操作
									console.log(xhr.json)
									console.log(xhr.responseText)
									if (JSON.parse(xhr.responseText).success) {
										if (JSON.parse(xhr.responseText).message) {
											Root.message({
												type: 'success',
												message: decodeURIComponent(JSON.parse(xhr.responseText).message)
											});
										}
										else {
											let message = "提交成功"
											if (me.language == "en") {
												message = "submit successfully"
											}
											Root.message({
												type: 'success',
												message: message
											});
										}
										me.saveAfter();
									}
									else {
										if (JSON.parse(xhr.responseText).message) {
											Root.message({
												type: 'error',
												message: decodeURIComponent(JSON.parse(xhr.responseText).message)
											});
										}
										else {
											let message = "提交失败"
											if (me.language == "en") {
												message = "submit failure"
											}
											Root.message({
												type: 'error',
												message: message
											});
										}
									}
							    }
							}

							return
						}
						if (me.complaint_type == "xm") {
							type = "cmp_complaint_2400"
						}
						if (me.complaint_type == "dsl") {
							type = "cmp_complaint_2300"
						}
						if (me.complaint_type == "yt") {
							type = "C3400"
						}
						if (me.complaint_type == "st") {
							type = "cmp_complaint_2600"
						}

						var param_act = {
							isClientMode: false,
							type: type,
							businessId: me.formDataObj_cmp.id,
							variableMap: {
								billingtoCode: obj_.billingto_code,
								prodGroupCode: obj_.prod_group_code
							}
						}

						if (me.complaint_type == "xm" || me.complaint_type == "yt") {
							param_act.variableMap.salesSupUser = me.formDataObjBytype.qtx.sales_sup_ad_name || null
						}

						Server.call("root/flowable/start", param_act, function(result) {
							console.log(result);
							me.loading_submit = false;
							Root.message({
								type: 'success',
								message: '提交成功!'
							});
							me.saveAfter();
						}, function (error) {
							Root.message({
								type: 'error',
								message: error.errormessage
							});

							me.loading_submit = false;
						});
					},

					setSaveCMP_tsxx(data, detail_list) {
						var id_ = "";
						if (data.id) {
							id_ = data.id;
						}
						else {
							id_ = uuid_short();
						}

						var detail_list_ = [];
						if (detail_list && detail_list.length) {
							detail_list_ = detail_list;
						}

						let reason_code = data.reason_code || null

						let reason_list = []
						if (this.complaint_type == "dsl") {
							reason_code = null

							if (data && data.reason_code && data.reason_code.length > 0) {
								data.reason_code.map(e => {
									let list = {}

									list.code = e

									this.complaint_detail.map(cd=>{
										cd.fields.map(x=>{
											if (x.field == "reason_code") {
												x.options.map(f => {
													if (e == f.code) {
														list.name = f.name
													}
												})
											}
										})
									})

									reason_list.push(list)
								})
							}
						}

						if (data && data.prod_code && !detail_list) {
							let list = {}
							list.id = data.detail_list_id || null
							list.book_detail_id = data.book_detail_id || null
							list.prod_code = data.prod_code || null
							list.prod_name = data.prod_name || null
							list.product_sku = data.product_sku || null
							list.delivery_date = data.delivery_date || null
							list.valid_date = data.valid_date || null
							list.product_level08_code = data.product_level08_code || null
							list.product_level08_name = data.product_level08_name || null
							list.udi = data.udi || null
							list.batch_no = data.batch_no || null
							list.qty = data.qty || null
							detail_list_.push(list)
						}

						if (data && data.customer_address && !data.customer_address_id) {
							this.addressOptions.map(f=>{
								if (f.address == data.customer_address) {
									data.customer_address_id = f.id
								}
							})
						}

						var obj_ = {
								"id": id_,
								"cmp_id": this.formDataObj_cmp.id,
								"customer_id": data.customer_id || null,
								"customer_code": data.customer_code || null,
								"customer_name": data.customer_name || null,
								"customer_address_id": data.customer_address_id || null,
								"customer_address": data.customer_address || null,
								"supplyer_id": data.supplyer_id || null,
								"supplyer_code": data.supplyer_code || null,
								"supplyer_name": data.supplyer_name || null,
								"prod_type_code": data.prod_type_code || null,
								"prod_type_name": data.prod_type_name || null,
								"prod_group_code": data.prod_group_code || null,
								"prod_group_name": data.prod_group_name || null,
								"hospital_id": data.hospital_id || null,
								"hospital_code": data.hospital_code || null,
								"hospital_name": data.hospital_name || null,
								"hospital_department_name": data.hospital_department_name || null,

								"doctor_name": data.doctor_name || null,
								"doctor_phone": data.doctor_phone || null,
								"billingto_code": data.billingto_code || null,
								"billingto_name": data.billingto_name || null,
								"salesgroup_company": data.salesgroup_company || null,
								"detail_list": detail_list_,

								"sales_user_id": data.sales_id || null,
								"sales_user_name": data.sales_user_name || null,
								"sales_user_phone": data.sales_user_phone || null,
								"sales_user_email": data.sales_user_email || null,

								"country": data.country || null,
								"receive_date": data.receive_date || null,
								"has_operation_data": data.has_operation_data || null,
								"has_cmp": data.has_cmp || null,

								"reason_list": reason_list,

								"reason_code": reason_code || null,
								"reason_name": data.reason_name || null,
								"reason_more": data.reason_more || null,
								"has_hurt": data.has_hurt || null,
								"hurt_type_code": data.hurt_type_code || null,
								"hurt_type_name": data.hurt_type_name || null,
								"hurt_type_more": data.hurt_type_more || null,
								"malf_exp": data.malf_exp || null,
								"malf_desc": data.malf_desc || null,
								"remedies_code": data.remedies_code || null,
								"remedies_name": data.remedies_name || null,
								"remedies_more": data.remedies_more || null,
								"operation_result_code": data.operation_result_code || null,
								"operation_result_name": data.operation_result_name || null,
								"operation_result_more": data.operation_result_more || null,
								"patient_prognosis_code": data.patient_prognosis_code || null,
								"patient_prognosis_name": data.patient_prognosis_name || null,
								"patient_prognosis_more": data.patient_prognosis_more || null,

								"has_prod_return": data.has_prod_return || null,
								"prod_logistics": data.prod_logistics || null,
								"return_date": data.return_date || null,
								"un_return_type_code": data.un_return_type_code || null,
								"un_return_type_name": data.un_return_type_name || null,
								"un_return_type_more": data.un_return_type_more || null,
								"fault_type_code": data.fault_type_code || null,
								"fault_type_name": data.fault_type_name || null,
								"fault_type_more": data.fault_type_more || null,
								"fault_type_detail_code": data.fault_type_detail_code || null,
								"fault_type_detail_name": data.fault_type_detail_name || null,
								"fault_type_detail_more": data.fault_type_detail_more || null,
								"fault_type_detail_sub_code": data.fault_type_detail_sub_code || null,
								"fault_type_detail_sub_name": data.fault_type_detail_sub_name || null,
								"fault_type_detail_sub_more": data.fault_type_detail_sub_more || null,
							}

						return obj_
					},
					setSaveCMP_hzzl(data) {
						var id_ = "";
						if (data.id) {
							id_ = data.id;
						}
						else {
							id_ = uuid_short();
						}

						//事件后果
						var patient_result_list_ = [];
						this.result_map.map(r=>{
							var r_id_ = r.id;
							var r_code_ = r.code;
							var r_name_ = r.name;
							var r_desc_ = r.desc;

							if (data[r_code_]) {
								var result_ = {
									id: data[r_id_] ? data[r_id_] : uuid_short(),
									parent_id: id_,
									code: r_code_,
									name: r_name_,
									value: data[r_desc_] ? data[r_desc_] : ""
								}

								patient_result_list_.push(result_);
							}
						})

						let medical_history_list = [];
						if (data.history_code && data.history_code.length > 0 && this.complaint_type !== "gk") {
							data.history_code.forEach((f) => {
								let list = {};
								list.code = f

								this.complaint_detail.map(cd=>{
									cd.fields.map(x=>{
										if (x.field == "history_code") {
											x.options.map(e => {
												if (f == e.code) {
													list.name = e.name
												}
											})
										}
									})
								})

								medical_history_list.push(list)
							})
						}

						var obj_ = {
							id: id_,
							cmp_id: this.formDataObj_cmp.id,
							has_patient: data.has_patient || null,
							operation_desc: data.operation_desc || null,
							patient_surname: data.patient_surname || null,
							patient_name: data.patient_name || null,
							patient_age: data.patient_age || null,
							patient_gender_code: data.patient_gender_code || null,
							patient_gender_name: data.patient_gender_name || null,
							patient_hospital_no: data.patient_hospital_no || null,
							patient_id_card: data.patient_id_card || null,
							patient_contact: data.patient_contact || null,
							medical_history_list: medical_history_list || null,
							history_more: data.history_more || null,
							similar_desc: data.similar_desc || null,
							patient_weight: data.patient_weight || null,
							disease_diabetes_code: data.disease_diabetes_code || null,
							disease_diabetes_name: data.disease_diabetes_name || null,
							disease_hyperlipidemia_code: data.disease_hyperlipidemia_code || null,
							disease_hyperlipidemia_name: data.disease_hyperlipidemia_name || null,
							disease_miocardial_infarction_code: data.disease_miocardial_infarction_code || null,
							disease_miocardial_infarction_name: data.disease_miocardial_infarction_name || null,
							disease_hypertension_code: data.disease_hypertension_code || null,
							disease_hypertension_name: data.disease_hypertension_name || null,
							disease_smoking_code: data.disease_smoking_code || null,
							disease_smoking_name: data.disease_smoking_name || null,
							disease_others: data.disease_others || null,

							clotting_disorders_code: data.clotting_disorders_code || null,
							clotting_disorders_name: data.clotting_disorders_name || null,
							drugs_code: data.drugs_code || null,
							drugs_name: data.drugs_name || null,
							drugs_more: data.drugs_more || null,

							lesions_part_info: data.lesions_part_info || null,
							exists_similar_code: data.exists_similar_code || null,
							exists_similar_name: data.exists_similar_name || null,
							similar_desc: data.similar_desc || null,
							allergy_code: data.allergy_code || null,
							allergy_name: data.allergy_name || null,
							allergy_more: data.allergy_more || null,
							clotting_disorders_code: data.clotting_disorders_code || null,
							clotting_disorders_name: data.clotting_disorders_name || null,

							patient_result_list: patient_result_list_
						};
						return obj_;
					},
					setSaveCMP_fkxx(data) {
						var id_ = "";
						if (data.id) {
							id_ = data.id;
						}
						else {
							id_ = uuid_short();
						}

						var file_id_ = "";
						for(var file_id in this.formData_file_ids) {
							if (!file_id_) {
								file_id_ = file_id
							}
							else {
								file_id_ += ";" + file_id;
							}
						}

						//抢救措施
						var remedies_list_ = [];
						this.remedies_map.map(r=>{
							var r_id_ = r.id;
							var r_code_ = r.code;
							var r_name_ = r.name;
							var r_desc_ = r.desc;

							if (data[r_code_]) {
								var remedies_ = {
									id: data[r_id_] ? data[r_id_] : uuid_short(),
									parent_id: id_,
									code: r_code_,
									name: r_name_,
									value: data[r_desc_] ? data[r_desc_] : ""
								}

								remedies_list_.push(remedies_);
							}
						})

						//反馈问题分类
						var questionclassify_ = "";
						if (data.questionclassify.length) {
							data.questionclassify.map(q=>{
								if (questionclassify_) {
									questionclassify_ += ";" + q;
								}
								else {
									questionclassify_ = q;
								}
							})
						}
						var obj_ = {//反馈信息fkxx
							id: id_,
							cmp_id: this.formDataObj_cmp.id,
							has_search: data.has_search || null,
							remedies_list: remedies_list_ || null,
							happen_date: data.happen_date || null,
							aware_date: data.aware_date || null,
							operation_date: data.operation_date || null,
							operation_again_date: data.operation_again_date || null,
							happen_timeslot_code: data.happen_timeslot_code || null,
							happen_timeslot_name: data.happen_timeslot_name || null,
							directions_used: data.directions_used || null,
							feedback_desc: data.feedback_desc || null,
							suppose_code: data.suppose_code || null,
							suppose_name: data.suppose_name || null,
							questionclassify: questionclassify_ || null,
							file_ids: file_id_ || null
						};

						return obj_
					},

					setSaveCMP_bbbwqk(data) {
						var id_ = "";
						if (data.id) {
							id_ = data.id;
						}
						else {
							id_ = uuid_short();
						}

						let lesions_part_code = data.lesions_part_code || null;
						let lesion_location_list = [];
						if (Array.isArray(data.lesions_part_code)) {
							lesions_part_code = null
							data.lesions_part_code.forEach((f) => {
								let list = {};
								list.code = f

								this.complaint_detail.map(cd=>{
									cd.fields.map(x=>{
										if (x.field == "lesions_part_code") {
											x.options.map(e => {
												if (f == e.code) {
													list.name = e.name
												}
											})
										}
									})
								})

								lesion_location_list.push(list)
							})
						}
						let lesions_type_code = data.lesions_type_code || null;
						let lesion_type_list = [];
						if (Array.isArray(data.lesions_type_code)) {
							lesions_type_code = null
							data.lesions_type_code.forEach((f) => {
								let list = {};
								list.code = f

								this.complaint_detail.map(cd=>{
									cd.fields.map(x=>{
										if (x.field == "lesions_type_code") {
											x.options.map(e => {
												if (f == e.code) {
													list.name = e.name
												}
											})
										}
									})
								})

								lesion_type_list.push(list)
							})
						}

						let diameter_vessel_original = null
						if (data.diameter_vessel_original || data.diameter_vessel_original == 0) {
							diameter_vessel_original = parseFloat(data.diameter_vessel_original).toFixed(2)
						}

						var obj_ = {
								"id": id_,
								"cmp_id": this.formDataObj_cmp.id,
								"qty_target_lesions": data.qty_target_lesions == null ? null : data.qty_target_lesions,
								"location_target_lesions_i_code": data.location_target_lesions_i_code || null,
								"location_target_lesions_i_name": data.location_target_lesions_i_name || null,
								"location_target_lesions_i_other": data.location_target_lesions_i_other || null,
								"location_target_lesions_ii_code": data.location_target_lesions_ii_code || null,
								"location_target_lesions_ii_name": data.location_target_lesions_ii_name || null,
								"located_at_vessel_code": data.located_at_vessel_code || null,
								"located_at_vessel_name": data.located_at_vessel_name || null,
								"diameter_vessel_original": diameter_vessel_original,
								"lesions_length": data.lesions_length == null ? null : data.lesions_length,
								"rate_vessel_code": data.rate_vessel_code || null,
								"rate_vessel_name": data.rate_vessel_name || null,
								"degree_vessel_calcification_code": data.degree_vessel_calcification_code || null,
								"degree_vessel_calcification_name": data.degree_vessel_calcification_name || null,
								"degree_vessel_tortuosity_code": data.degree_vessel_tortuosity_code || null,
								"degree_vessel_tortuosity_name": data.degree_vessel_tortuosity_name || null,
								"degree_thrombus_code": data.degree_thrombus_code || null,
								"degree_thrombus_name": data.degree_thrombus_name || null,
								"angle_tumor_bend_code": data.angle_tumor_bend_code || null,
								"angle_tumor_bend_name": data.angle_tumor_bend_name || null,
								"is_implicate_blood": data.is_implicate_blood || null,
								"aneurysm_type_code": data.aneurysm_type_code || null,
								"aneurysm_type_name": data.aneurysm_type_name || null,
								"lesions_shape_code": data.lesions_shape_code || null,
								"lesions_shape_name": data.lesions_shape_name || null,
								"lesions_shape_more": data.lesions_shape_more || null,
								"lesions_cause_code": data.lesions_cause_code || null,
								"lesions_cause_name": data.lesions_cause_name || null,
								"salesgroup_company": data.salesgroup_company || null,

								"stents": data.stents || null,
								"lesions_vessels_proximal": data.lesions_vessels_proximal == null ? null : data.lesions_vessels_proximal,
								"lesions_vessels_distal": data.lesions_vessels_distal == null ? null : data.lesions_vessels_distal,
								"lesions_vessels_narrow_rate": data.lesions_vessels_narrow_rate == null ? null : data.lesions_vessels_narrow_rate,
								"preoperative_diagnosis": data.preoperative_diagnosis || null,
								"cure_type_code": data.cure_type_code || null,
								"cure_type_name": data.cure_type_name || null,
								"has_implant": data.has_implant || null,
								"implant_more": data.implant_more || null,
								"has_rupture": data.has_rupture || null,
								"has_placeholder_symptoms": data.has_placeholder_symptoms || null,
								"implant_part_code": data.implant_part_code || null,
								"implant_part_name": data.implant_part_name || null,
								"acts_artery_bend_code": data.acts_artery_bend_code || null,
								"acts_artery_bend_name": data.acts_artery_bend_name || null,
								"lesions_vessels_bend_code": data.lesions_vessels_bend_code || null,
								"lesions_vessels_bend_name": data.lesions_vessels_bend_name || null,
								"vessels_status_code": data.vessels_status_code || null,
								"vessels_status_name": data.vessels_status_name || null,
								"vessels_status_more": data.vessels_status_more || null,
								"tumors_size": data.tumors_size == null ? null : data.tumors_size,
								"tumors_width": data.tumors_width == null ? null : data.tumors_width,
								"vessels_proximal": data.vessels_proximal == null ? null : data.vessels_proximal,
								"vessels_distal": data.vessels_distal == null ? null : data.vessels_distal,

								"lesions_part_code": lesions_part_code || null,
								"lesions_part_more": data.lesions_part_more || null,
								"lesions_type_code": lesions_type_code || null,
								"lesions_type_more": data.lesions_type_more || null,
								"lesion_location_list": lesion_location_list || null,
								"lesion_type_list": lesion_type_list || null,
							}

						return obj_
					},
					setSaveCMP_ssqk(data, fjdata, szdata) {
						var id_ = "";
						if (data.id) {
							id_ = data.id;
						}
						else {
							id_ = uuid_short();
						}

						let complicationList = [];
						if (data.complicationList && data.complicationList.length > 0) {
							data.complicationList.forEach((f) => {
								let list = {};
								list.code = f
								list.type = "PI"

								this.complaint_detail.map(cd=>{
									cd.fields.map(x=>{
										if (x.field == "complicationList") {
											x.options.map(e => {
												if (f == e.code) {
													list.name = e.name
												}
											})
										}
									})
								})

								if (f == "Other Caused By PCI") {
									list.value = data.complicationList_more
								}

								complicationList.push(list)
							})
						}
						if (data.complicationList2 && data.complicationList2.length > 0) {
							data.complicationList2.forEach((f) => {
								let list = {};
								list.code = f
								list.type = "DI"

								this.complaint_detail.map(cd=>{
									cd.fields.map(x=>{
										if (x.field == "complicationList2") {
											x.options.map(e => {
												if (f == e.code) {
													list.name = e.name
												}
											})
										}
									})
								})

								if (f == "Other Caused By Drug Coating") {
									list.value = data.complicationList2_more
								}

								complicationList.push(list)
							})
						}

						let pipe_spec_ = null;
						let pipe_sku_ = null;
						let thread_spec_ = null;
						let thread_sku_ = null;
						let sheath_spec_ = null;
						let sheath_sku_ = null;
						if (fjdata) {
							pipe_spec_ = fjdata.pipe_spec || null
							pipe_sku_ =  fjdata.pipe_sku || null
							thread_spec_ = fjdata.thread_spec || null
							thread_sku_ = fjdata.thread_sku || null
							sheath_spec_ = fjdata.sheath_spec || null
							sheath_sku_ = fjdata.sheath_sku || null
						}

						let doctor_opinion_code_ = null;
						let doctor_opinion_more_ = null;
						let operation_desc_ = null;

						if (!data.doctor_opinion_code && !data.doctor_opinion_more && !data.operation_desc) {
							doctor_opinion_code_ = szdata.doctor_opinion_code || null
							doctor_opinion_name_ = szdata.doctor_opinion_name || null
							doctor_opinion_more_ = szdata.doctor_opinion_more || null
							operation_desc_ = szdata.operation_desc || null
						}
						else {
							doctor_opinion_code_ = data.doctor_opinion_code || null
							doctor_opinion_name_ = szdata.doctor_opinion_name || null
							doctor_opinion_more_ = data.doctor_opinion_more || null
							operation_desc_ = data.operation_desc || null
						}
						// 神通 医生意见为多选
						if (this.complaint_type == "st") {
							let doctor_opinion_code_str = ""
							let doctor_opinion_name_str = ""

							if (doctor_opinion_code_ && doctor_opinion_code_.length > 0) {
								doctor_opinion_code_.map(e => {
									if (!doctor_opinion_code_str) {
										doctor_opinion_code_str = e

										this.complaint_detail.map(cd=>{
											cd.fields.map(x=>{
												if (x.field == "doctor_opinion_code") {
													x.options.map(f => {
														if (e == f.code) {
															doctor_opinion_name_str = f.name
														}
													})
												}
											})
										})
									}
									else {
										doctor_opinion_code_str += ";" + e

										this.complaint_detail.map(cd=>{
											cd.fields.map(x=>{
												if (x.field == "doctor_opinion_code") {
													x.options.map(f => {
														if (e == f.code) {
															doctor_opinion_name_str += ";" + f.name
														}
													})
												}
											})
										})
									}
								})
							}
							doctor_opinion_code_ = doctor_opinion_code_str
							doctor_opinion_name_ = doctor_opinion_name_str
						}

						let complicationList_null = []

						var obj_ = {
							"id": id_,
							"cmp_id": this.formDataObj_cmp.id,
							"hospital_name": data.hospital_name || null,
							"hospital_address": data.hospital_address || null,
							"hospital_department_name": data.hospital_department_name || null,
							"doctor": data.doctor || null,
							"doctor_phone": data.doctor_phone || null,
							"operation_date": data.operation_date || null,
							"prodvalid_date": data.prodvalid_date || null,
							"receive_date": data.receive_date || null,
							"system_import_process_code": data.system_import_process_code || null,
							"system_import_process_name": data.system_import_process_name || null,
							"emptying_pipe_code": data.emptying_pipe_code || null,
							"emptying_pipe_name": data.emptying_pipe_name || null,
							"is_trestle_shift_code": data.is_trestle_shift_code || null,
							"is_trestle_shift_name": data.is_trestle_shift_name || null,
							"is_trestle_twist_code": data.is_trestle_twist_code || null,
							"is_trestle_twist_name": data.is_trestle_twist_name || null,
							"is_trestle_performance_code": data.is_trestle_performance_code || null,
							"is_trestle_performance_name": data.is_trestle_performance_name || null,
							"is_endoleak_code": data.is_endoleak_code || null,
							"is_endoleak_name": data.is_endoleak_name || null,
							"is_balloon_code": data.is_balloon_code || null,
							"is_balloon_name": data.is_balloon_name || null,
							"is_balloon_more": data.is_balloon_more || null,
							"effect_balloon": data.effect_balloon || null,
							"capacity_balloon": data.capacity_balloon == null ? null : data.capacity_balloon,
							"disease_preballoon_dilatation_code": data.disease_preballoon_dilatation_code || null,
							"disease_preballoon_dilatation_name": data.disease_preballoon_dilatation_name || null,
							"disease_preballoon_dilatation_spec": data.disease_preballoon_dilatation_spec || null,
							"post_dilation_pressure": data.post_dilation_pressure || null,
							"disease_retroballoon_dilatation_sku": data.disease_retroballoon_dilatation_sku || null,

							"pre_dilation_pressure": data.pre_dilation_pressure == null ? null : data.pre_dilation_pressure,
							"disease_preballoon_dilatation_sku": data.disease_preballoon_dilatation_sku || null,

							"disease_preballoon_dilatation_more": data.disease_preballoon_dilatation_more || null,

							"disease_retroballoon_dilatation_code": data.disease_retroballoon_dilatation_code || null,
							"disease_retroballoon_dilatation_name": data.disease_retroballoon_dilatation_name || null,
							"disease_retroballoon_dilatation_spec": data.disease_retroballoon_dilatation_spec || null,

							"drugs_after_code": data.drugs_after_code || null,
							"drugs_after_name": data.drugs_after_name || null,
							"drugs_after_more": data.drugs_after_more || null,

							"coronary_code": data.coronary_code || null,
							"coronary_name": data.coronary_name || null,
							"coronary_more": data.coronary_more || null,
							"piercing_part_code": data.piercing_part_code || null,
							"piercing_part_name": data.piercing_part_name || null,
							"is_implanted_otherstents_code": data.is_implanted_otherstents_code || null,
							"is_implanted_otherstents_name": data.is_implanted_otherstents_name || null,
							"is_implanted_otherstents_spec": data.is_implanted_otherstents_spec || null,
							"is_implanted_otherstents_order": data.is_implanted_otherstents_order || null,
							"is_implanted_otherstents_overlap": data.is_implanted_otherstents_overlap || null,

							"complication_list": complicationList || complicationList_null,

							"post_dilation_code": data.post_dilation_code || null,
							"post_dilation_name": data.post_dilation_name || null,
							"post_pressure": data.post_pressure || null,
							"prod_expand_cnt": data.prod_expand_cnt || null,
							"duration": data.duration || null,
							"anesthesia_type_code": data.anesthesia_type_code || null,
							"anesthesia_type_name": data.anesthesia_type_name || null,
							"operation_scheme": data.operation_scheme || null,
							"has_socket": data.has_socket || null,
							"puncture": data.puncture || null,
							"sheath_length": data.sheath_length || null,
							"has_caton": data.has_caton || null,
							"resistance_code": data.resistance_code || null,
							"resistance_name": data.resistance_name || null,
							"has_open_hard": data.has_open_hard || null,
							"has_shorten": data.has_shorten || null,
							"has_insufficient": data.has_insufficient || null,
							"has_smooth": data.has_smooth || null,
							"has_compliance": data.has_compliance || null,
							"has_adherence": data.has_adherence || null,
							"has_retention": data.has_retention || null,
							"has_covered_stents": data.has_covered_stents || null,
							"covered_stents_code": data.covered_stents_code || null,
							"covered_stents_name": data.covered_stents_name || null,
							"release_point_head_code": data.release_point_head_code || null,
							"release_point_head_name": data.release_point_head_name || null,
							"release_point_tail_code": data.release_point_tail_code || null,
							"release_point_tail_name": data.release_point_tail_name || null,
							"has_knead_after": data.has_knead_after || null,
							"has_after_dilation": data.has_after_dilation || null,
							"mid_pipe_location_code": data.mid_pipe_location_code || null,
							"mid_pipe_location_name": data.mid_pipe_location_name || null,
							"expansion_moment_code": data.expansion_moment_code || null,
							"expansion_moment_name": data.expansion_moment_name || null,
							"has_after_dilation": data.has_after_dilation || null,
							"mid_pipe_location_code": data.mid_pipe_location_code || null,
							"mid_pipe_location_name": data.mid_pipe_location_name || null,
							"expansion_moment_code": data.expansion_moment_code || null,
							"expansion_moment_name": data.expansion_moment_name || null,
							"has_after_dilation": data.has_after_dilation || null,
							"isolation_effect_code": data.isolation_effect_code || null,
							"isolation_effect_name": data.isolation_effect_name || null,

							"complication_code": data.complication_code || null,
							"filling_process_code": data.filling_process_code || null,
							"filling_process_name": data.filling_process_name || null,
							"mico_pipe_instil_code": data.mico_pipe_instil_code || null,
							"mico_pipe_instil_name": data.mico_pipe_instil_name || null,
							"kickpipe_code": data.kickpipe_code || null,
							"kickpipe_name": data.kickpipe_name || null,
							"relief_cnt": data.relief_cnt || null,
							"relief_status_code": data.relief_status_code || null,
							"relief_status_name": data.relief_status_name || null,
							"pour_t_code": data.pour_t_code || null,
							"pour_t_name": data.pour_t_name || null,
							"unwind_code": data.unwind_code || null,
							"unwind_name": data.unwind_name || null,
							"push_process_code": data.push_process_code || null,
							"push_process_name": data.push_process_name || null,
							"operation_effect_code": data.operation_effect_code || null,
							"operation_effect_name": data.operation_effect_name || null,
							"has_pipe_shape": data.has_pipe_shape || null,
							"pipe_in_place_code": data.pipe_in_place_code || null,
							"pipe_in_place_name": data.pipe_in_place_name || null,
							"pipe_in_place_more": data.pipe_in_place_more || null,
							"trans_instrument_code": data.trans_instrument_code || null,
							"trans_instrument_name": data.trans_instrument_name || null,
							"trans_instrument_more": data.trans_instrument_more || null,

							"recycling_instrument_code": data.recycling_instrument_code || null,
							"recycling_instrument_name": data.recycling_instrument_name || null,
							"recycling_instrument_more": data.recycling_instrument_more || null,
							"has_stents_trans_smooth": data.has_stents_trans_smooth || null,
							"has_stents_lesions": data.has_stents_lesions || null,
							"has_stents_inplace": data.has_stents_inplace || null,
							"has_stents_expansion": data.has_stents_expansion || null,
							"expansion_pressure": data.expansion_pressure || null,
							"long_sheath": data.long_sheath || null,
							"pipe_spec": data.pipe_spec || null,
							"thread_spec": data.thread_spec || null,
							"mid_pipe": data.mid_pipe || null,
							"mico_pipe": data.mico_pipe || null,
							"thread_spec": data.thread_spec || null,
							"instrument_more": data.instrument_more || null,

							"rhythm_type": data.rhythm_type || null,
							"operation_progress_code": data.operation_progress_code || null,
							"adverse_effects_code": data.adverse_effects_code || null,
							"return_visit_code": data.return_visit_code || null,
							"radio_band_code": data.radio_band_code || null,
							"radio_band_more": data.radio_band_more || null,
							"physiological_band_code": data.physiological_band_code || null,
							"physiological_band_more": data.physiological_band_more || null,

							"degree_vessel_calcification_code": data.degree_vessel_calcification_code || null,
							"degree_vessel_calcification_name": data.degree_vessel_calcification_name || null,
							"degree_vessel_tortuosity_code": data.degree_vessel_tortuosity_code || null,
							"degree_vessel_tortuosity_name": data.degree_vessel_tortuosity_name || null,

							"pipe_spec": data.pipe_spec || pipe_spec_,
							"pipe_sku": pipe_sku_,
							"thread_spec": data.thread_spec || thread_spec_,
							"thread_sku": thread_sku_,
							"sheath_spec": data.sheath_spec || sheath_spec_,
							"sheath_sku": data.sheath_sku || sheath_sku_,

							"doctor_opinion_code": doctor_opinion_code_,
							"doctor_opinion_name": doctor_opinion_name_,
							"doctor_opinion_more": doctor_opinion_more_,
							"operation_desc": operation_desc_,
						}

						return obj_
					},

					//显示数据加载
					initData(istypecheng) {
						var me = this;
						//1. query data
						this.filterTxt = "";

						if (!this.formDataObj_cmp.id || istypecheng) {
							this.formDataObj_cmp = clone(this.newRowDefault);
							this.formDataObj_cmp.doc_type = this.complaint_type;
							this.upFileUrl = window.top.RootSetting.url + "root/api/upLoadBillAttachment?orderid=" + this.formDataObj_cmp.id;

							if (this.formDataObjBytype.hzzl) {
								var data_hzzl = clone(this.formDataObjBytype.hzzl)
								data_hzzl.patient_hospital_no = "不详"
								data_hzzl.drugs_code = "None"
								data_hzzl.exists_similar_code = "None"
								data_hzzl.patient_id_card = "不详"
								data_hzzl.patient_contact = "不详"

								if (data_hzzl.history_code = []) {
									data_hzzl.history_code = ['code0']
								}

								this.formDataObjBytype.hzzl = data_hzzl
							}

							if (this.formDataObjBytype.ssqk) {
								var data_ssqk = clone(this.formDataObjBytype.ssqk)
								data_ssqk.receive_date = createDate()
								this.formDataObjBytype.ssqk = data_ssqk
							}

							for (var ct in this.formDataObjBytype) {
								var newctObj_ = clone(this.formDataObjBytype[ct]);
								newctObj_.id = uuid_short();
								newctObj_.cmp_id = this.formDataObj_cmp.id;

								if (ct == "btzd") {//必填字段
									newctObj_.code = this.formDataObj_cmp.code;
								}
								else if (this.complaint_type == "gj" && ct == "tsxx") {//国际投诉信息

								}
								else if (ct == "tsxx") {//投诉信息
									newctObj_.code = this.formDataObj_cmp.code;
									newctObj_.doc_date = this.formDataObj_cmp.doc_date;
									newctObj_.doc_code = this.formDataObj_cmp.doc_code;

									if (this.orgtype == "dealer") {
										newctObj_.customer_id = this.formDataObj_cmp.org_id;
										newctObj_.customer_code = this.formDataObj_cmp.org_code;
										newctObj_.customer_name = this.formDataObj_cmp.org_name;
										newctObj_.agent_platform_code = this.formDataObj_cmp.org_code;
										newctObj_.agent_platform_name = this.formDataObj_cmp.org_name;

										newctObj_.supplyer_id = this.formDataObj_cmp.org_id;
										newctObj_.supplyer_code = this.formDataObj_cmp.org_code;
										newctObj_.supplyer_name = this.formDataObj_cmp.org_name;

										this.getSales(newctObj_)
									}


									if (this.complaint_type == "gm") {
										newctObj_.c_code = "0000000210"
										newctObj_.salesgroup_company = "上海微创医疗器械（集团）有限公司";
										if (this.language == "en") {
											newctObj_.salesgroup_company = "Shanghai MicroPort Medical (Group) Co., Ltd.";
										}
										newctObj_.billingto_code = "2100";
										newctObj_.billingto_name = "冠脉销售组织";
										newctObj_.prod_group_name = "心脏介入产品组";
										newctObj_.prod_group_code = "10";
									}
									if (this.complaint_type == "xm") {
										newctObj_.c_code = "0000000240"
										newctObj_.salesgroup_company = "上海微创心脉医疗科技（集团）股份有限公司";
										if (this.language == "en") {
											newctObj_.salesgroup_company = "Shanghai MicroPort Endovascular MedTech Co., Ltd.";
										}
										newctObj_.billingto_code = "2400";
										newctObj_.billingto_name = "心脉销售组织";
										newctObj_.prod_group_name = "外周介入产品组";
										newctObj_.prod_group_code = "40";

										if (newctObj_.prod_group_code == "40") {}
									}
									if (this.complaint_type == "st") {
										newctObj_.c_code = "0000000260"
										newctObj_.billingto_code = "2600";
										newctObj_.billingto_name = "神通销售组织";
										newctObj_.prod_group_name = "外周介入产品组";
										newctObj_.prod_group_code = "40";
										newctObj_.salesgroup_company = "微创神通医疗科技（上海）有限公司";
										if (this.language == "en") {
											newctObj_.salesgroup_company = "MicroPort NeuroTech (Shanghai) Co., Ltd.";
										}
									}
									if (this.complaint_type == "dsl") {
										newctObj_.c_code = "0000000230"
										newctObj_.billingto_code = "2300";
										newctObj_.billingto_name = "电生理国内销售组织";
										newctObj_.prod_group_name = "外周介入产品组";
										newctObj_.prod_group_code = "40";
										newctObj_.salesgroup_company = "上海微创电生理医疗科技股份有限公司";
										if (this.language == "en") {
											newctObj_.salesgroup_company = "Shanghai MicroPort EP MedTech Co., Ltd.";
										}
									}
									if (this.complaint_type == "yt") {
										newctObj_.c_code = "0000000340"
										newctObj_.billingto_code = "3400";
										newctObj_.billingto_name = "上海优通销售组织";
										newctObj_.prod_group_name = "非血管介入产品组";
										newctObj_.prod_group_code = "31";
										newctObj_.salesgroup_company = "微创优通医疗科技（上海）有限公司";
										if (this.language == "en") {
											newctObj_.salesgroup_company = "MicroPort Urocare (shanghai) Co.,Ltd.";
										}
									}

									if (this.formDataObj_cmp.org_id) {
										this.getDefaultAddressById(this.formDataObj_cmp.org_id, function(list, defaultAddress) {
											me.formDataObjBytype["tsxx"] = clone(newctObj_);
										})
									}
									else {
										this.formDataObjBytype[ct] = clone(newctObj_);
									}

									if (this.orgtype == "master") {
										this.getSales()
									}

									return
								}

								this.formDataObjBytype[ct] = clone(newctObj_);
							}

							if (this.orgtype == "master") {
								this.getSales()
							}
						}
						else {
							if (!this.formDataObj_cmp.operator_code) {
								this.formDataObj_cmp.operator_code = this.newRowDefault.operator_code;
								this.formDataObj_cmp.operator_name = this.newRowDefault.operator_name;
							}

							//保存后类型就定死了，不能改
							this.disabled_complaint_type = true;

							this.loading_getall = true;
							//加载数据详情
							this.getInfoData();
						}

						this.upFileUrl = window.top.RootSetting.url + "root/api/upLoadBillAttachment?orderid=" + this.formDataObj_cmp.id;
					},

					getSales(newctObj_, formDataObjBytype_) {
						let me = this

						if (newctObj_) {
							let url = window.top.RootSetting.url_cmp + "md/getSalesByCustomerCode/" + newctObj_.customer_code

							let xhr = new XMLHttpRequest();
							xhr.open('get', url);
							xhr.send();

							xhr.onreadystatechange = function(){
							    if(xhr.readyState === 4 && xhr.status === 200){
									console.log(xhr.responseText)
									let result = JSON.parse(xhr.responseText)
									if (result.code == "200") {
										if (result.data.length > 0) {
											let formDataObjBytype_1 = clone(me.formDataObjBytype);

											if (!formDataObjBytype_1.tsxx.sales_user_name) {
												formDataObjBytype_1.tsxx.sales_user_name = result.data[0].Salesman_Name || null
												formDataObjBytype_1.tsxx.sales_user_phone = result.data[0].phone_no || null
												formDataObjBytype_1.tsxx.sales_user_email = result.data[0].mail_address || null
											}

											me.formDataObjBytype = formDataObjBytype_1
										}
									}
							    }
							}
						}
						else {
							let parames = {
								isClientMode: false,
								dataname: "adUserInfo",
								filter: "1=1 and ad_name = '" + localStorage.getItem("ad_name") + "'"
							}
							Server.call("root/data/getEntitySet", parames, function(result) {
								if (!result || !result.data || !result.data.entityset) {
									return
								}
								let data = result.data.entityset[0]
								if (!formDataObjBytype_) {
									formDataObjBytype_ = clone(me.formDataObjBytype)
								}

								if (!formDataObjBytype_.tsxx.sales_user_name) {
									formDataObjBytype_.tsxx.sales_user_name = data.emp_name
									formDataObjBytype_.tsxx.sales_user_phone = data.phone
									formDataObjBytype_.tsxx.sales_user_email = data.email

									me.formDataObjBytype = formDataObjBytype_
								}

								if (me.complaint_type == "xm") {
									me.formDataObjBytype = formDataObjBytype_

									if (me.popupParames.sceneCode == "add" || me.popupParames.sceneCode == "edit") {
										me.getSaleHierByAdName(localStorage.getItem("ad_name"), formDataObjBytype_, "xm")
									}
								}
								else {
									if (me.popupParames.sceneCode == "add" || me.popupParames.sceneCode == "edit") {
										me.getSaleHierByAdName(localStorage.getItem("ad_name"), formDataObjBytype_)
									}
								}
							})
						}
					},

					getSaleHierByAdName(ad_name, formDataObjBytype_, type) {
						let me = this

						let url = window.top.RootSetting.url_cmp + "md/getSaleHierByAdName/" + ad_name

						let xhr = new XMLHttpRequest();
						xhr.open('get', url);
						xhr.send();

						xhr.onreadystatechange = function(){
						    if(xhr.readyState === 4 && xhr.status === 200){
								let result = JSON.parse(xhr.responseText)
								console.log(result)
								if (result.code == "200") {
									if (result.data.length > 0) {
										if (me.popupParames.sceneCode == "add") {
											if (result.data[0].Supervisor_Code !== "0") {
												formDataObjBytype_.qtx.sales_sup_ad_name = result.data[0].Supervisor_Code;
												formDataObjBytype_.qtx.sales_sup_name = result.data[0].Supervisor_Name;

												me.formDataObjBytype = formDataObjBytype_
											}
										}

										if (type && type == "xm") {
											me.getXmSales()
											return
										}

										me.getSalesOptions(result);
									}
									if (result.data.length == 0) {
										if (type && type == "xm") {
											me.getXmSales()
										}
									}
								}
						    }
						}
					},

					getXmSales() {
						let me = this;
						let parames = {
							isClientMode: false,
							dataname: "cmp_approve_2400",
						}
						Server.call("root/data/getEntitySet", parames, function(result) {
							if (!result || !result.data || !result.data.entityset) {
								return
							}

							let data = result.data.entityset
							let arr =[]
							data.map(e => {
								let list = {}
								list.label = e.name
								list.value = e.ad_name + ";" + e.name
								arr.push(list)
							})

							var complaint_detail_ = clone(me.formFields_annex);
							complaint_detail_.map(f=>{
								if (f.field == "sales_sup_name") {
									f.options = arr
								}
							})
							me.formFields_annex = complaint_detail_
						})
					},

					getSalesOptions(result) {
						let me = this
						let data = result.data[0];
						var complaint_detail_ = clone(this.formFields_annex);
						complaint_detail_.map(f=>{
							if (f.field == "sales_sup_name") {
								let arr = []
								let list = {}

								if (data.Supervisor_Code && data.Supervisor_Code !== "0") {
									list.label = data.Supervisor_Name
									list.value = data.Supervisor_Code + ";" + data.Supervisor_Name
									arr.push(list)
									list = {}
								}
								if (data.Manager_Small_Code && data.Manager_Small_Code !== "0") {
									list.label = data.Manager_Small_Name
									list.value = data.Manager_Small_Code + ";" + data.Manager_Small_Name
									arr.push(list)
									list = {}
								}
								if (data.Manager_Big_Code && data.Manager_Big_Code !== "0") {
									list.label = data.Manager_Big_Name
									list.value = data.Manager_Big_Code + ";" + data.Manager_Big_Name
									arr.push(list)
									list = {}
								}
								if (data.Sales_admin_1_Code && data.Sales_admin_1_Code !== "0") {
									list.label = data.Sales_admin_1_Name
									list.value = data.Sales_admin_1_Code + ";" + data.Sales_admin_1_Name
									arr.push(list)
									list = {}
								}
								if (data.Sales_admin_2_Code && data.Sales_admin_2_Code !== "0") {
									list.label = data.Sales_admin_2_Name
									list.value = data.Sales_admin_2_Code + ";" + data.Sales_admin_2_Name
									arr.push(list)
									list = {}
								}
								if (data.Sales_admin_3_Code && data.Sales_admin_3_Code !== "0") {
									list.label = data.Sales_admin_3_Name
									list.value = data.Sales_admin_3_Code + ";" + data.Sales_admin_3_Name
									arr.push(list)
								}

								f.options = arr
							}
						})
						this.formFields_annex = complaint_detail_
					},

					getInfoData() {
						var me = this;
						let param_ = {
							isClientMode: false,
							id: this.formDataObj_cmp.id
						}
						Server.call("root/api/getComplaintInfo", param_, function(result) {
							console.log(result);
							me.loading_getall = false;

							var formDataObjBytype_ = clone(me.formDataObjBytype);

							var complaint_info_ = {}//投诉信息tsxx
							var patient_ = {}//患者信息hzzl
							var feed_back_ = {}//反馈信息fkxx
							var complaint_detail_type = {};
							if (result.data && result.data.data) {
								var result_data = result.data.data;

								var complaint_detail_ = clone(me.complaint_detail);
								//故障表现
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.field == "fault_type_detail_code") {
											if (result_data.complaint_info.fault_type_code == "Yes-prior to operation") {
												if (me.language == "en") {
													f.options = [
														{label: "Stent strut disruption",value: "Stent strut disruption"},
														{label: "Tip streched",value: "Tip streched"},
														{label: "Labelling or Instruction issue",value: "Labelling or Instruction issue"},
													]
												}
												else {
													f.options = [
														{label: "打开包装发现支架起毛刺",value: "Stent strut disruption"},
														{label: "打开包装发现Tip头拉伸",value: "Tip streched"},
														{label: "标识或说明书问题",value: "Labelling or Instruction issue"},
													]
												}
											}
											else if (result_data.complaint_info.fault_type_code == "Yes-during the procedure") {
												if (me.language == "en") {
													f.options = [
														{label: "Cannot pass the lesion",value: "Cannot pass the lesion"},
														{label: "Cannot reach the lesion",value: "Cannot reach the lesion"},
														{label: "Shaft kinked or bent",value: "Shaft kinked or bent"},
														{label: "Stent strut disruption",value: "Stent strut disruption"},
														{label: "Stent fracture",value: "Stent fracture"},
														{label: "Stent deformed",value: "Stent deformed"},
														{label: "Balloon issue",value: "Balloon issue"},
														{label: "Stent dislodgement in vivo",value: "Stent dislodgement in vivo"},
														{label: "Stent dislodgement in vitro",value: "Stent dislodgement in vitro"},
														{label: "Withdrawl resistance",value: "Withdrawl resistance"},
													]
												}
												else {
													f.options = [
														{label: "产品通不过病变",value: "Cannot pass the lesion"},
														{label: "产品不能达到病变",value: "Cannot reach the lesion"},
														{label: "支架断裂",value: "Stent fracture"},
														{label: "球囊问题",value: "Balloon issue"},
														{label: "支架体内脱载",value: "Stent dislodgement in vivo"},
														{label: "支架体外脱载",value: "Stent dislodgement in vitro"},
														{label: "回撤困难",value: "Withdrawl resistance"},
													]
												}
											}
											else if (result_data.complaint_info.fault_type_code == "Yes-post operation") {
												if (me.language == "en") {
													f.options = [
														{label: "Stent fracture",value: "Stent fracture"},
														{label: "In-Stent Restenosis",value: "In-Stent Restenosis"},
													]
												}
												else {
													f.options = [
														{label: "支架断裂",value: "Stent fracture"},
														{label: "支架内再狭窄",value: "In-Stent Restenosis"},
													]
												}
											}
										}

										if (f.field == "fault_type_detail_sub_code") {
											if (result_data.complaint_info.fault_type_detail_code == "Cannot pass the lesion") {
												if (me.language == "en") {
													f.options = [
														{label: "No abnormality",value: "No abnormality"},
														{label: "Shaft kinked/bent",value: "Shaft kinked/bent"},
														{label: "Stent strut disruption",value: "Stent strut disruption"},
														{label: "Stent fracture",value: "Stent fracture"},
													]
												}
												else {
													f.options = [
														{label: "无异常",value: "No abnormality"},
														{label: "输送器打折/折断",value: "Shaft kinked/bent"},
														{label: "支架起毛刺",value: "Stent strut disruption"},
														{label: "支架变形",value: "Stent fracture"},
													]
												}
											}
											else if (result_data.complaint_info.fault_type_detail_code == "Balloon issue") {
												if (me.language == "en") {
													f.options = [
														{label: "Balloon No-inflate",value: "Balloon No-inflate"},
														{label: "Balloon leakage/damage",value: "Balloon leakage/damage"},
														{label: "Balloon No-deflate",value: "Balloon No-deflate"},
													]
												}
												else {
													f.options = [
														{label: "球囊无法打开",value: "Balloon No-inflate"},
														{label: "球囊破裂/泄露",value: "Balloon leakage/damage"},
														{label: "球囊无法回缩",value: "Balloon No-deflate"},
													]
												}
											}
										}
									})
								})
								me.complaint_detail = complaint_detail_

								var aaobj = {};
								for (var i=0; i<me.complaint_detail.length; i++) {
									var obj_ = me.complaint_detail[i];
									aaobj[obj_.code] = i
								}

								me.complaint_detail.map(d=>{
									var complaint_detail_ = clone(me.complaint_detail);

									if (d.code == "tsxx") {//投诉信息
										if (result_data.complaint_info) {
											complaint_info_ = me.getCMPForm_tsxx(result_data.complaint_info);
										}

										var index = aaobj[d.code];
										me.setFieldShow(complaint_info_, me.complaint_detail[index].fields, function(fields) {
											me.complaint_detail[index].fields = fields
										})

										//遍历字段 有值的字段 不显示的变为显示
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.isshow == "F" && complaint_info_[f.field] && f.field != "salesgroup_company") {
													f.isshow = "T"
												}

												if (result_data.complaint_info && result_data.complaint_info.country) {
													if (f.field == "hospital_name") {
														if (result_data.complaint_info.country == "China" || result_data.complaint_info.country == "CN") {
															f.type = "popup"
														}
														else {
															f.type = "input"
														}
													}
													if (f.field == "hospital_address" || f.field == "hospital_phone") {
														if (result_data.complaint_info.country == "China" || result_data.complaint_info.country == "CN") {
															f.type = "span"
														}
														else {
															f.type = "input"
														}
													}
												}
											})
										})
									}
									else if (d.code == "hzzl") {//患者资料
										if (result_data.patient) {
											patient_ = me.getCMPForm_hzzl(result_data.patient);
										}

										var index = aaobj[d.code];
										me.setFieldShow(patient_, me.complaint_detail[index].fields, function(fields) {
											me.complaint_detail[index].fields = fields
										})

										//遍历字段 有值的字段 不显示的变为显示
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.isshow == "F" && patient_[f.field]) {
													f.isshow = "T"
												}
												if (patient_.has_patient && me.complaint_type == "gk") {
													f.disabled = false
												}
											})
										})
									}
									else if (d.code == "bbbwqk") {//病变部位情况
										var index = aaobj[d.code];
										me.setFieldShow(result_data.symptom, me.complaint_detail[index].fields, function(fields) {
											me.complaint_detail[index].fields = fields
										})

										//遍历字段 有值的字段 不显示的变为显示
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.isshow == "F" && result_data.symptom[f.field]) {
													f.isshow = "T"
												}
											})
										})
									}
									else if (d.code == "ssqk") {//手术情况
										var index = aaobj[d.code];
										me.setFieldShow(result_data.operation, me.complaint_detail[index].fields, function(fields) {
											me.complaint_detail[index].fields = fields
										})
										//遍历字段 有值的字段 不显示的变为显示
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.isshow == "F" && result_data.operation[f.field]) {
													f.isshow = "T"
												}
											})
										})

										let formFields_annex_ = clone(me.formFields_annex)
										formFields_annex_.map(f => {
											if (f.isshow == "F" && result_data.operation[f.field]) {
												f.isshow = "T"
											}
										})
										me.formFields_annex = formFields_annex_
									}
									else if (d.code == "ssfjpp") {//手术附件品牌
									}
									else if (d.code == "qtx") {//其它项
									}
									else if (d.code == "fkxx") {//反馈信息
										if (result_data.feed_back) {
											feed_back_ = me.getCMPForm_fkxx(result_data.feed_back);
										}
									}
									else if (d.code == "btzd") {//必填字段
									}

									//me.complaint_detail = complaint_detail_
								})

								if (complaint_info_.id) {
									formDataObjBytype_.tsxx = complaint_info_;

									formDataObjBytype_.tsxx.doc_code = result_data.code || null
									formDataObjBytype_.tsxx.doc_date = result_data.doc_date || null

									formDataObjBytype_.tsxx.tw_id = result_data.tw_id || null
									formDataObjBytype_.tsxx.tw_return_comments = result_data.tw_return_comments || null
									if (me.language == "en" && formDataObjBytype_.tsxx.tw_return_comments && formDataObjBytype_.tsxx.tw_return_comments.indexOf("3次Follow-up仍未补充，转审批中。") != -1) {
										formDataObjBytype_.tsxx.tw_return_comments =
										formDataObjBytype_.tsxx.tw_return_comments
										.replace("3次Follow-up仍未补充，转审批中。", "No update after following up. Status returned to 'Submitted'")
									}

									if (me.language !== "en") {
										if (result_data.tw_complaint_validity) {
											if (result_data.tw_complaint_validity == "Yes") {
												formDataObjBytype_.tsxx.tw_complaint_validity = "有效"
											}
											if (result_data.tw_complaint_validity == "No") {
												formDataObjBytype_.tsxx.tw_complaint_validity = "无效"
											}
										}
										if (result_data.tw_quality_rel) {
											if (result_data.tw_quality_rel == "Yes") {
												formDataObjBytype_.tsxx.tw_quality_rel = "相关"
											}
											if (result_data.tw_quality_rel == "No") {
												formDataObjBytype_.tsxx.tw_quality_rel = "不相关"
											}
										}
									}
									else {
										if (result_data.tw_complaint_validity) {
											formDataObjBytype_.tsxx.tw_complaint_validity = result_data.tw_complaint_validity
										}
										if (result_data.tw_quality_rel) {
											formDataObjBytype_.tsxx.tw_quality_rel = result_data.tw_quality_rel
										}
									}

									if (complaint_info_.detail_list && complaint_info_.detail_list.length > 0) {
										formDataObjBytype_.tsxx.detail_list_id = complaint_info_.detail_list[0].id;
										formDataObjBytype_.tsxx.book_detail_id = complaint_info_.detail_list[0].book_detail_id;
										formDataObjBytype_.tsxx.prod_code = complaint_info_.detail_list[0].prod_code;
										formDataObjBytype_.tsxx.prod_name = complaint_info_.detail_list[0].prod_name;
										formDataObjBytype_.tsxx.product_sku = complaint_info_.detail_list[0].product_sku;
										formDataObjBytype_.tsxx.delivery_date = complaint_info_.detail_list[0].delivery_date;
										formDataObjBytype_.tsxx.valid_date = complaint_info_.detail_list[0].valid_date;
										formDataObjBytype_.tsxx.product_level08_code = complaint_info_.detail_list[0].product_level08_code;
										formDataObjBytype_.tsxx.product_level08_name = complaint_info_.detail_list[0].product_level08_name;
										formDataObjBytype_.tsxx.udi = complaint_info_.detail_list[0].udi;
										formDataObjBytype_.tsxx.batch_no = complaint_info_.detail_list[0].batch_no;
										formDataObjBytype_.tsxx.qty = complaint_info_.detail_list[0].qty;
									}

									if (me.complaint_type == "dsl" && !formDataObjBytype_.tsxx.reason_code) {
										formDataObjBytype_.tsxx.reason_code = []
									}
								}

								if (patient_.id) {
									formDataObjBytype_.hzzl = patient_;
								}

								if (feed_back_.id) {
									formDataObjBytype_.fkxx = feed_back_;
								}

								if (result_data.operation.id) {
									formDataObjBytype_.ssqk = result_data.operation;

									if (me.complaint_type == "st" && formDataObjBytype_.ssqk.doctor_opinion_code) {
										let arr = []
										let data_str = formDataObjBytype_.ssqk.doctor_opinion_code
										data_arr = data_str.split(";")
										if (data_arr.length > 0) {
											data_arr.map(e => {
												arr.push(e)
											})

											formDataObjBytype_.ssqk.doctor_opinion_code = arr
										}
									}

									if (result_data.operation.complication_list.length > 0) {
										let arr = [];
										let arr2 = [];
										var complaint_detail_ = clone(me.complaint_detail);

										result_data.operation.complication_list.forEach((f) => {
											if (f.type == "PI") {
												arr.push(f.code)
												formDataObjBytype_.ssqk.complicationList_remark = "Yes"
												complaint_detail_.map(cd=>{
													cd.fields.map(f=>{
														if (f.field == "complicationList") {
															f.isshow = "T"
														}
													})
												})
												if (f.value) {
													//遍历字段 变为显示
													complaint_detail_.map(cd=>{
														cd.fields.map(f=>{
															if (f.field == "complicationList_more") {
																f.isshow = "T"
															}
														})
													})

													formDataObjBytype_.ssqk.complicationList_more = f.value
												}
											}
											if (f.type == "DI") {
												arr2.push(f.code)
												formDataObjBytype_.ssqk.complicationList_remark2 = "Yes"
												complaint_detail_.map(cd=>{
													cd.fields.map(f=>{
														if (f.field == "complicationList2") {
															f.isshow = "T"
														}
													})
												})
												if (f.value) {
													formDataObjBytype_.ssqk.complicationList2_more = f.value

													//遍历字段 变为显示
													complaint_detail_.map(cd=>{
														cd.fields.map(f=>{
															if (f.field == "complicationList2_more") {
																f.isshow = "T"
															}
														})
													})
												}
											}
										})

										me.complaint_detail = complaint_detail_;
										formDataObjBytype_.ssqk.complicationList = arr;
										formDataObjBytype_.ssqk.complicationList2 = arr2;
									}

									formDataObjBytype_.ssfjpp = result_data.operation;
									formDataObjBytype_.qtx = result_data.operation;
								}

								if (formDataObjBytype_.ssqk.complicationList_remark != "Yes") {
									formDataObjBytype_.ssqk.complicationList_remark = "No"
								}
								if (formDataObjBytype_.ssqk.complicationList_remark2 != "Yes") {
									formDataObjBytype_.ssqk.complicationList_remark2 = "No"
								}

								if (result_data.symptom.id) {
									formDataObjBytype_.bbbwqk = result_data.symptom;
									if (formDataObjBytype_.bbbwqk.diameter_vessel_original) {
										formDataObjBytype_.bbbwqk.diameter_vessel_original = formDataObjBytype_.bbbwqk.diameter_vessel_original.toFixed(2)
									}


									if (result_data.symptom.lesion_location_list && result_data.symptom.lesion_location_list.length && result_data.symptom.lesion_location_list.length > 0) {
										let lesions_part_code = []
										if (result_data.symptom.lesion_location_list.length) {
											result_data.symptom.lesion_location_list.map(e=>{
												lesions_part_code.push(e.code)
											})
										}
										formDataObjBytype_.bbbwqk.lesions_part_code = lesions_part_code
									}
									if (result_data.symptom.lesion_type_list && result_data.symptom.lesion_type_list.length && result_data.symptom.lesion_type_list.length > 0) {
										let lesions_type_code = []
										if (result_data.symptom.lesion_type_list.length) {
											result_data.symptom.lesion_type_list.map(e=>{
												lesions_type_code.push(e.code)
											})
										}

										formDataObjBytype_.bbbwqk.lesions_type_code = lesions_type_code
									}

									if (!formDataObjBytype_.bbbwqk.lesions_part_code) {
										formDataObjBytype_.bbbwqk.lesions_part_code = []
									}
									if (!formDataObjBytype_.bbbwqk.lesions_type_code) {
										formDataObjBytype_.bbbwqk.lesions_type_code = []
									}
								}

								//其它项 qtx
								formDataObjBytype_.qtx.remark = result_data.remark || null
								formDataObjBytype_.qtx.notification_mails = result_data.notification_mails || null
								formDataObjBytype_.qtx.notification_mails_ad = result_data.notification_mails_ad || null
								formDataObjBytype_.qtx.sales_sup_ad_name = result_data.sales_sup_ad_name || null
								formDataObjBytype_.qtx.sales_sup_name = result_data.sales_sup_name || null

								me.formDataObjBytype = formDataObjBytype_;

								var complaint_detail_ = clone(me.complaint_detail);
								//遍历字段 有值的字段 不显示的变为显示
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.isshow == "F" && complaint_info_[f.field] && f.field != "salesgroup_company") {
											f.isshow = "T"
										}

										if (result_data.complaint_info && result_data.complaint_info.country) {
											if (f.field == "hospital_name") {
												if (result_data.complaint_info.country == "China" || result_data.complaint_info.country == "CN") {
													f.type = "popup"
												}
												else {
													f.type = "input"
												}
											}
											if (f.field == "hospital_address" || f.field == "hospital_phone") {
												if (result_data.complaint_info.country == "China" || result_data.complaint_info.country == "CN") {
													f.type = "span"
												}
												else {
													f.type = "input"
												}
											}
										}
									})
								})
								me.complaint_detail = complaint_detail_

								if (me.formDataObjBytype.tsxx.prod_type_code) {
									for (var i=0; i<me.complaint_detail.length; i++) {
										var obj_ = me.complaint_detail[i];
										complaint_detail_type[obj_.code] = obj_.fields;
									}
									me.getProdTypeByProdCode(me.formDataObjBytype.tsxx.prod_code, me.complaint_detail, complaint_detail_type)
								}

								if (me.orgtype == "master") {
									me.getSales(null, formDataObjBytype_)
								}
								else {
									if (me.formDataObjBytype.tsxx && me.formDataObjBytype.tsxx.customer_code)
									me.getSales(me.formDataObjBytype.tsxx)
								}

								//客投、品质
								if (result_data.deal) {
									me.formData_kt = result_data.deal

									//遍历字段 有值的字段 不显示的变为显示
									let formFields_kt = clone(me.tableFields_kt)
									formFields_kt.map(f=>{
										if (f.isshow == "F" && result_data.deal[f.field]) {
											f.isshow = "T"
										}

										if (f.field == "quality_user_name" && me.formData_kt.has_effective == 2) {
											f.isshow = "F"
										}
										if ((f.field == "has_bad_event" || f.field == "effective_reason" || f.field == "has_revo") && me.complaint_type == "st") {
											f.isshow = "F"
										}
									})
									me.tableFields_kt = formFields_kt

									if (result_data.deal.deal_file_id) {
										me.getOrderAttach_kt(result_data.deal.deal_file_id)
									}
								}
								if (result_data.accept) {
									me.formData_pz = result_data.accept

									if (me.complaint_type == "yt") {
										me.formData_pz.tslb = result_data.accept.cmp_category_info || ""
									}

									//遍历字段 有值的字段 不显示的变为显示
									let formFields_pz = clone(me.tableFields_pz)
									formFields_pz.map(f=>{
										if (f.isshow == "F" && result_data.accept[f.field]) {
											f.isshow = "T"
										}
									})
									me.tableFields_pz = formFields_pz

									if (result_data.accept.accept_file_id) {
										me.getOrderAttach_pz(result_data.accept.accept_file_id)
									}

									if (result_data.accept.accept_more_list) {
										let data = result_data.accept.accept_more_list

										if (data.length > 0 && data[0].type) {
											for (let i = 1; i < 11; i++) {
												let fieldStr = "code" + i

												let arr = []
												data.map(e => {
													if (e.type == fieldStr) {
														arr.push(e.code)
														if (e.value) {
															me.formData_pz[fieldStr + "_more"] = e.value
														}

														if (e == "Others") {
															//不显示的变为显示
															let formFields_pz1 = clone(me.tableFields_pz)
															formFields_pz1.map(f=>{
																if (f.field == fieldStr + "_more") {
																	f.isshow = "T"
																}
															})
															me.tableFields_pz = formFields_pz1
														}
													}
												})
												me.formData_pz[fieldStr] = arr
											}
										}
										else {
											let arr = []
											data.forEach((f) => {
												arr.push(f.code)

												let formFields = clone(me.tableFields_pz)
												if (f.code == "Others") {
													//遍历字段 变为显示
													formFields.map(e=>{
														if (e.field == "acceptMoreList_more") {
															e.isshow = "T"
														}
													})

													me.formData_pz.acceptMoreList_more = f.value
												}

												for (let i = 1; i < 24; i++) {
													if (f.code == "code" + i) {
														//遍历字段 变为显示
														formFields.map(e=>{
															if (e.field == "code" + i + "_more") {
																e.isshow = "T"
															}
														})

														me.formData_pz["code" + i + "_more"] = f.value
													}
												}

												me.tableFields_pz = formFields
											})
											me.formData_pz.acceptMoreList = arr
										}
									}
								}
							}
						});
					},

					getCMPForm_tsxx(data) {
						var obj_ = {};
						obj_ = clone(data);

						let reason_code = []
						if (data.reason_list && data.reason_list.length > 0) {
							data.reason_list.map(e=>{
								reason_code.push(e.code)
								obj_.reason_code = reason_code
							})
						}

						if (this.complaint_type == "gk" && data.detail_list && data.detail_list.length > 0) {
							var tableDataBytype_ = clone(this.tableDataBytype);
							var detail_list_ = data.detail_list
							if (this.isEditTable1) {
								detail_list_.map(r=>{
									r.isWithinEdit = true;
								})
							}
							tableDataBytype_.tsxx = detail_list_;

							this.tableDataBytype = tableDataBytype_;
						}

						return obj_;
					},
					getCMPForm_hzzl(data) {
						var result_ = {};
						if (data.patient_result_list.length) {
							data.patient_result_list.map(r=>{
								var k_ = r.code;
								var k_id = r.code + "_id";
								var k_name = r.code + "_name";
								var k_desc = r.code + "_desc";

								result_[k_] = true;
								result_[k_id] = r.id;
								result_[k_name] = r.name;
								result_[k_desc] = r.value;
							})
						}

						let history_code = []
						if (data.medical_history_list.length) {
							data.medical_history_list.map(e=>{
								history_code.push(e.code)
							})
						}

						var obj_ = {
							id: data.id,
							cmp_id: data.cmp_id,
							has_patient: data.has_patient || null,
							operation_desc: data.operation_desc || null,

							patient_surname: data.patient_surname || null,
							patient_name: data.patient_name || null,
							patient_age: data.patient_age || null,
							patient_gender_code: data.patient_gender_code || null,
							similar_desc: data.similar_desc || null,
							operation_desc: data.operation_desc || null,

							patient_weight: data.patient_weight || null,
							disease_diabetes_code: data.disease_diabetes_code || null,
							disease_hyperlipidemia_code: data.disease_hyperlipidemia_code || null,
							disease_miocardial_infarction_code: data.disease_miocardial_infarction_code || null,
							disease_hypertension_code: data.disease_hypertension_code || null,
							disease_smoking_code: data.disease_smoking_code || null,
							clotting_disorders_code: data.clotting_disorders_code || null,
							drugs_code: data.drugs_code || null,
							drugs_more: data.drugs_more || null,
							lesions_part_info: data.lesions_part_info || null,
							exists_similar_code: data.exists_similar_code || null,
							similar_desc: data.similar_desc || null,
							allergy_code: data.allergy_code || null,
							allergy_more: data.allergy_more || null,
							clotting_disorders_code: data.clotting_disorders_code || null,

							disease_others: data.disease_others || null,
							patient_id_card: data.patient_id_card || null,
							patient_contact: data.patient_contact || null,
							history_code: history_code || null,
							history_more: data.history_more || null,
							patient_hospital_no: data.patient_hospital_no || null,
						};

						if (data.has_patient && this.isEditTable1) {

							//更改字段属性
							var complaint_detail_ = clone(this.complaint_detail);
							complaint_detail_.map(cd=>{
								if (cd.code == "hzzl") {
									cd.fields.map(f=>{
										f.disabled = false;
									})
								}
							})

							this.complaint_detail = complaint_detail_;
						}

						for(var r_k in result_) {
							obj_[r_k] = result_[r_k];
						}
						return obj_;
					},
					getCMPForm_fkxx(data) {
						//附件
						if (data.file_ids) {
							this.attachList = [];
							this.getfiles(data.file_ids);
						}

						var remedies_ = {};
						if (data.remedies_list.length) {

							data.remedies_list.map(r=>{
								var k_ = r.code;
								var k_id = r.code + "_id";
								var k_name = r.code + "_name";
								var k_desc = r.code + "_desc";

								remedies_[k_] = true;
								remedies_[k_id] = r.id;
								remedies_[k_name] = r.name;
								remedies_[k_desc] = r.value;
							})
						}
						var questionclassify_ = [];
						if (data.questionclassify) {
							questionclassify_ = data.questionclassify.split(";");
						}
						var obj_ = {
							id: data.id,
							cmp_id: data.cmp_id,
							has_search: data.has_search || null,
							happen_date: data.happen_date || null,
							aware_date: data.aware_date || null,
							operation_date: data.operation_date || null,
							operation_again_date: data.operation_again_date || null,
							happen_timeslot_code: data.happen_timeslot_code || null,
							happen_timeslot_name: data.happen_timeslot_name || null,
							directions_used: data.directions_used || null,
							feedback_desc: data.feedback_desc || null,
							suppose_code: data.suppose_code || null,
							questionclassify: questionclassify_,
						};

						for(var r_k in remedies_) {
							obj_[r_k] = remedies_[r_k];
						}

						return obj_;
					},

					getfiles(ids_str) {
						var ids_str_ = ids_str.replace(/;/g, "','");
						var file_ids = ids_str.split(";");
						var formData_file_ids_ = {};
						this.formData_file_ids = {};
						file_ids.map(id=>{
							formData_file_ids_[id] = true;
						})
						this.formData_file_ids = clone(formData_file_ids_);

						this.getOrderAttach(ids_str_);
					},

					//获取订单附件
					getOrderAttach() {
						let me = this;

						let params = {
							isClientMode: false,
							dataname: "orderattach",
							filter: "1=1 and order_id = '" + this.formDataObj_cmp.id + "'",
							orderby: "update_time desc"
						}

						Server.call("root/data/getEntitySet", params, function(result) {
							console.log(result);
							if (result && result.data && result.data.entityset.length > 0) {
								var result_ = result.data.entityset;
								me.attachList = result_;
							}
						});
					},

					//获取客投附件
					getOrderAttach_kt(id) {
						let me = this;

						if (!id) {
							return
						}

						let filter = ""
						let arr = id.split(";")
						arr.map(e => {
							if (!filter) {
								filter += " 1=1 and sys_workorder_file.id = '" + e + "'"
							}
							else {
								if (e == "") {}
								else {
									filter += " or sys_workorder_file.id = '" + e + "'"
								}
							}
						})

						let params = {
							isClientMode: false,
							dataname: "orderattach",
							filter: filter,
							orderby: "update_time desc"
						}

						Server.call("root/data/getEntitySet", params, function(result) {
							console.log(result);
							if (result && result.data && result.data.entityset.length > 0) {
								var result_ = result.data.entityset;
								me.attachList_kt = result_;
							}
							else {
								me.attachList_kt = []
							}
						});
					},

					//获取品质附件
					getOrderAttach_pz(id) {
						let me = this;

						if (!id) {
							return
						}

						let filter = ""
						let arr = id.split(";")
						arr.map(e => {
							if (!filter) {
								filter += " 1=1 and sys_workorder_file.id = '" + e + "'"
							}
							else {
								if (e == "") {}
								else {
									filter += " or sys_workorder_file.id = '" + e + "'"
								}
							}
						})

						let params = {
							isClientMode: false,
							dataname: "orderattach",
							filter: filter,
							orderby: "update_time desc"
						}

						Server.call("root/data/getEntitySet", params, function(result) {
							console.log(result);
							if (result && result.data && result.data.entityset.length > 0) {
								var result_ = result.data.entityset;
								me.attachList_pz = result_;
							}
							else {
								me.attachList_pz = []
							}
						});
					},

					//下载附件
					downLoadAttach(url,name) {
						dealExportByPath(url,name)
					},
					getInfoData222() {
						var me = this;
						this.complaint_detail.map(d=>{
							me.getEndTypeObj[d.code] = false;
							if (d.code == "tsxx") {//投诉信息
								if (me.complaint_type == "gj") {//国际投诉
									me.getCMP_tsxx_gj();
								}
								else {
									me.getCMP_tsxx();
								}
							}
							else if (d.code == "hzzl") {//患者资料
								me.getCMP_hzzl();
							}
							else if (d.code == "bbbwqk") {//病变部位情况
								me.getCMP_bbbwqk();
							}
							else if (d.code == "ssqk") {//手术情况
								me.getCMP_ssqk();
							}
							else if (d.code == "ssfjpp") {//手术附件品牌
								me.getCMP_ssfjpp();
							}
							else if (d.code == "qtx") {//其它项
								me.getCMP_qtx();
							}
							else if (d.code == "fkxx") {//反馈信息
								me.getCMP_fkxx();
							}
							else if (d.code == "btzd") {//必填字段
								me.getCMP_btzd();
							}
						});
					},

					isEndGet() {
						var isend_ = true;
						for (var s in this.getEndTypeObj) {
							if (!this.getEndTypeObj[s]) {
								isend_ = false;
							}
						}

						if (isend_) {
							this.loading_getall = false;
							var formDataObjBytype_ = clone(this.formDataObjBytype);
							this.formDataObjBytype = {};
							this.formDataObjBytype = clone(formDataObjBytype_);

							//加载联动动态选项，仅动态选项的话可直接用预加载加载。
							this.getInitOption();
						}
					},

					getCMP_tsxx_gj() {
						//保存gj tsxx国际投诉信息cmp_international
						var me = this;
						var code_ = "tsxx";
						var dataname_ = "cmp_international";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});

					},
					getCMP_tsxx() {
						//保存tsxx投诉信息cmp_apply
						var me = this;
						var code_ = "tsxx";
						var dataname_ = "cmp_apply";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_hzzl() {
						//保存hzzl患者资料cmp_patient
						//事件后果cmp_patient_result
						var me = this;
						var code_ = "hzzl";
						var dataname_ = "cmp_patient";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_bbbwqk() {
						//保存bbbwqk病变部位情况cmp_symptom
						var me = this;
						var code_ = "bbbwqk";
						var dataname_ = "cmp_symptom";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_ssqk() {
						//保存ssqk手术情况cmp_operation
						var me = this;
						var code_ = "ssqk";
						var dataname_ = "cmp_operation";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_ssfjpp() {
						//保存ssfjpp手术附件品牌cmp_brand
						//心律失常类型cmp_operation_rhythm
						var me = this;
						var code_ = "ssfjpp";
						var dataname_ = "cmp_brand";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_qtx() {
						//保存qtx其它项cmp_other
						//附件cmp_other_file
						//负责人cmp_other_director
						//邮件cmp_other_mail
						var me = this;
						var code_ = "qtx";
						var dataname_ = "cmp_other";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_fkxx() {
						//保存fkxx反馈信息cmp_feedback
						//问题分类数据cmp_feedback_questionclassify
						//补救措施数据cmp_feedback_remedies
						var me = this;
						var code_ = "fkxx";
						var dataname_ = "cmp_feedback";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},
					getCMP_btzd() {
						//保存btzd必填字段cmp_required
						//附件cmp_required_file
						var me = this;
						var code_ = "btzd";
						var dataname_ = "cmp_required";

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "cmp_id='" + this.formDataObj_cmp.id + "'",
						}
						Server.call("root/data/getEntitySet", param_, function(result) {
							me.getEndTypeObj[code_] = true;
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formDataObjBytype[code_] = formData_;
								me.isEndGet();
							}
						});
					},

					complaintTypeChange() {
						this.onServerInitData(true);
					},

					getInfoForm() {
						var me = this;
						var dataname_ = "agCustomer";
						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: "1=1",
						}
						me.formData = {};
						Server.call("root/data/getEntitySet", param_, function(result) {
							console.log(result);
							if (result && result.data) {
								var formData_ = result.data.entityset[0];
								me.formData = formData_;
								//加载联动动态选项，仅动态选项的话可直接用预加载加载。
								me.getInitOption();
							}
						});
					},
					getInfoTable() {

					},

					getInitOption() {
						var me = this;
						var complaint_detail_ = clone(this.complaint_detail);
						complaint_detail_.map(d=>{
							var formData_ = me.formDataObjBytype[d.code];
							d.fields.map(e=>{
								//是选择器，选项是动态加载的，选项是 [], 该表单字段有数据
								if ((e.type == "select" || e.type == "selectbyfilterable") && e.options && e.options.length == 0 && formData_[e.field]) {
									//不同字段的加载
									if (e.field == "prod_id") {
										let param_ = {
											isClientMode: false,
											dataname: "prod_sku",
											filter: " id='" + formData_[e.field] + "'",
										}
										Server.call("root/data/getEntitySet", param_, function(result){
											options_ = result.data.entityset;
											e.options = options_;

											me.showform = false;
											me.$nextTick(() => {
												me.complaint_detail = clone(complaint_detail_);
												me.showform = true;
											});
										});
									}
									else if (e.field == "country") {
										let param_ = {
											isClientMode: false,
											filter: " level='0' and active='1' and code='" + formData_[e.field] + "'",
										}
										Server.call("root/data/getEntitySet/division_level0", param_, function(result){
											options_ = result.data.entityset;
											e.options = options_;

											me.showform = false;
											me.$nextTick(() => {
												me.showform = true;
											});
										});
									}
									else if (e.field == "province") {
										if (e.selectparent) {
											if(!formData_[e.selectparent]) {
												e.options = []
											}
											else {
												var code_ = formData_[e.selectparent];
												let param_ = {
													isClientMode: false,
													filter: " level='1' and active='1' and EXISTS( SELECT * from md_division p where code='" + code_ + "' and md_division.parent_id = p.id)",
												}
												Server.call("root/data/getEntitySet/division_level1", param_, function(result){
													options_ = result.data.entityset;
													e.options = options_;

													me.showform = false;
													me.$nextTick(() => {
														me.showform = true;
													});
												});
											}
										}
									}
									else if (e.field == "city") {
										if (e.selectparent) {
											if(!formData_[e.selectparent]) {
												e.options = []
											}
											else {
												var code_ = formData_[e.selectparent];
												let param_ = {
													isClientMode: false,
													filter: " level='2' and active='1' and EXISTS( SELECT * from md_division p where code='" + code_ + "' and md_division.parent_id = p.id)",
												}
												Server.call("root/data/getEntitySet/division_level2", param_, function(result){
													options_ = result.data.entityset;
													e.options = options_;

													me.showform = false;
													me.$nextTick(() => {
														me.showform = true;
													});
												});
											}
										}
									}
									else if (e.field == "county") {
										if (e.selectparent) {
											if(!formData_[e.selectparent]) {
												e.options = []
											}
											else {
												var code_ = formData_[e.selectparent];
												let param_ = {
													isClientMode: false,
													filter: " level='3' and active='1' and EXISTS( SELECT * from md_division p where code='" + code_ + "' and md_division.parent_id = p.id)",
												}
												Server.call("root/data/getEntitySet/division_level3", param_, function(result){
													options_ = result.data.entityset;
													e.options = options_;

													me.showform = false;
													me.$nextTick(() => {
														me.showform = true;
													});
												});
											}
										}
									}
								}
							})
						})
					},

					formRemoteMethod(obj) {
						var me = this;
						var query_ = obj.query;
						var dataname_ = "";
						var filter_ = "1<>1";
						if (obj.fieldObj.field == "customer_name") {
							dataname_ = "dealerlist";
							filter_ = "name like '%" + query_ + "%'";
							if (this.orgobj.type == "dealer") {
								filter_ += " and id='" + this.orgobj.id + "'"
							}
						}
						else if (obj.fieldObj.field == "agent_platform_name") {
							dataname_ = "dealerlist";
							filter_ = "name like '%" + query_ + "%'";
						}
						else if (obj.fieldObj.field == "prod_id") {
							dataname_ = "prod_sku";
							filter_ = "name like '%" + query_ + "%'";
						}

						let param_ = {
							isClientMode: false,
							dataname: dataname_,
							filter: filter_,
						}

						Server.call("root/data/getEntitySet", param_, function(result) {
							console.log(result);
							if (result && result.data && result.data.entityset && result.data.entityset.length>0) {
								obj.fieldObj.options = result.data.entityset;
							}
						});
					},

					cellVisibleChange(obj, row) {
						let options_ = [];

						if (obj.field == "product_sku") {
							if (obj.selectparent) {
								if(!row[obj.selectparent]) {
									obj.options = []
								}
								else {
									var dataname_ = "";
									var code_ = row[obj.selectparent];
									let param_ = {
										isClientMode: false,
										dataname: dataname_,
										filter: " parentid='" + code_ + "'",
									}
									Server.call("root/data/getEntitySet", param_, function(result){
										options_ = result.data.entityset;
										obj.options = options_;
									});
								}
							}
						}

						else if (obj.field == "customer_address") {
							let me = this
							var typecode = "tsxx";
							let customer_id = me.formDataObjBytype.tsxx.customer_id ? me.formDataObjBytype.tsxx.customer_id : me.formDataObjBytype.tsxx.supplyer_id
							var filter_ = " parent_id='" + customer_id + "'";

							let param_ = {
								isClientMode: false,
								filter: filter_,
								dataname: "v_dealer_address"
							}
							Server.call("root/data/getEntitySet", param_, function(result){
								options_ = result.data.entityset;
								obj.options = options_;

								me.addressOptions = options_
							});
						}
					},

					//订单头点击字段
					onHeaderClick(obj) {
						let me = this;
						let field = obj.obj.field;

						//查看对应单
						if (field == "revo_order_code") {
							let data = {}

							data.id = this.formData_kt.revo_order_id
							data.order_type = "return_"

							var config = {
								totab: true,
								icon: "icon-product",
								text: "订单信息",
								id: data.id,
								url: "../order/sorder/sorder_all_edit.html",
								sceneCode: "browse",
								data: data,
								delta: {},
								parentOption: window.top.tab.selected.option,
							};

							me.doPopupByPublic(config)
						}
					},

					onSelectChange(val) {
						console.log(val)
						let me = this

						var complaint_detail_ = clone(this.complaint_detail);

						if (val.fieldobj.field == "country") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "hospital_name") {
										if (val.data.country == "China" || val.data.country == "CN") {
											f.type = "popup"
										}
										else {
											f.type = "input"
										}
									}
									if (f.field == "hospital_address" || f.field == "hospital_phone") {
										if (val.data.country == "China" || val.data.country == "CN") {
											f.type = "span"
										}
										else {
											f.type = "input"
										}
									}
								})
							})
						}

						if (this.language == "en" && this.complaint_type == "st") {
							this.complaint_detail = complaint_detail_
							return
						}

						//udi
						if (val.fieldobj.field == "udi") {

						}

						if (val.fieldobj.field == "sales_sup_name") {
							let formData_ = clone(me.formDataObjBytype);
							let arr = formData_.qtx.sales_sup_name.split(";");
							formData_.qtx.sales_sup_ad_name = arr[0];
							formData_.qtx.sales_sup_name = arr[1];
							me.formDataObjBytype = formData_;
						}

						complaint_detail_.map(cd=>{
							cd.fields.map(f=>{
								if (f.type == "select" && f.field == val.fieldobj.field) {
									let resultArr = f.options.filter(item => {
										return item.value === val.data[val.fieldobj.field]
									})
									if (resultArr && resultArr.length == 1 && f.field.indexOf("code") != -1) {
										let str = f.field.replace("code", "name")
										this.formDataObjBytype[cd.code][str] = resultArr[0].label;
									}
								}
							})
						})

						//是否对患者造成伤害-是-->伤害表现
						if (val.fieldobj.field == "has_hurt") {
							complaint_detail_.map(cd=>{
								//if (cd.code == "hzzl") {
									cd.fields.map(f=>{
										if (f.field == "hurt_type_code") {
											if (val.data.has_hurt == "Yes") {
												f.isshow = "T"
											}
											else {
												f.isshow = "F"
											}
										}
										if (f.field == "hurt_type_more") {
											if (val.data.has_hurt !== "Yes") {
												f.isshow = "F"
											}
										}
									})
								//}
							})
						}
						//伤害表现-其它-具体描述
						if (val.fieldobj.field == "hurt_type_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "hurt_type_more") {
										if (val.data.hurt_type_code == "Other") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}


						//产品是否出现故障-是-->故障表现 其它-具体描述
						if (val.fieldobj.field == "fault_type_code") {
							this.formDataObjBytype.tsxx.fault_type_detail_code = null
							this.formDataObjBytype.tsxx.fault_type_detail_sub_code = null

							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "fault_type_detail_code") {
										if (val.data.fault_type_code == "Yes-prior to operation") {
											if (me.language == "en") {
												f.options = [
													{label: "Stent strut disruption",value: "Stent strut disruption"},
													{label: "Tip streched",value: "Tip streched"},
													{label: "Labelling or Instruction issue",value: "Labelling or Instruction issue"},
												]
											}
											else {
												f.options = [
													{label: "打开包装发现支架起毛刺",value: "Stent strut disruption"},
													{label: "打开包装发现Tip头拉伸",value: "Tip streched"},
													{label: "标识或说明书问题",value: "Labelling or Instruction issue"},
												]
											}
											f.isshow = "T"
										}
										else if (val.data.fault_type_code == "Yes-during the procedure") {
											if (me.language == "en") {
												f.options = [
													{label: "Cannot pass the lesion",value: "Cannot pass the lesion"},
													{label: "Cannot reach the lesion",value: "Cannot reach the lesion"},
													{label: "Shaft kinked or bent",value: "Shaft kinked or bent"},
													{label: "Stent strut disruption",value: "Stent strut disruption"},
													{label: "Stent fracture",value: "Stent fracture"},
													{label: "Stent deformed",value: "Stent deformed"},
													{label: "Balloon issue",value: "Balloon issue"},
													{label: "Stent dislodgement in vivo",value: "Stent dislodgement in vivo"},
													{label: "Stent dislodgement in vitro",value: "Stent dislodgement in vitro"},
													{label: "Withdrawl resistance",value: "Withdrawl resistance"},
												]
											}
											else {
												f.options = [
													{label: "产品通不过病变",value: "Cannot pass the lesion"},
													{label: "产品不能达到病变",value: "Cannot reach the lesion"},
													{label: "支架断裂",value: "Stent fracture"},
													{label: "球囊问题",value: "Balloon issue"},
													{label: "支架体内脱载",value: "Stent dislodgement in vivo"},
													{label: "支架体外脱载",value: "Stent dislodgement in vitro"},
													{label: "回撤困难",value: "Withdrawl resistance"},
												]
											}
											f.isshow = "T"
										}
										else if (val.data.fault_type_code == "Yes-post operation") {
											if (me.language == "en") {
												f.options = [
													{label: "Stent fracture",value: "Stent fracture"},
													{label: "In-Stent Restenosis",value: "In-Stent Restenosis"},
												]
											}
											else {
												f.options = [
													{label: "支架断裂",value: "Stent fracture"},
													{label: "支架内再狭窄",value: "In-Stent Restenosis"},
												]
											}
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_more") {
										if (val.data.fault_type_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_detail_sub_code") {
										if (val.data.fault_type_detail_code == "Cannot pass the lesion") {
											if (me.language == "en") {
												f.options = [
													{label: "No abnormality",value: "No abnormality"},
													{label: "Shaft kinked/bent",value: "Shaft kinked/bent"},
													{label: "Stent strut disruption",value: "Stent strut disruption"},
													{label: "Stent fracture",value: "Stent fracture"},
												]
											}
											else {
												f.options = [
													{label: "无异常",value: "No abnormality"},
													{label: "输送器打折/折断",value: "Shaft kinked/bent"},
													{label: "支架起毛刺",value: "Stent strut disruption"},
													{label: "支架变形",value: "Stent fracture"},
												]
											}
											f.isshow = "T"
										}
										else if (val.data.fault_type_detail_code == "Balloon issue") {
											if (me.language == "en") {
												f.options = [
													{label: "Balloon No-inflate",value: "Balloon No-inflate"},
													{label: "Balloon leakage/damage",value: "Balloon leakage/damage"},
													{label: "Balloon No-deflate",value: "Balloon No-deflate"},
												]
											}
											else {
												f.options = [
													{label: "球囊无法打开",value: "Balloon No-inflate"},
													{label: "球囊破裂/泄露",value: "Balloon leakage/damage"},
													{label: "球囊无法回缩",value: "Balloon No-deflate"},
												]
											}
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_detail_more") {
										if (val.data.fault_type_detail_code == "Labelling or Instruction issue" || val.data.fault_type_detail_code == "Stent dislodgement in vivo") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_detail_sub_more") {
										if (val.data.fault_type_detail_sub_code == "Balloon No-inflate") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

								})
							})
						}

						//故障表现
						if (val.fieldobj.field == "fault_type_detail_code") {
							this.formDataObjBytype.tsxx.fault_type_detail_sub_code = null

							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "fault_type_detail_sub_code") {
										if (val.data.fault_type_detail_code == "Cannot pass the lesion") {
											if (me.language == "en") {
												f.options = [
													{label: "No abnormality",value: "No abnormality"},
													{label: "Shaft kinked/bent",value: "Shaft kinked/bent"},
													{label: "Stent strut disruption",value: "Stent strut disruption"},
													{label: "Stent fracture",value: "Stent fracture"},
												]
											}
											else {
												f.options = [
													{label: "无异常",value: "No abnormality"},
													{label: "输送器打折/折断",value: "Shaft kinked/bent"},
													{label: "支架起毛刺",value: "Stent strut disruption"},
													{label: "支架变形",value: "Stent fracture"},
												]
											}
											f.isshow = "T"
										}
										else if (val.data.fault_type_detail_code == "Balloon issue") {
											if (me.language == "en") {
												f.options = [
													{label: "Balloon No-inflate",value: "Balloon No-inflate"},
													{label: "Balloon leakage/damage",value: "Balloon leakage/damage"},
													{label: "Balloon No-deflate",value: "Balloon No-deflate"},
												]
											}
											else {
												f.options = [
													{label: "球囊无法打开",value: "Balloon No-inflate"},
													{label: "球囊破裂/泄露",value: "Balloon leakage/damage"},
													{label: "球囊无法回缩",value: "Balloon No-deflate"},
												]
											}
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_detail_more") {
										if (val.data.fault_type_detail_code == "Labelling or Instruction issue" || val.data.fault_type_detail_code == "Stent dislodgement in vivo") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "fault_type_detail_sub_more") {
										if (val.data.fault_type_detail_sub_code == "Balloon No-inflate") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//具体选择-压力值
						if (val.fieldobj.field == "fault_type_detail_sub_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "fault_type_detail_sub_more") {
										if (val.data.fault_type_detail_sub_code == "Balloon No-inflate") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//补救措施--具体描述
						if (val.fieldobj.field == "remedies_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "remedies_more") {
										if (val.data.remedies_code == "Use another Stent/Balloon" || val.data.remedies_code == "Other Action") {
											if (val.data.remedies_code == "Other Action") {
												if (me.language == "en") {
													f.name = "Concrete Content"
												}
												else {
													f.name = "请填写具体内容"
												}
											}
											else {
												if (me.language == "en") {
													f.name = "Specific Description"
												}
												else {
													f.name = "请填写品牌和规格"
												}
											}
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//患者预后--具体描述
						if (val.fieldobj.field == "patient_prognosis_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "patient_prognosis_more") {
										if (val.data.patient_prognosis_code == "others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//手术结果--具体描述
						if (val.fieldobj.field == "operation_result_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "operation_result_more") {
										if (val.data.operation_result_code == "Completed with a different device" || val.data.operation_result_code == "Not completed due to this event" || val.data.operation_result_code == "Not completed due to another reason") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//是否返回产品-是-->返回运单号  否-->原因
						if (val.fieldobj.field == "has_prod_return") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									//返回运单号
									if (f.field == "prod_logistics" || f.field == "return_date") {
										if (val.data.has_prod_return == 1) {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
									//未返回原因
									if (f.field == "un_return_type_code") {
										if (val.data.has_prod_return == 2) {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}

									if (f.field == "un_return_type_more") {
										if (val.data.has_prod_return == 1) {
											f.isshow = "F"
										}
									}
								})
							})
						}
						//其它原因
						if (val.fieldobj.field == "un_return_type_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "un_return_type_more") {
										if (val.data.un_return_type_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//既往史-其它-描述
						if (val.fieldobj.field == "exists_similar_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "similar_desc") {
										if (val.data.exists_similar_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "has_covered_stents") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "covered_stents_code") {
										if (val.data.has_covered_stents == 1) {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "has_knead_after") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "knead_after_more") {
										if (val.data.has_knead_after == 1) {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//过敏反应-其它-名称
						if (val.fieldobj.field == "allergy_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "allergy_more") {
										if (val.data.allergy_code !== "NA") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//靶病变一级部位-其它-具体
						if (val.fieldobj.field == "location_target_lesions_i_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "location_target_lesions_i_other") {
										if (val.data.location_target_lesions_i_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//病变形状-其它-具体
						if (val.fieldobj.field == "lesions_shape_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "lesions_shape_more") {
										if (val.data.lesions_shape_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//术前服药-其它-具体
						if (val.fieldobj.field == "drugs_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "drugs_more") {
										if (val.data.drugs_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "cure_type_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "has_implant") {
										if (val.data.cure_type_code == "复发性治疗") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "has_implant") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "implant_more") {
										if (val.data.has_implant == "1") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "lesions_type_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "lesions_type_more") {
										if (val.data.lesions_type_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "lesions_part_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "lesions_part_more") {
										if (val.data.lesions_part_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "recycling_instrument_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "recycling_instrument_more") {
										if (val.data.recycling_instrument_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "vessels_status_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "vessels_status_more") {
										if (val.data.vessels_status_code == "伴有狭窄") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "disease_preballoon_dilatation_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "pre_dilation_pressure" || f.field == "disease_preballoon_dilatation_spec" || f.field == "disease_preballoon_dilatation_sku" || f.field == "disease_preballoon_dilatation_more") {
										if (val.data.disease_preballoon_dilatation_code == "Yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "disease_retroballoon_dilatation_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "post_dilation_pressure" || f.field == "disease_retroballoon_dilatation_spec" || f.field == "disease_retroballoon_dilatation_sku") {
										if (val.data.disease_retroballoon_dilatation_code == "Yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "drugs_after_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "drugs_after_more") {
										if (val.data.drugs_after_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "has_operation_data") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "coronary_code") {
										if (val.data.has_operation_data == 1) {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
									if (f.field == "coronary_more") {
										if (val.data.coronary_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "coronary_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "coronary_more") {
										if (val.data.coronary_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "is_implanted_otherstents_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "is_implanted_otherstents_spec" || f.field == "is_implanted_otherstents_order" || f.field == "is_implanted_otherstents_overlap") {
										if (val.data.is_implanted_otherstents_code == "Yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "is_balloon_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "is_balloon_more" || f.field == "capacity_balloon" || f.field == "effect_balloon") {
										if (val.data.is_balloon_code == "yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						if (val.fieldobj.field == "doctor_opinion_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "doctor_opinion_more") {
										if (val.data.doctor_opinion_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (val.fieldobj.field == "implanted_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "implanted_more") {
										if (val.data.implanted_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}
						if (val.fieldobj.field == "drug_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "drug_more") {
										if (val.data.drug_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						//
						let formFields_annex_ = clone(this.formFields_annex);

						formFields_annex_.map(f=>{
							if (val.fieldobj.field == "doctor_opinion_code") {
								if (f.field == "doctor_opinion_more") {
									if (val.data.doctor_opinion_code == "Others") {
										f.isshow = "T"
									}
									else {
										f.isshow = "F"
									}
								}
							}
						})
						let tableFields_kt = clone(this.tableFields_kt)
						tableFields_kt.map(e => {
							if (val.fieldobj.field == "has_effective") {
								if (val.data.has_effective == 2) {
									if (e.field == "quality_user_name") {
										e.isshow = "F"
									}
									if (e.field == "effective_reason" && this.complaint_type !== "st") {
										e.isshow = "T"
									}
								}
								else {
									let formData_kt = clone(this.formData_kt)
									formData_kt.effective_reason = null
									this.formData_kt = formData_kt

									if (e.field == "quality_user_name") {
										e.isshow = "F"
									}
									if (e.field == "effective_reason") {
										e.isshow = "F"
									}

									if (this.else_status == 4) {
										if (e.field == "quality_user_name") {
											e.isshow = "T"
										}
									}
								}
							}
						})
						this.tableFields_kt = tableFields_kt

						let tableFields_pz = clone(this.tableFields_pz)
						tableFields_pz.map(f => {
							if (val.fieldobj.field == "has_capa") {
								if (f.field == "capa_code") {
									if (val.data.has_capa == 1) {
										f.isshow = "T"
									}
									else {
										f.isshow = "F"
									}
								}
							}
						})
						this.tableFields_pz = tableFields_pz

						this.formFields_annex = formFields_annex_
						this.complaint_detail = complaint_detail_
					},

					formChange(obj, code) {
						var me = this;
						var fieldObj = obj.fieldobj;

						if (fieldObj.field == "has_patient") {
							//更改字段属性
							var complaint_detail_ = clone(me.complaint_detail);
							complaint_detail_.map(cd=>{
								if (cd.code == code) {
									if (obj.data[fieldObj.field]) {
										cd.fields.map(f=>{
											f.disabled = false;
										})
									}
									else {
										cd.fields.map(f=>{
											if (f.field != "has_patient") {
												f.disabled = true;
											}
										})
									}

								}
							})

							me.complaint_detail = complaint_detail_;
						}

						//
						var complaint_detail_ = clone(this.complaint_detail);

						if (fieldObj.field == "radio_band_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "radio_band_more") {
										if (obj.data.radio_band_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "physiological_band_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "physiological_band_more") {
										if (obj.data.physiological_band_code == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}


						if (fieldObj.field == "sheath_length") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "sheath_length_more") {
										if (obj.data.sheath_length == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "pipe_in_place_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "pipe_in_place_more") {
										if (obj.data.pipe_in_place_code.length == 2 && obj.data.pipe_in_place_code[1] == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "trans_instrument_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "trans_instrument_more") {
										if (obj.data.trans_instrument_code.length == 2 && obj.data.pipe_in_place_code[1] == "Others") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "complicationList_remark") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "complicationList") {
										if (obj.data.complicationList_remark == "Yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
											cd.fields.map(f=>{
												if (f.field == "complicationList_more") {
													f.isshow = "F"
												}
											})
											me.formDataObjBytype.ssqk.complicationList = []
										}
									}
								})
							})
						}

						if (fieldObj.field == "complicationList_remark2") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "complicationList2") {
										if (obj.data.complicationList_remark2 == "Yes") {
											f.isshow = "T"
										}
										else {
											f.isshow = "F"
											cd.fields.map(f=>{
												if (f.field == "complicationList2_more") {
													f.isshow = "F"
												}
											})
											me.formDataObjBytype.ssqk.complicationList2 = []
										}
									}
								})
							})
						}

						if (fieldObj.field == "complicationList") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "complicationList_more") {
										let remark = "";
										obj.data.complicationList.forEach((e) => {
											if (e == "Other Caused By PCI") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}
						if (fieldObj.field == "complicationList2") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "complicationList2_more") {
										let remark = "";
										obj.data.complicationList2.forEach((e) => {
											if (e == "Other Caused By Drug Coating") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "medical_history") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "disease_others") {
										let remark = "";
										obj.data.medical_history.forEach((e) => {
											if (e == "others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "history_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "history_more") {
										let remark = "";
										obj.data.history_code.forEach((e) => {
											if (e == "Others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "doctor_opinion_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "doctor_opinion_more") {
										let remark = "";
										obj.data.doctor_opinion_code.forEach((e) => {
											if (e == "Others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (me.complaint_type !== "dsl") {
							if (fieldObj.field == "reason_code") {
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.field == "reason_more") {
											if (obj.data.reason_code == "Others") {
												f.isshow = "T"
											}
											else {
												f.isshow = "F"
											}
										}
									})
								})
							}
						}
						else {
							if (fieldObj.field == "reason_code") {
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.field == "reason_more") {
											let remark = "";
											obj.data.reason_code.forEach((e) => {
												if (e == "Others") {
													f.isshow = "T"
													remark = "1"
												}
											})
											if (!remark) {
												f.isshow = "F"
											}
										}
									})
								})
							}
						}

						if (fieldObj.field == "lesions_part_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "lesions_part_more") {
										let remark = "";
										obj.data.lesions_part_code.forEach((e) => {
											if (e == "Others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						if (fieldObj.field == "lesions_type_code") {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "lesions_type_more") {
										let remark = "";
										obj.data.lesions_type_code.forEach((e) => {
											if (e == "Others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											f.isshow = "F"
										}
									}
								})
							})
						}

						this.complaint_detail = complaint_detail_

						let formFields = clone(this.tableFields_pz)
						if (fieldObj.field == "acceptMoreList") {
							formFields.map(f=>{
								if (f.field == "acceptMoreList_more") {
									let remark = "";
									obj.data.acceptMoreList.forEach((e) => {
										if (e == "Others") {
											f.isshow = "T"
											remark = "1"
										}
									})
									if (!remark) {
										f.isshow = "F"
									}
								}
								else {
									this.fieldShow(f, obj)
								}
							})
						}

						for (let i = 1; i < 11; i++) {
							let fieldStr = "code" + i
							if (fieldObj.field == fieldStr) {
								formFields.map(f=>{
									if (f.field == fieldStr + "_more") {
										let remark = "";
										obj.data[fieldStr].forEach((e) => {
											if (e == "Others") {
												f.isshow = "T"
												remark = "1"
											}
										})
										if (!remark) {
											if (me.formData_pz[fieldStr + "_more"]) {
												me.formData_pz[fieldStr + "_more"] = null
											}
											f.isshow = "F"
										}
									}
								})
							}
						}

						this.tableFields_pz = formFields
					},

					fieldShow(f, obj) {
						for (let i = 1; i < 24; i++) {
							if (f.field == "code" + i + "_more") {
								let remark = "";
								obj.data.acceptMoreList.forEach((e) => {
									if (e == "code" + i) {
										f.isshow = "T"
										remark = "1"
									}
								})
								if (!remark) {
									f.isshow = "F"
								}
							}
						}
					},

					showPopup(obj, code) {
						var me = this;
						var fieldObj = obj.obj;
						var formDataObjBytype_ = clone(this.formDataObjBytype);

						var formData_ = formDataObjBytype_[code];

						if (fieldObj.field == "operator_name") {
							Root.showPopup({
								url: "../md/customer/popup/employee_list.html",

								width: 800,
								height: 550,
								callback: function(result, callback) {
									formData_.operator_name = result.row.md_description;
									formData_.operator_code = result.row.md_code;
									formData_.apply_dep_code = result.row.dep_code;
									formData_.apply_dep_name = result.row.dep_name;

									me.formData = formData_;
									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "supplyer_name") {
							if (this.orgtype == "dealer") {
								return
							}

							let formData_ = clone(me.formDataObjBytype);
							let c_code = ""
							if (this.complaint_type == "gm") {
								c_code = "0000000210"
							}
							if (this.complaint_type == "xm") {
								c_code = "0000000240"
							}
							if (this.complaint_type == "st") {
								c_code = "0000000260"
							}
							if (this.complaint_type == "dsl") {
								c_code = "0000000230"
							}
							if (this.complaint_type == "gk") {
								c_code = "0000000220"
							}
							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								dataname: "i_customer_1",
								filter: " c_code = '" + c_code + "' and ",
								width: 800,
								height: 550,
								callback: function(result, callback) {
									formData_.tsxx.supplyer_id = result.row.customer_id;
									formData_.tsxx.supplyer_code = result.row.customer_code;
									formData_.tsxx.supplyer_name = result.row.customer_name;

									formData_.tsxx.customer_id = null;
									formData_.tsxx.customer_code = null;
									formData_.tsxx.customer_name = null;

									formData_.tsxx.billingto_code = null;
									formData_.tsxx.billingto_name = null;
									formData_.tsxx.book_detail_id = null;
									formData_.tsxx.prod_code = null;
									formData_.tsxx.prod_name = null;
									formData_.tsxx.batch_no = null;
									formData_.tsxx.qty = null;
									formData_.tsxx.valid_date = null;
									formData_.tsxx.prod_group_code = null;
									formData_.tsxx.prod_group_name = null;

									formData_.tsxx.product_sku = null
									formData_.tsxx.batch_no = null
									formData_.tsxx.udi = null;

									formData_.tsxx.prod_type_code = null;
									formData_.tsxx.prod_type_name = null;

									me.formDataObjBytype = formData_;

									if (me.complaint_type == "dsl") {
										let complaint_detail_ = clone(me.complaint_detail);
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.field == "patient_age" || f.field == "patient_gender_code") {
													if (result.row.country_code && result.row.country_code != "CN") {
														f.required = false
													}
													else {
														f.required = true
													}
												}
											})
										})
										me.complaint_detail = complaint_detail_
									}

									if (me.complaint_type == "dsl" && result.row.country_code && result.row.country_code != "CN") {
										me.dslhw = true
										let formDataObjBytype = clone(me.formDataObjBytype)
										formDataObjBytype.tsxx.customer_address = "无"
										me.formDataObjBytype = formDataObjBytype
									}
									else {
										me.dslhw = false
										me.getDefaultAddressById();
									}

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "customer_name") {
							if (this.orgtype == "dealer") {
								return
							}

							let formData_ = clone(me.formDataObjBytype);
							let dataname = "i_customer_2"
							let c_code = ""
							if (this.complaint_type == "gm") {
								c_code = "0000000210"
							}
							if (this.complaint_type == "xm") {
								c_code = "0000000240"
							}
							if (this.complaint_type == "st") {
								c_code = "0000000260"
							}
							if (this.complaint_type == "dsl") {
								c_code = "0000000230"
							}
							if (this.complaint_type == "yt") {
								c_code = "0000000340"
							}
							if (this.complaint_type == "gk") {
								c_code = "0000000220"
								dataname = "i_customer_1"
							}

							let filter = " c_code = '" + c_code + "' and "
							if (me.formDataObjBytype.tsxx.supplyer_code && me.complaint_type != "yt") {
								filter += " parent_code = '" + me.formDataObjBytype.tsxx.supplyer_code + "' and "
							}
							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								dataname: dataname,
								filter: filter,
								width: 800,
								height: 550,
								callback: function(result, callback) {
									formData_.tsxx.supplyer_id = result.row.parent_id;
									formData_.tsxx.supplyer_code = result.row.parent_code;
									formData_.tsxx.supplyer_name = result.row.parent_name;

									formData_.tsxx.customer_id = result.row.customer_id;
									formData_.tsxx.customer_code = result.row.customer_code;
									formData_.tsxx.customer_name = result.row.customer_name;

									formData_.tsxx.customer_address = null;

									formData_.tsxx.billingto_code = null;
									formData_.tsxx.billingto_name = null;
									formData_.tsxx.book_detail_id = null;
									formData_.tsxx.prod_code = null;
									formData_.tsxx.prod_name = null;
									formData_.tsxx.batch_no = null;
									formData_.tsxx.qty = null;
									formData_.tsxx.valid_date = null;
									formData_.tsxx.prod_group_code = null;
									formData_.tsxx.prod_group_name = null;

									formData_.tsxx.product_sku = null
									formData_.tsxx.batch_no = null
									formData_.tsxx.udi = null;

									formData_.tsxx.prod_type_code = null;
									formData_.tsxx.prod_type_name = null;

									me.formDataObjBytype = formData_;

									me.getDefaultAddressById();

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "sales_user_name") {
							let formData_ = clone(me.formDataObjBytype);
							let BU_Code = ""
							if (this.complaint_type == "gm") {
								BU_Code = "B0101"
							}
							if (this.complaint_type == "dsl") {
								BU_Code = "B0201"
							}
							if (this.complaint_type == "xm") {
								BU_Code = "B0401"
							}
							if (this.complaint_type == "st") {
								BU_Code = "B0501"
							}

							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								dataname: "md_sales_hier",
								filter: " BU_Code_Code = '" + BU_Code + "' and ",
								width: 800,
								height: 550,
								callback: function(result, callback) {
									formData_.tsxx.sales_user_name = result.row.name;
									formData_.tsxx.sales_user_phone = result.row.phone_no;
									formData_.tsxx.sales_user_email = result.row.mail_address;

									me.formDataObjBytype = formData_;

									if (me.complaint_type == "st" || me.complaint_type == "dsl" || me.complaint_type == "yt") {
										me.getSaleHierByAdName(result.row.ad_name)
									}
									if (me.complaint_type == "xm") {
										me.getXmSales()
									}

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "sales_sup_name") {
							let formData_ = clone(me.formDataObjBytype);
							let dataname = "md_sales_hier"
							if (me.complaint_type == "xm") {
								dataname = "cmp_approve_2400"
							}
							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								dataname: dataname,
								width: 800,
								height: 550,
								filter: " ad_name <> '" + localStorage.getItem("ad_name") + "' and ",
								callback: function(result, callback) {
									formData_.qtx.sales_sup_ad_name = result.row.ad_name;
									formData_.qtx.sales_sup_name = result.row.name;

									me.formDataObjBytype = formData_;
									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "notification_mails") {
							let formData_ = clone(me.formDataObjBytype);
							let dataname = "adUserInfo"

							Root.showPopup({
								url: "../order/complaint/popup/mail.html",
								dataname: dataname,
								width: 800,
								height: 550,
								callback: function(result, callback) {
									if (result && result.length > 0) {
										let name_str = ""
										let ad_name_str = ""

										result.map(e => {
											if (!name_str) {
												name_str = e.emp_name
												ad_name_str = e.ad_name
											}
											else {
												name_str += ";" + e.emp_name
												ad_name_str += ";" + e.ad_name
											}
										})

										formData_.qtx.notification_mails = name_str
										formData_.qtx.notification_mails_ad = ad_name_str

										me.formDataObjBytype = formData_;
									}

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "quality_user_name") {
							let formData_ = clone(me.formData_kt);
							dataname = "md_user_hier"
							if (this.complaint_type == "yt") {
								dataname = "cmp_approve_3400"
							}
							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								dataname: dataname,
								width: 800,
								height: 550,
								callback: function(result, callback) {
									formData_.qualityUser = result.row.ad_name;
									formData_.quality_user_name = result.row.name;

									me.formData_kt = formData_;
									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "prod_name") {
							me.getSalesGroupByOrgCode();
						}
						else if (fieldObj.field == "product_sku" || fieldObj.field == "batch_no") {
							if (!me.formDataObjBytype.tsxx.prod_name) {
								let message = "请先选择产品名称！"
								if (me.language == "en") {
									message = "Please select the product name first"
								}
								Root.message({
									type: "warning",
									message: message
								})

								return
							}

							let c_code = ""
							if (this.complaint_type == "gm") {
								c_code = "0000000210"
							}
							if (this.complaint_type == "xm") {
								c_code = "0000000240"
							}
							if (this.complaint_type == "st") {
								c_code = "0000000260"
							}
							if (this.complaint_type == "dsl") {
								c_code = "0000000230"
							}
							if (this.complaint_type == "yt") {
								c_code = "0000000340"
							}

							let org_id = me.formDataObjBytype.tsxx.customer_id ? me.formDataObjBytype.tsxx.customer_id : me.formDataObjBytype.tsxx.supplyer_id

							let formData_ = clone(me.formDataObjBytype);
							Root.showPopup({
								url: "../order/complaint/popup/product_ID_list.html",
								filter: " and org_id = '" + org_id + "' and c_code = '" + c_code + "' and qty > 0 and whse_type = 'prw' and l6_code = '" + me.formDataObjBytype.tsxx.prod_code + "'",
								width: 1100,
								height: 550,
								dataname: "i_book_detail_prod_company",
								delta: {ts_gm: "gm"},
								callback: function(obj, callback) {
									if (obj) {
										let result = obj.row;

										if (result.prodgroup_code) {
											formData_.tsxx.prod_group_code = result.prodgroup_code;
										}

										formData_.tsxx.book_detail_id = result.id || null;
										formData_.tsxx.product_level08_code = result.prod_code || null
										formData_.tsxx.product_level08_name = result.prod_name || null
										formData_.tsxx.product_sku = result.l7_name || null;
										formData_.tsxx.batch_no = result.batch_sn || null;//.replace(/\b(0+)/gi,"")
										formData_.ssqk.prodvalid_date = result.valid_date || null;
										formData_.tsxx.qty = result.qty || null;

										if (result.prodgroup_code && result.prodgroup_name) {
											formData_.tsxx.prod_group_code = result.prodgroup_code
											formData_.tsxx.prod_group_name = result.prodgroup_name
										}
										if (result.prodgroup_code && result.salesgroup_name) {
											formData_.tsxx.billingto_code = result.salesgroup_code
											formData_.tsxx.billingto_name = result.salesgroup_name
										}

										me.formDataObjBytype = formData_;

										//有序列号 查询 UDI 等信息
										let complaint_detail_ = clone(me.complaint_type_detail[me.complaint_type]);

										let complaint_type_ = {
											btzd: [],
											tsxx: clone(me.complaint_type_tsxx[me.complaint_type]),
											fkxx: clone(me.complaint_type_fkxx[me.complaint_type]),
											hzzl: clone(me.complaint_type_hzzl[me.complaint_type]),
											bbbwqk: clone(me.complaint_type_bbbwqk[me.complaint_type]),
											ssqk: clone(me.complaint_type_ssqk[me.complaint_type]),
											ssfjpp: clone(me.complaint_type_ssfjpp[me.complaint_type]),
											qtx: clone(me.complaint_type_qtx[me.complaint_type]),
										}
										if (result.batch_sn) {
											me.getUDIByBatSn(result.batch_sn, formData_, complaint_detail_, complaint_type_)
										}
									}

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "hospital_name") {
							Root.showPopup({
								url: "../md/product/popup/product_list.html",
								width: 950,
								height: 550,
								filter: " and 1=1",
								dataname: "hospital",
								callback: function(obj, callback) {
									if (obj) {
										formData_.hospital_address = obj.row.address;
										formData_.hospital_name = obj.row.name;
										formData_.hospital_code = obj.row.code;
										formData_.hospital_id = obj.row.id;

										me.formData = formData_;
										me.formDataObjBytype = clone(formDataObjBytype_);
									}

									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "field11") {
							Root.showPopup({
								url: "../order/complaint/popup/product_ID_list.html",
								height: 550,
								callback: function(result, callback) {
									formData_.batch_no = result.row.pxh;

									me.formData = formData_;
									me.formDataObjBytype = clone(formDataObjBytype_);
									if (callback) {
										callback();
									}
								}
							});
						}
						else if (fieldObj.field == "salesgroup_company" || fieldObj.field == "prod_group_name"){

							let me = this;
							var filter_ = "";
							var dataname_ = "grouprelation";

							if (this.complaint_type == "gk") {//骨科投诉
								let partner_id = window.top.userinfo.org.id
								if (this.orgtype == "master") {
									partner_id = me.formDataObjBytype.tsxx.supplyer_id
								}
								filter_ = " is_disable=1 and relationship<>'second"+
								"' and partner_id='" + partner_id +
								"' and ifnull(salesgroup_name, '') <> '' and ifnull(prodgroup_name, '') <> ''";
								if (window.top.userinfo && window.top.userinfo.hierarchy && window.top.userinfo.hierarchy.salesgroups) {
									var sales_group_ = "";
									window.top.userinfo.hierarchy.salesgroups.map(sg=>{
										if (!sales_group_) {
											sales_group_ = sg.code;
										}
										else {
											sales_group_ += "','" + sg.code;
										}
									})

									filter_ += " and salesgroup_code in ('2200','2220','2221','2240','2241')";
								}
								else {
									filter_ = " 1 <> 1"
								}

								if (me.isgetTransferConsignmentSAP) {
									filter_ += ' and salesgroup_code in (select code from md_discount_salesgroup)';
								}
							}

							if (this.complaint_type == "gm") {//冠脉投诉
								filter_ = " is_disable=1 and relationship<>'second"+
								"' and partner_id='" + window.top.userinfo.org.id +
								"' and ifnull(salesgroup_name, '') <> '' and ifnull(prodgroup_name, '') <> ''";
								if (window.top.userinfo && window.top.userinfo.hierarchy && window.top.userinfo.hierarchy.salesgroups) {
									filter_ += " and salesgroup_code in ('2100','2108')";
								}
								else {
									filter_ = " 1 <> 1"
								}
							}

							if (this.complaint_type == "xm") {//心脉投诉
								filter_ = " is_disable=1 and relationship<>'second"+
								"' and partner_id='" + window.top.userinfo.org.id +
								"' and ifnull(salesgroup_name, '') <> '' and ifnull(prodgroup_name, '') <> ''";
								if (window.top.userinfo && window.top.userinfo.hierarchy && window.top.userinfo.hierarchy.salesgroups) {
									filter_ += " and salesgroup_code in ('2400','2102')";
								}
								else {
									filter_ = " 1 <> 1"
								}
							}

							Root.showPopup({
								url: "../md/customer/popup/customer_list.html",
								width: 800,
								height: 550,
								dataname: dataname_,
								data: {},
								filter: filter_,
								callback: function(obj, callback) {
									var formDataObjBytype_ = clone(me.formDataObjBytype);
									var tableDataBytype_ = clone(me.tableDataBytype);
									let formData_ = {};
									if (me.complaint_type == "gk") {
										formData_ = formDataObjBytype_.tsxx;

										tableDataBytype_.tsxx = [];
										me.tableDataBytype = tableDataBytype_;
									}

									formData_.billingto_code = obj.row.sales_group;
									formData_.billingto_name = obj.row.salesgroup_name;
									formData_.salesgroup_company = obj.row.salesgroup_company;
									if (!obj.row.salesgroup_company) {
										formData_.salesgroup_company = obj.row.salesgroup_name;
									}
									formData_.prod_group_code = obj.row.prodgroup_code;
									formData_.prod_group_name = obj.row.prodgroup_name;

									if (obj.row.prodgroup_code == "40") {}

									me.formDataObjBytype = formDataObjBytype_;

									if (callback) {
										callback();
									}
								}
							});
						}
					},

					getSalesGroupByOrgCode() {
						let me = this

						let c_code = ""
						if (this.complaint_type == "gm") {
							c_code = "0000000210"
						}
						if (this.complaint_type == "xm") {
							c_code = "0000000240"
						}
						if (this.complaint_type == "st") {
							c_code = "0000000260"
						}
						if (this.complaint_type == "dsl") {
							c_code = "0000000230"
						}
						if (this.complaint_type == "yt") {
							c_code = "0000000340"
						}

						let param = {
							isClientMode: false,
							dataname: "temp_salescompany",
							filter: " 1=1 and c_code = '" + c_code + "'"
						}

						Server.call("root/data/getEntitySet", param, function(result) {
							console.log(result);

							if (!result || !result.data || !result.data.entityset) {
								return
							}

							let salesGroupStr = ""
							result.data.entityset.map(e => {
								if (!salesGroupStr) {
									salesGroupStr = e.s_code + "'"
								}
								else {
									salesGroupStr += ", '" + e.s_code + "'"
								}
							})
							me.getStockDetail(salesGroupStr)
						});
					},

					getStockDetail(salesGroupStr) {
						let me = this
						let dataname = ""
						let org_id = me.formDataObjBytype.tsxx.customer_id ? me.formDataObjBytype.tsxx.customer_id : me.formDataObjBytype.tsxx.supplyer_id
						let filter = " and i_book_detail.org_id = '" + org_id + "' and qty > 0 and i_book_detail.whse_type = 'prw' and salesgroup_code in ('" + salesGroupStr + ")"
						let width = 1200
						if (this.complaint_type == "gm") {
							dataname = "i_prod6_2100"
							filter = ""
							width = 800
						}
						let type = ""
						if (this.complaint_type == "xm") {
							type = "xm"
						}
						let formData_ = clone(me.formDataObjBytype);
						Root.showPopup({
							url: "../order/complaint/popup/product_ID_list.html",
							filter: filter,
							width: width,
							height: 550,
							dataname: dataname,
							delta: {ts_gm: "gm", type: type},
							callback: function(obj, callback) {
								if (obj) {
									let result = obj.row;

									if (result.prodgroup_code) {
										formData_.tsxx.prod_group_code = result.prodgroup_code;
										formData_.tsxx.prod_group_name = result.prodgroup_name;
									}
									if (dataname == "") {
										formData_.tsxx.billingto_code = result.salesgroup_code;
										formData_.tsxx.billingto_name = result.salesgroup_name;
										formData_.tsxx.book_detail_id = result.id
										formData_.tsxx.prod_code = result.prod_code
										formData_.tsxx.prod_name = result.prod_name
										formData_.tsxx.batch_no = result.batch_sn //.replace(/\b(0+)/gi,"")
										formData_.tsxx.qty = 1
										formData_.tsxx.valid_date = result.valid_date

										let complaint_detail_ = clone(me.complaint_type_detail[me.complaint_type]);

										let complaint_type_ = {
											btzd: [],
											tsxx: clone(me.complaint_type_tsxx[me.complaint_type]),
											fkxx: clone(me.complaint_type_fkxx[me.complaint_type]),
											hzzl: clone(me.complaint_type_hzzl[me.complaint_type]),
											bbbwqk: clone(me.complaint_type_bbbwqk[me.complaint_type]),
											ssqk: clone(me.complaint_type_ssqk[me.complaint_type]),
											ssfjpp: clone(me.complaint_type_ssfjpp[me.complaint_type]),
											qtx: clone(me.complaint_type_qtx[me.complaint_type]),
										}

										//有序列号 查询 UDI 等信息
										if (result.batch_sn) {
											me.getUDIByBatSn(result.batch_sn, formData_, complaint_detail_, complaint_type_)
										}

										let url = window.top.RootSetting.url_cmp + "md/getSkuByMaterialCode/" + result.prod_code

										let xhr = new XMLHttpRequest();
										xhr.open('get', url);
										xhr.send();

										xhr.onreadystatechange = function(){
										    if(xhr.readyState === 4 && xhr.status === 200){
												console.log(xhr.responseText)
												let result = JSON.parse(xhr.responseText)
												if (result.code == "200") {
													if (result.data.length > 0) {
														formData_.tsxx.product_sku = result.data[0].Product_level07_Name
														me.formDataObjBytype = formData_;
													}

													me.getProdTypeByProdCode(formData_.tsxx.prod_code, complaint_detail_, complaint_type_);
												}
										    }
										}
									}
									else {
										var complaint_detail_ = clone(me.complaint_detail);
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.field == "udi") {
													f.type = ""
												}
											})
										})
										me.complaint_detail = complaint_detail_

										formData_.tsxx.product_sku = null
										formData_.tsxx.batch_no = null
										formData_.tsxx.udi = null

										formData_.tsxx.prod_code = result.code;
										if (me.language == "en") {
											formData_.tsxx.prod_name = result.en_name;
										}
										if (me.language == "zh") {
											formData_.tsxx.prod_name = result.cn_name;
										}

										me.formDataObjBytype = formData_;
									}
								}

								if (callback) {
									callback();
								}
							}
						});
					},

					getUDIByBatSn(batch_sn, formData_, complaint_detail_, complaint_type_, num) {
						let me = this

						batch_sn = batch_sn.padStart(18,'0')
						if (num && num == 11) {
							batch_sn = batch_sn.padStart(11,'0')
						}

						let url = window.top.RootSetting.url_cmp + "md/getUDIByBatSn/" + batch_sn

						let xhr = new XMLHttpRequest();
						xhr.open('get', url);
						xhr.send();

						xhr.onreadystatechange = function(){
							if(xhr.readyState === 4 && xhr.status === 200){
								let result = JSON.parse(xhr.responseText)
								console.log(result)
								if (result.code == "200") {
									if (result.data && result.data.length > 0) {
										if (result.data.length == 1) {
											formData_.tsxx.udi = result.data[0].UDI || null
											formData_.tsxx.delivery_date = result.data[0].DELIVERDATE || null
											formData_.tsxx.valid_date = result.data[0].VALIDITYDATE || null

											me.formDataObjBytype = formData_;
										}
										let arr = []
										result.data.map(e => {
											list = {}
											list.label = e.UDI
											list.value = e.UDI// + ";" + e.delivery_date + ";" + e.prod_valid
											arr.push(list)
										})

										var complaint_detail_ = clone(me.complaint_detail);
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.field == "udi") {
													f.type = "select"
													f.options = arr
												}
											})
										})

										me.complaint_detail = complaint_detail_
									}
									else {
										var complaint_detail_ = clone(me.complaint_detail);
										complaint_detail_.map(cd=>{
											cd.fields.map(f=>{
												if (f.field == "udi") {
													f.type = ""
												}
											})
										})

										me.complaint_detail = complaint_detail_

										if (num && num == 11) {
											return
										}

										me.getUDIByBatSn(batch_sn, formData_, complaint_detail_, complaint_type_, 11)
									}
								}
							}
						}
					},

					getProdTypeByProdCode(prodCode, complaint_detail_, complaint_type_) {
						let me = this

						let param = {
							isClientMode: false,
							dataname: "i_cmp_prod_category",
							filter: " 1=1 and level8_code = '" + prodCode + "'"
						}

						Server.call("root/data/getEntitySet", param, function(result) {
							console.log(result);

							if (!result || !result.data || !result.data.entityset) {
								return
							}

							if (me.complaint_type == "yt") {
								me.formDataObjBytype.tsxx.prod_type_code = "非血管介入产品"
								me.formDataObjBytype.tsxx.prod_type_name = "非血管介入产品"

								return
							}

							if (result.data.entityset.length == 0) {
								let message = "此物料不支持投诉"
								if (me.language == "en") {
									message = "Complaints about the selected material are not considered"
								}
								Root.message({
									type: "warning",
									message: message
								})

								me.formDataObjBytype.tsxx.book_detail_id = null
								me.formDataObjBytype.tsxx.prod_code = null
								me.formDataObjBytype.tsxx.prod_name = null
								me.formDataObjBytype.tsxx.product_sku = null
								me.formDataObjBytype.tsxx.batch_no = null
								me.formDataObjBytype.tsxx.udi = null
								me.formDataObjBytype.tsxx.valid_date = null
								me.formDataObjBytype.tsxx.delivery_date = null
								me.formDataObjBytype.tsxx.qty = null

								var complaint_detail_ = clone(me.complaint_detail);
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.field == "udi") {
											f.type = ""
										}
									})
								})

								me.complaint_detail = complaint_detail_

								me.$forceUpdate()
							}
							else {
								let data = result.data.entityset[0]

								me.formDataObjBytype.tsxx.prod_type_code = data.trans_code
								me.formDataObjBytype.tsxx.prod_type_name = data.trans_name

								//mapping
								let prodType = ""
								//电生理
								if (data.trans_code == "2300-pipe") {
									prodType = "电生理-导管产品"
								}
								if (data.trans_code == "2300-equipment") {
									prodType = "电生理-设备产品"
								}

								//心脉
								if (data.trans_code == "2400-aorta") {
									prodType = "心脉主动脉"
								}
								if (data.trans_code == "2400-peripheral") {
									prodType = "心脉外周"
								}

								//神通
								if (data.trans_code == "2600-ischemia") {
									prodType = "Apollo/Bridge" //缺血
								}
								if (data.trans_code == "2600-pipe") {
									prodType = "Fastrack/Utrack"  //导管
								}
								// 出血产品 需要细分
								if (data.trans_code == "2600-bleeding") {
									if (data.level4_code == "PHLV400034") {
										prodType = "Tubridge"
									}
									if (data.level4_code == "PHLV400033") {
										prodType = "Willis"
									}
									if (data.level3_code == "PHLV300035") {
										prodType = "Numen"
									}
								}

								if ((me.language == "en" && me.complaint_type == "st") || me.oldObj.sthw) {
									return
								}

								me.changeFieldByProdType(prodType, complaint_detail_, complaint_type_)
							}
						});
					},

					changeFieldByProdType(prodType, complaint_detail_, complaint_type_) {
						let me = this

						if (!complaint_detail_) {
							complaint_detail_ = clone(this.complaint_type_detail[this.complaint_type]);

							complaint_type_ = {
								btzd: [],
								tsxx: clone(this.complaint_type_tsxx[this.complaint_type]),
								fkxx: clone(this.complaint_type_fkxx[this.complaint_type]),
								hzzl: clone(this.complaint_type_hzzl[this.complaint_type]),
								bbbwqk: clone(this.complaint_type_bbbwqk[this.complaint_type]),
								ssqk: clone(this.complaint_type_ssqk[this.complaint_type]),
								ssfjpp: clone(this.complaint_type_ssfjpp[this.complaint_type]),
								qtx: clone(this.complaint_type_qtx[this.complaint_type]),
							}
						}

						//不同产品字段不同
						//fieldByProdType
						complaint_detail_.map(t=>{
							if (t.code == "tsxx") {
								var fields_ = complaint_type_.tsxx;
								this.changeOptionsByProdType(fields_, prodType);
								t.fields = clone(fields_);
							}
							if (t.code == "bbbwqk") {
								if (prodType == "Tubridge" || prodType == "Willis" || prodType == "Numen") {
									var fields_ = this.fieldByProdType.st.bbbwqk.cxcp;
									t.fields = clone(fields_);
								}
								if (prodType == "Fastrack/Utrack") {
									var fields_ = this.fieldByProdType.st.bbbwqk.dgcp;
									t.fields = clone(fields_);
								}

								if (prodType == "Apollo/Bridge") {
									var fields_ = this.fieldByProdType.st.bbbwqk.qxcp;
									t.fields = clone(fields_);
								}

								if (prodType == "心脉主动脉") {
									var fields_ = this.fieldByProdType.xm.bbbwqk.zdm;
									t.fields = clone(fields_);
								}

								if (prodType == "心脉外周") {
									var fields_ = this.fieldByProdType.xm.bbbwqk.wz;
									t.fields = clone(fields_);
								}
							}
							if (t.code == "ssqk") {
								//神通-出血产品
								if (prodType == "Tubridge") {
									var fields_ = this.fieldByProdType.st.ssqk.cxcp.Tubridge;
									t.fields = clone(fields_);
								}
								if (prodType == "Willis") {
									var fields_ = this.fieldByProdType.st.ssqk.cxcp.Willis;
									t.fields = clone(fields_);
								}
								if (prodType == "Numen") {
									var fields_ = this.fieldByProdType.st.ssqk.cxcp.Numen;
									t.fields = clone(fields_);
								}
								if (prodType == "Fastrack/Utrack") {
									var fields_ = this.fieldByProdType.st.ssqk.dgcp;
									t.fields = clone(fields_);
								}

								if (prodType == "Apollo/Bridge") {
									var fields_ = this.fieldByProdType.st.ssqk.qxcp;
									t.fields = clone(fields_);
								}

								if (prodType == "心脉主动脉") {
									var fields_ = this.fieldByProdType.xm.ssqk.zdm;
									t.fields = clone(fields_);
								}

								if (prodType == "心脉外周") {
									var fields_ = this.fieldByProdType.xm.ssqk.wz;
									t.fields = clone(fields_);
								}

								if (prodType == "电生理-导管产品") {
									var fields_ = this.fieldByProdType.dsl.ssqk.dgcp;
									this.changeOptionsByProdType(fields_);
									t.fields = clone(fields_);
								}

								if (prodType == "电生理-设备产品") {
									var fields_ = this.fieldByProdType.dsl.ssqk.sbcp;
									this.changeOptionsByProdType(fields_);
									t.fields = clone(fields_);
								}
							}

							if (t.code == "fkxx") {
								var fields_ = complaint_type_.fkxx;
								t.fields = clone(fields_);
							}
							if (t.code == "hzzl") {
								var fields_ = complaint_type_.hzzl;
								t.fields = clone(fields_);
							}
							if (t.code == "ssfjpp") {
								var fields_ = complaint_type_.ssfjpp;
								t.fields = clone(fields_);
							}
							if (t.code == "qtx") {
								var fields_ = complaint_type_.qtx;
								t.fields = clone(fields_);
							}
						})

						complaint_detail_.map(cd=>{
							if (cd.code == "ssqk") {
								cd.fields.map(e=>{
									if (e.field == "happen_date" || e.field == "aware_date" || e.field == "operation_date") {
										e.pickerOptions = {
											disabledDate(time) {
												return time.getTime() > Date.now()
											}
										}
									}
								})
							}
						})

						if (this.dslhw) {
							complaint_detail_.map(cd=>{
								cd.fields.map(f=>{
									if (f.field == "patient_age" || f.field == "patient_gender_code") {
										f.required = false
									}
								})
							})
						}

						this.complaint_detail = clone(complaint_detail_)

						//遍历字段 有值变为显示
						let complaint_detail_1 = clone(this.complaint_detail)
						complaint_detail_1.map(cd=>{
							me.setFieldShow(this.formDataObjBytype[cd.code], cd.fields, function(fields) {
								cd.fields = fields
							})

							/* cd.fields.map(f=>{
								if (f.isshow == "F" && this.formDataObjBytype[cd.code] && this.formDataObjBytype[cd.code][f.field]) {
									f.isshow = "T"
								}
							}) */
						})
						this.complaint_detail = complaint_detail_1

						if (prodType == "心脉主动脉") {
							let tableFields_pz = clone(this.tableFields_pz)
							tableFields_pz.map(e => {
								if (e.field == "tslb") {
									e.field = "acceptMoreList"
									e.type = "checkboxobj"
									e.options = [
										{code: "code1", name: "打开包装发现问题"},
										{code: "code2", name: "术中操作不当"},
										{code: "code3", name: "产品通不过病变"},
										{code: "code4", name: "支架不能到达病变位置"},
										{code: "code5", name: "支架无法释放或不充分"},
										{code: "code6", name: "支架移位"},
										{code: "code7", name: "支架短缩"},
										{code: "code8", name: "支架释放形态不佳"},
										{code: "code9", name: "支架断裂"},
										{code: "code10", name: "内漏"},
										{code: "code11", name: "系统回撤障碍"},
										{code: "code12", name: "球囊泄漏"},
										{code: "code13", name: "球囊爆破"},
										{code: "Others", name: "其他"},
									]
								}
							})
							this.tableFields_pz = tableFields_pz

							if (!this.formData_pz.acceptMoreList) {
								this.formData_pz.acceptMoreList = []
							}

							if (this.editable == 0 && this.approval_status == 2) {
								this.formAttr_approval_pz.disabled = true
							}
						}
						if (prodType == "心脉外周") {
							let tableFields_pz = clone(this.tableFields_pz)
							tableFields_pz.map(e => {
								if (e.field == "tslb") {
									e.field = "acceptMoreList"
									e.type = "checkboxobj"
									e.options = [
										{code: "code14", name: "术中操作不当"},
										{code: "code15", name: "产品通不过病变"},
										{code: "code16", name: "支架不能到达病变位置"},
										{code: "code17", name: "导管回撤困难"},
										{code: "code18", name: "球囊泄漏"},
										{code: "code19", name: "球囊爆破"},
										{code: "code20", name: "球囊扩张形态不佳"},
										{code: "code21", name: "球囊回抽障碍"},
										{code: "code22", name: "远端无复流"},
										{code: "code23", name: "导管泄露"},
										{code: "Others", name: "其他"},
									]
								}
							})
							this.tableFields_pz = tableFields_pz

							if (!this.formData_pz.acceptMoreList) {
								this.formData_pz.acceptMoreList = []
							}

							if (this.editable == 0 && this.approval_status == 2) {
								this.formAttr_approval_pz.disabled = true
							}
						}

						if (prodType == "电生理-导管产品") {
							this.tableFields_pz = [
								{isshow: "T", field: "code1", name: "打开包装发现有问题", type: "checkboxobj", options: [
									{code: "code1", name: "产品破损"},
									{code: "code2", name: "无菌屏障破损"},
									{code: "code3", name: "产品污染"},
									{code: "code4", name: "标识不符"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code1_more", name: "", type: "input"},

								{isshow: "T", field: "code2", name: "心电信号", type: "checkboxobj", options: [
									{code: "code5", name: "电极无信号"},
									{code: "code6", name: "Sensor无信号"},
									{code: "code7", name: "信号干扰"},
									{code: "code8", name: "信号偏小"},
									{code: "code9", name: "信号漂移"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code2_more", name: "", type: "input"},

								{isshow: "T", field: "code3", name: "温度", type: "checkboxobj", options: [
									{code: "code10", name: "温度上升过快"},
									{code: "code11", name: "温度无法上升"},
									{code: "code12", name: "温度显示High"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code3_more", name: "", type: "input"},

								{isshow: "T", field: "code4", name: "阻抗", type: "checkboxobj", options: [
									{code: "code13", name: "阻抗过高"},
									{code: "code14", name: "阻抗过低"},
									{code: "code15", name: "阻抗无法显示"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code4_more", name: "", type: "input"},

								{isshow: "T", field: "code5", name: "功率", type: "checkboxobj", options: [
									{code: "code16", name: "功率无法到达设定参数"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code5_more", name: "", type: "input"},

								{isshow: "T", field: "code6", name: "弯型", type: "checkboxobj", options: [
									{code: "code17", name: "弯型过长"},
									{code: "code18", name: "弯型过短"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code6_more", name: "", type: "input"},

								{isshow: "T", field: "code7", name: "操控性能", type: "checkboxobj", options: [
									{code: "code19", name: "控弯力大"},
									{code: "code20", name: "控弯不舒适"},
									{code: "code21", name: "电极段过硬"},
									{code: "code22", name: "电极段偏长"},
									{code: "code23", name: "硬度过度不均匀"},
									{code: "code24", name: "过渡段支撑力不足"},
									{code: "code25", name: "主体段支撑硬度不够"},
									{code: "code26", name: "可弯段/电极段硬度不佳"},
									{code: "code27", name: "扭转不佳"},
									{code: "code28", name: "推送不佳"},
									{code: "code29", name: "贴靠不佳"},
									{code: "code30", name: "无法到达靶点"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code7_more", name: "", type: "input"},

								{isshow: "T", field: "code8", name: "产品泄露", type: "checkboxobj", options: [
									{code: "Others", name: "是"},
								], colspan: 2},
								{isshow: "F", field: "code8_more", name: "", type: "input"},

								{isshow: "T", field: "code9", name: "尾线", type: "checkboxobj", options: [
									{code: "code32", name: "插头变形脱落"},
									{code: "code33", name: "尾线断"},
									{code: "code34", name: "无信号"},
									{code: "Others", name: "其它"},
								], colspan: 2},
								{isshow: "F", field: "code9_more", name: "", type: "input"},

								{isshow: "T", field: "code10", name: "其它", type: "checkboxobj", options: [
									{code: "code13", name: "插座变形脱落"},
									{code: "code14", name: "超出使用时间"},
									{code: "code15", name: "射频仪报警"},
									{code: "Others", name: "其它（请具体描述）"},
								], colspan: 2},
								{isshow: "F", field: "code10_more", name: "", type: "input", colspan: 2},

								{isshow: "T", field: "analysis_result", name: "产品分析", type: "input"},
								{isshow: "T", field: "has_capa", name: "CAPA", type: "select", options: [
									{label: "是",value: 1},
									{label: "否",value: 2},
								], required: true},
								{isshow: "F", field: "capa_code", name: "CAPA号", type: "input", required: true},
								{isshow: "T", field: "opinion_code", name: "品质初步意见", type: "select", options: [
									{label: "推测与产品无关",value: "1"},
									{label: "推测与产品有关",value: "2"},
									{label: "推测与患者病灶因素有关",value: "3"},
									{label: "推测与其它临床因素有关",value: "4"},
									{label: "其它",value: "Others"},
								], labelwidth: "200px", colspan: 2},
								{isshow: "T", field: "has_recall", name: "召回", type: "select", options: [
									{label: "是",value: 1},
									{label: "否",value: 2},
								]},
							]

							//遍历字段 有值的字段 不显示的变为显示
							let formFields_pz = clone(me.tableFields_pz)
							formFields_pz.map(f=>{
								if (f.isshow == "F" && me.formData_pz[f.field]) {
									f.isshow = "T"
								}
							})
							me.tableFields_pz = formFields_pz

							if (!this.formData_pz.acceptMoreList || this.formData_pz.acceptMoreList.length == 0) {
								for (let i = 1; i < 11; i++) {
									if (!this.formData_pz["code" + i]) {
										this.formData_pz["code" + i] = []
									}
								}
							}
						}

						let complaint_detail_2 = clone(this.complaint_detail)
						if (me.can2100Fix) {
							me.formAttrBytype.tsxx.disabled = false
							me.formAttrBytype.ssqk.disabled = false


							complaint_detail_2.map(cd=>{
								cd.fields.map(f=>{
									if (f.field !== "reason_code" && f.field !== "reason_more"
									 && f.field !== "receive_date" && f.field !== "operation_desc") {
										 f.disabled = true
									 }
								})
							})
							me.complaint_detail = clone(complaint_detail_2)
						}

						if (me.can2300Fix) {
							me.formAttrBytype.tsxx.disabled = false

							complaint_detail_2.map(cd=>{
								if (cd.code == "tsxx") {
									cd.fields.map(f=>{
										if (f.field !== "reason_code" && f.field !== "reason_more" && f.field !== "has_prod_return"
										 && f.field !== "return_date" && f.field !== "prod_logistics"
										 && f.field !== "un_return_type_code" && f.field !== "un_return_type_more") {
											f.disabled = true
										 }
									})
								}
							})
							me.complaint_detail = clone(complaint_detail_2)
						}
					},

					changeOptionsByProdType(fields_, prodType) {
						if(fields_.length > 0) {
							fields_.map(e=>{
								if (e.field == "reason_code") {
									if (prodType == "心脉主动脉") {
										e.options = [
											{code: "code1", name: "一、打开包装发现问题"},
											{code: "code1_1", name: "二、选错型号"},
											{code: "code1_2", name: "三、经济困难"},
											{code: "code1_3", name: "四、术前操作不当"},
											{code: "code1_4", name: "五、术中操作不当"},
											{code: "code2", name: "六、产品通不过病变"},
											{code: "code3", name: "七、支架不能到达病变位置"},
											{code: "code4", name: "八、支架无法释放或不充分"},
											{code: "code5", name: "九、支架移位"},
											{code: "code6", name: "十、支架短缩"},
											{code: "code7", name: "十一、支架释放形态不佳"},
											{code: "code8", name: "十二、支架断裂"},
											{code: "code9", name: "十三、内漏"},
											{code: "code10", name: "十四、系统回撤障碍"},
											{code: "code11", name: "十五、球囊泄漏"},
											{code: "code12", name: "十六、球囊爆破"},
											{code: "Others", name: "十七、其他"},
										]
									}
									if (prodType == "心脉外周") {
										e.options = [
											{code: "code1", name: "一、打开包装发现问题"},
											{code: "code1_1", name: "二、选错型号"},
											{code: "code1_2", name: "三、经济困难"},
											{code: "code1_3", name: "四、术前操作不当"},
											{code: "code1_4", name: "五、术中操作不当"},
											{code: "code2", name: "六、产品通不过病变"},
											{code: "code3", name: "七、无法到达病变位置"},
											{code: "code4", name: "八、导管回撤困难"},
											{code: "code5", name: "九、球囊泄漏"},
											{code: "code6", name: "十、球囊爆破"},
											{code: "code7", name: "十一、远端无复流"},
											{code: "code8", name: "十二、导管泄漏"},
											{code: "Others", name: "十三、其他"},
										]
									}
									if (prodType == "电生理-导管产品") {
										e.options = [
											{code: "code1", name: "一、无法正常放电"},
											{code: "code2", name: "二、无法到位"},
											{code: "code3", name: "三、无法正常使用"},
											{code: "code7", name: "四、心电信号问题"},
											{code: "code4", name: "五、放电性能"},
											{code: "code5", name: "六、操控性能"},
											{code: "code6", name: "七、sensor"},
											{code: "code8", name: "八、心电信号"},
											{code: "code9", name: "九、盐水灌注"},
											{code: "code10", name: "十、泄漏性能"},
											{code: "code11", name: "十一、匹配性能"},
											{code: "Others", name: "十二、其他"},
										]
									}
									if (prodType == "电生理-设备产品") {
										e.isshow = "F"
									}
								}

								if (e.field == "operation_progress_code") {
									if (prodType == "电生理-导管产品") {
										e.options = [
											{code: "code1", name: "故障无法排除"},
											{code: "code2", name: "故障排除，手术顺利进行"},
										]
									}
									if (prodType == "电生理-设备产品") {
										e.options = [
											{code: "code1", name: "更换微创另一个导管，手术顺利完成"},
											{code: "code2", name: "更换竞品公司导管，手术顺利进行"},
											{code: "code3", name: "未完成手术"},
											{code: "Others", name: "其他"},
										]
									}
								}
							});
						}
					},

					cellButtonClick_annex(obj, code) {
						var click_code_ = obj.column.property;
						if (click_code_ == "row_xz") {
							handleDownload(obj.row.file_id);
						}
						else if (click_code_ == "row_sc") {
							if (obj.row.id) {//调删除根据id

							}
							else {
								this.tableDataBytype.remove(obj.row);
							}
						}
					},

					buttonClick(obj) {
						if (obj.obj.field == "file_id") {
							this.onPopupByUploadFile();
						}
						else if (obj.obj.field == "query_stock") {
							if (obj.formdata && obj.formdata.supplyer_id) {
								if(obj.formdata.billingto_code) {
									this.getStockByFilter(obj.formdata.supplyer_code, obj.formdata.billingto_code, obj.formdata.prod_group_code);
								}
								else {
									Root.message({
										type: 'warning',
										message: '请先选择公司'
									});
								}
							}
							else {
								Root.message({
									type: 'warning',
									message: '请先选择代理商'
								});
							}

						}
					},

					getStockByFilter(org_code, salesgroup_code, prod_group_code) {
						var me = this;

						var url_ = "../order/complaint/popup/product_ID_list.html";
						let org_id = me.formDataObjBytype.tsxx.customer_id ? me.formDataObjBytype.tsxx.customer_id : me.formDataObjBytype.tsxx.supplyer_id
						let filter_ = " and i_book_detail.org_id = '" + org_id + "' and qty > 0 and i_book_detail.whse_type = 'prw' and salesgroup_code = '" + me.formDataObjBytype.tsxx.billingto_code + "'and prodgroup_code = '" + me.formDataObjBytype.tsxx.prod_group_code + "'"

						if (this.formData.type_code == "add_kit") {//新增套件
							url_ = "../orthopaedics/daily/popup/popup_vwbookdetail.html";
							filter_ = "org_name='" + this.formData.supply_name + "' and kit_no='" + row.batch_code + "'"
						}

						var tableData = []
						if (me.complaint_type == "gk") {
							tableData = clone(me.tableDataBytype.tsxx);
						}

						Root.showPopup({
							url: url_,
							width: 1100,
							height: 550,
							filter: filter_,
							dataname: "",
							data: {
								reason_code: "add_prod"
							},
							callback: function(obj, callback) {
								if (obj) {
									obj.row.isWithinEdit = false;
									var obj_row = clone(obj.row);
									var row_ = {};
									row_ = {
										id: uuid_short(),
										isWithinEdit: false,
										book_detail_id: obj_row.id,
										parent_id: me.formDataObj_cmp.id,
										prod_code: obj_row.prod_code,
										prod_name: obj_row.prod_name,

										batch_no: obj_row.batch_no,
										batch_sn: obj_row.batch_sn,
										valid_date: obj_row.valid_date,
										qty: obj_row.qty,

										// 骨科投诉
										has_return: 0,
										has_degassing: 0,
										qty_return: 1,
										prod_sku: obj_row.prod_spec,
										sales_date: "",
										factory_name: "",
										prod_date: "",
									}
									row_.isWithinEdit = true;

									tableData.push(row_);
								}

								if (me.complaint_type == "gk") {
									me.tableDataBytype.tsxx = tableData;
								}

								if (callback) {
									callback();
								}
							}
						});
					},

					onPopupByUploadFile(code) {
						var me = this;
						var analysistype_ = "";
						var delta_ = {filetypelist: []};

						var config = {
							totab: false,
							width: "1500px",
							icon: "icon-product",
							text: "附件上传",
							id: "popupByUploadFile",
							url: "../tool/popup_public_uploadFile.html",
							data: {},
							delta: delta_,
							callback: function(obj, callback) {
								me.uploadFileAfter(obj, code);

								if (callback) {
									callback();
								}
							}
						};

						this.doPopupByPublic(config);
					},

					uploadFileAfter(obj, code) {
						var me = this;
						var file_ = obj.row[0];
						var tableDataBytype_ = clone(this.tableDataBytype);

						var tableDataBytype_c = tableDataBytype_[code];
						var formDataObjBytype_ = clone(this.formDataObjBytype[code]);
						var from_ = {
							cmp_id: formDataObjBytype_.id,
							file_url: file_.url,
							file_id: file_.id,
							file_name: file_.name || " ",
							file_size: file_.size,
							file_state: file_.state || "上传成功"
						};
						var sss =  [];
						tableDataBytype_c.unshift(from_);
						this.tableDataBytype = clone(tableDataBytype_);
					},

					//列表行点击
					onRowClick(obj) {
						//通常用于控制按键的只读/可用
						this.selectedrow.isWithinEdit = false;

						this.selectedrow = obj.row;
						this.selectedrow.isWithinEdit = true;
						this.isrowinput1 = false;

						if (true) {
							this.isrowinput1 = true;
						}
					},
					//列表单元格内容点击
					cellClick(config, obj) {
						var me = this;
						var clickContext = clone(this.selectCellField.clickContext);

						if(this.selectCellField.field == "status"){
							clickContext.hide_close = true;
							clickContext.url = "../md/customer/customer_acct_delivery.html";//Approval_flowid
							clickContext.text = obj.row.md_description;
							clickContext.width = "75vw";
							clickContext.height = "550px";
							if (obj.row.flow_id) {
								clickContext.delta = {
									flow_id: obj.row.flow_id,
								}
							}
						}

						else if(this.selectCellField.field == "md_code"){
							let row = obj.row;

							var sceneCode_ = "";
							if (row.status_detail) {
								sceneCode_ = row.status_detail;
							}

							if (row.create_operate_id != window.top.userinfo.employee.id) {
								sceneCode_ = "browse"
							}

							var text_ = row.md_description;
							var id_ = "acct" + row.id;

							clickContext.totab = true;
							clickContext.url = "../md/customer/customer_acct.html";
							clickContext.text = text_;
							clickContext.id = id_;
							clickContext.sceneCode = sceneCode_;
							clickContext.data = row;
							clickContext.callback = function(obj, callback) {
								me.onQuery();
								if (callback) {
									callback();
								}
							}
						}

						if (clickContext && clickContext.type == "popup" && clickContext.url) {
							var config = {
								totab: clickContext.totab,
								width: "1500px",
								icon: "icon-product",
								text: clickContext.text,
								id: clickContext.id,
								url: clickContext.url,
								sceneCode: clickContext.sceneCode,
								data: obj.row,
								delta: clickContext.delta ? clickContext.delta : {},
								width: clickContext.width,
								height: clickContext.height,
								callback: clickContext.callback
							};

							this.doPopupByPublic(config);
						}
					},

					//表格复选框选中事件
					handleSelectionChange(selection) {
						var idsobj_ = {};
						var ids_ = [];
						var ids_str = "";
						if (selection.length > 0) {
							for (var i = 0; i < selection.length; i++) {
								if (!ids_str) {
									ids_str = "'" + selection[i].id + "'";
								}
								else {
									ids_str += ",'"+ selection[i].id + "'";
								}
								ids_.push(selection[i]);
								idsobj_[selection[i].id] = true;
							}
						}
						this.selectionObj = idsobj_;
						this.selectionList = ids_;
						this.selectionIds = ids_str;
					},

					addTableData() {
						var row_ = {
							parent_id: this.formData.id,
							isWithinEdit: true
						};
						this.rowChange(row_, "add");
					},

					editTableData() {

					},

					rowChange(row, type) {
						if (type == "add") {
							this.tableData.unshift(row);
							this.selectedrow = {};
						}
						else if (type == "del") {
							this.tableData.remove(this.selectedrow);
							this.isrowinput1 = false;
						}
						else if (type == "edit") {
							this.tableData.remove(this.selectedrow);
							this.selectedrow = {};
							this.tableData.unshift(row);
						}
					},

					notActiveTableData() {
						var me = this;
						var row = clone(this.selectedrow);
						if(!row.id) {
							Root.confirm('确定删除-' + row.code + '-吗？', '删除提示', {
							  confirmButtonText: '删除',
							  cancelButtonText: '取消',
							  type: 'warning'
							}).then(() => {
								me.rowChange(row, "del");

								Root.message({
									type: 'success',
									message: '删除成功!'
								});
							}).catch(() => {

								Root.message({
									type: 'info',
									message: '已取消删除'
								});
							});
						}
						else if(!row.id) {
							me.rowChange(row, "del");
						}
						else {//有id
							Root.confirm('确定删除-' + row.code + '-吗？', '删除提示', {
							  confirmButtonText: '删除',
							  cancelButtonText: '取消',
							  type: 'warning'
							}).then(() => {
								let param_table = {
									isClientMode: false,
									dataname: "agCustomerDelivery123",
									id: row.id
								}

								Server.call("root/data/deleteEntity", param_table, function(result) {
									console.log(result);
									me.rowChange(row, "del")
									Root.message({
										type: 'success',
										message: '删除成功!'
									});
								});
							}).catch(() => {
								Root.message({
									type: 'info',
									message: '已取消删除'
								});
							});
						}
					},

					///表格2
					//列表行点击
					onRowClick2(obj) {
						//通常用于控制按键的只读/可用
						this.selectedrow2.isWithinEdit = false;

						this.selectedrow2 = obj.row;
						this.selectedrow2.isWithinEdit = true;
						this.isrowinput2 = false;

						if (true) {
							this.isrowinput2 = true;
						}
					},

					addTableData2() {
						var row_ = {
							parent_id: this.formData.id,
							isWithinEdit: true
						};
						this.rowChange2(row_, "add");
					},

					editTableData2() {

					},

					rowChange2(row, type) {
						if (type == "add") {
							this.tableData2.unshift(row);
							this.selectedrow2 = {};
						}
						else if (type == "del") {
							this.tableData2.remove(this.selectedrow2);
							this.isrowinput2 = false;
						}
						else if (type == "edit") {
							this.tableData2.remove(this.selectedrow2);
							this.selectedrow2 = {};
							this.tableData2.unshift(row);
						}
					},

					notActiveTableData2() {
						var me = this;
						var row = clone(this.selectedrow2);
						if(!row.id) {
							Root.confirm('确定删除-' + row.code + '-吗？', '删除提示', {
							  confirmButtonText: '删除',
							  cancelButtonText: '取消',
							  type: 'warning'
							}).then(() => {
								me.rowChange(row, "del");

								Root.message({
									type: 'success',
									message: '删除成功!'
								});
							}).catch(() => {

								Root.message({
									type: 'info',
									message: '已取消删除'
								});
							});
						}
						else if(!row.id) {
							me.rowChange(row, "del");
						}
						else {//有id
							Root.confirm('确定删除-' + row.code + '-吗？', '删除提示', {
							  confirmButtonText: '删除',
							  cancelButtonText: '取消',
							  type: 'warning'
							}).then(() => {
								let param_table = {
									isClientMode: false,
									dataname: "agCustomerDelivery123",
									id: row.id
								}

								Server.call("root/data/deleteEntity", param_table, function(result) {
									console.log(result);
									me.rowChange(row, "del")
									Root.message({
										type: 'success',
										message: '删除成功!'
									});
								});
							}).catch(() => {
								Root.message({
									type: 'info',
									message: '已取消删除'
								});
							});
						}
					},

					export_excel() {
						this.filterTxt;
						return
						var filter_ = this.getFilterData();
						var url = baseUrl + "file/downloadDataWithExcel?filter="+ filter_ +"&dataname=customerInfo&type=customerDownload&userId=" + localStorage.getItem("id")+"&name=商业清单.xlsx";
						dealExportByPath(url, "商业清单.xlsx");
					},

					emptyPopup(obj) {
						console.log(obj)

						if (obj.obj.field == "customer_name") {
							let formDataObjBytype = clone(this.formDataObjBytype)

							if (this.complaint_type == "yt") {
								formDataObjBytype.tsxx.supplyer_id = null;
								formDataObjBytype.tsxx.supplyer_code = null;
								formDataObjBytype.tsxx.supplyer_name = null;
							}

							formDataObjBytype.tsxx.customer_id = null;
							formDataObjBytype.tsxx.customer_code = null;
							formDataObjBytype.tsxx.customer_name = null;

							formDataObjBytype.tsxx.billingto_code = null;
							formDataObjBytype.tsxx.billingto_name = null;
							formDataObjBytype.tsxx.book_detail_id = null;
							formDataObjBytype.tsxx.prod_code = null;
							formDataObjBytype.tsxx.prod_name = null;
							formDataObjBytype.tsxx.batch_no = null;
							formDataObjBytype.tsxx.qty = null;
							formDataObjBytype.tsxx.valid_date = null;
							formDataObjBytype.tsxx.prod_group_code = null;
							formDataObjBytype.tsxx.prod_group_name = null;

							formDataObjBytype.tsxx.product_sku = null
							formDataObjBytype.tsxx.batch_no = null
							formDataObjBytype.tsxx.udi = null;

							formDataObjBytype.tsxx.prod_type_code = null;
							formDataObjBytype.tsxx.prod_type_name = null;

							this.formDataObjBytype = formDataObjBytype

							// 重新获取地址
							this.getDefaultAddressById()
						}
					},

					getDefaultAddressById(customer_id, callback) {
						var me = this;

						let filter = "parent_id='" + customer_id + "'"
						if (!customer_id) {
							customer_id = me.formDataObjBytype.tsxx.customer_id ? me.formDataObjBytype.tsxx.customer_id : me.formDataObjBytype.tsxx.supplyer_id
							filter = "parent_id='" + customer_id + "'"
						}
						var params = {
							isClientMode: false,
							dataname: "dealer_address",
							filter: filter,
						}

						Server.call("root/data/getEntitySet", params, function(result) {
							console.log(result);
							var address_list = [];
							var defaultAddress_ = {};
							if (result && result.data.entityset) {
								address_list = result.data.entityset;
								address_list.map(e=>{
									if (e.is_default) {
										defaultAddress_ = e;
									}
								})
							}

							if(callback) {
								callback(address_list, defaultAddress_);
							}
							else {
								let formDataObjBytype = clone(me.formDataObjBytype)
								formDataObjBytype.tsxx.customer_address = defaultAddress_
								if (defaultAddress_ = {}) {
									formDataObjBytype.tsxx.customer_address_id = null
									formDataObjBytype.tsxx.customer_address = null
								}
								me.formDataObjBytype = formDataObjBytype
							}

						})
					},

					handleAvatarSuccess(res, file) {
						this.formData_file_ids[res.data.id] = true;
					},

					handleAvatarSuccess_kt(res, file) {
						this.attachListId_kt += res.data.id + ";"
						this.getOrderAttach_kt(this.attachListId_kt)
					},

					handleAvatarSuccess_pz(res, file) {
						this.attachListId_pz += res.data.id + ";"
						this.getOrderAttach_pz(this.attachListId_pz)
					},

					onBeforeUpload(file) {
						let isLt4M = file.size / 1024 / 1024 < 10
						if (!isLt4M) {
							Root.message({
								type: 'info',
								message: '文件大小不能超过10M！'
							})

							return false
						}
					},

					beforeRemove(file, fileList) {
						let me = this

						let fileId = file.response.data.id

						this.attachListId_pz = this.attachListId_pz.replace(fileId, "")
						this.attachListId_kt = this.attachListId_kt.replace(fileId, "")

						let parames = {
							id: fileId,
							isClientMode: false,
							dataname: "orderattach",
						}
						Server.call("root/data/deleteEntity", parames, function(result) {
							me.getOrderAttach()
							me.getOrderAttach_kt(me.attachListId_kt)
							me.getOrderAttach_pz(me.attachListId_pz)
						});
					},

					handleClick(tab, event) {
						console.log(tab, event);
					},

					cleanMailUser() {
						this.formDataObjBytype.qtx.notification_mails = null
						this.formDataObjBytype.qtx.notification_mails_ad = null
					},

					//获取审批节点信息
					getApprovalNodeInformation() {
						let me = this;

						if (!this.formDataObj_cmp || !this.formDataObj_cmp.flow_id) {
							return
						}

						var params = {
							isClientMode: false,
							currentUserId: this.adName,
							instanceId: this.formDataObj_cmp.flow_id,
						}

						Server.call("rootact/instanceHisTaskList", params, function(result) {
							console.log(result);

							if (!result || !result.currentTaskList) {
								return
							}

							me.editable = result.variables.editable || 0

							if (result.variables.status == 1 || result.variables.status == 4) {
								me.approval_status = 1
							}
							if (result.variables.status == 2) {
								me.approval_status = 2
							}

							if (me.editable == 0 && me.approval_status == 1) {
								me.formAttr_approval_kt.disabled = true
							}
							if (me.editable == 0 && me.approval_status == 2) {
								me.formAttr_approval_pz.disabled = true
							}
							if (me.approval_status == 2) {
								me.formAttr_approval_kt.disabled = true
							}

							if (result.variables.status == 4) {
								me.else_status = 4

								let formFields_kt = clone(me.tableFields_kt)
								formFields_kt.map(f=>{
									if (f.field == "quality_user_name") {
										f.isshow = "T"
									}
								})
								me.tableFields_kt = formFields_kt
							}

							if (me.complaint_type == "xm") {
								let formFields_kt = clone(me.tableFields_kt)
								formFields_kt.map(f=>{
									if (f.field == "quality_user_name") {
										f.isshow = "T"
									}
								})
								me.tableFields_kt = formFields_kt
							}

							let formFields_kt = clone(me.tableFields_kt)
							formFields_kt.map(f=>{
								if (f.field == "quality_user_name" && me.formData_kt.has_effective == 2) {
									f.isshow = "F"
								}
								if (f.field == "revo_order_code" && me.formData_kt.revo_order_code) {
									f.isshow = "T"
								}
								if (f.field == "has_bad_event" && me.complaint_type == "st") {
									f.isshow = "F"
								}
								if (f.field == "quality_user_name" && me.complaint_type == "yt") {
									f.name = "PMS小组"
								}
							})
							me.tableFields_kt = formFields_kt

							me.tabKey += 1

							//心脉
							if (me.complaint_type == "xm" && (me.approval_status==1 || me.approval_status==2) && !me.formAttr_approval_kt.disabled) {
								me.can2100Fix = true

								me.formAttrBytype.tsxx.disabled = false
								me.formAttrBytype.ssqk.disabled = false

								let complaint_detail_ = clone(me.complaint_detail);
								complaint_detail_.map(cd=>{
									cd.fields.map(f=>{
										if (f.field !== "reason_code" && f.field !== "reason_more"
										&& f.field !== "receive_date" && f.field !== "operation_desc") {
											f.disabled = true
										}
									})
								})
								me.complaint_detail = complaint_detail_
							}
							//电生理
							if (me.complaint_type == "dsl" && result.variables.can2300Fix) {
								me.can2300Fix = true

								me.formAttrBytype.tsxx.disabled = false

								let complaint_detail_ = clone(me.complaint_detail);
								complaint_detail_.map(cd=>{
									if (cd.code == "tsxx") {
										cd.fields.map(f=>{
											if (f.field !== "reason_code" && f.field !== "reason_more" && f.field !== "has_prod_return"
											 && f.field !== "return_date" && f.field !== "prod_logistics"
											 && f.field !== "un_return_type_code" && f.field !== "un_return_type_more") {
												 f.disabled = true
											 }
										})
									}
								})
								me.complaint_detail = complaint_detail_
							}

							me.showExchange = false

							/* if (result.variables.showRevo && result.variables.showRevo == 1) {
								me.showExchange = true
								me.changeKtFields('first', result.currentTaskList[0].taskName)
							}
							if (result.variables.showExchange) {
								me.changeKtFields('again')
							} */
							me.changeKtFields(result.currentTaskList[0].taskName)
						});
					},

					changeKtFields(taskName) {
						let formFields_kt = clone(this.tableFields_kt)
						//显示 可编辑
						if (taskName == "客投中心结案" || taskName == "渠道审批") {
							this.showExchange = true
							this.formAttr_approval_kt.disabled = false

							formFields_kt.map(f=>{
								if ((f.field == "has_revo" && this.complaint_type !== "st") || f.field == "has_barter") {
									f.isshow = "T"
								}
								else {
									f.disabled = true
								}
							})
						}
						else {
							//有值显示 没值不显示
							formFields_kt.map(f=>{
								if (f.field == "has_revo" &&  this.formData_kt.has_revo) {
									f.isshow = "T"
								}
								if (f.field == "has_barter" && this.formData_kt.has_barter) {
									f.isshow = "T"
								}
							})
						}

						this.tableFields_kt = formFields_kt

						this.tabKey += 1
					},

					// 隐藏Loading并重新调整大小
					hideLoading: function() {
						var me = this;
						this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭
							document.getElementById('page_root').style.display =  "block";
							document.getElementById('page_loading').style.display =  "none";

							//重新设置弹窗宽高
							this.$nextTick(function(){
								let w_ = this.$refs.popup_body.offsetWidth + "px";
								let h_ = this.$refs.popup_body.offsetHeight + "px";
								Root.setPopupWH(w_, h_);

								//设置表格高度
								var el_list = [];
								if (me.$refs.form1 && me.$refs.form1.$el) {
									el_list.push(me.$refs.form1.$el);
								}
								me.detailHeight = setpageHeight(me.$refs.table11.$el, el_list);
							})
						});
					},

					showLoading: function() {
						var me = this;
						this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭
							document.getElementById('page_root').style.display =  "none";
							document.getElementById('page_loading').style.display =  "block";

						});
					},
				}
			});

		</script>
		<style>
			.item_title {
				font-weight: bold;
				padding-left: 13px;
			}

			.el-collapse-item__header:hover {
				background-color: #F5F7FA;
			}

			.el-collapse-item__header.is-active {
				background-color: #E7F3FC !important;
			}
			.act_reason .el-dialog {
				height: 200px;
			}
			.act_reason .el-dialog__header {
				padding-left: 30px;
			}
			.act_reason .el-dialog__body {
				top: 0px;
			}

			.el-table--scrollable-y .el-table__body-wrapper {
			    height: auto !important;
			}
			.h_table .el-table {
			    height: auto !important;
			}
		</style>
	</body>
</html>
